{"/home/travis/build/npmtest/node-npmtest-slack-client/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_slack_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/lib.npmtest_slack_client.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/lib.npmtest_slack_client.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_slack_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_slack_client = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_slack_client = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-slack-client && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_slack_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_slack_client","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_slack_client.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_slack_client.rollup.js'] =","            local.assetsDict['/assets.npmtest_slack_client.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_slack_client.__dirname + '/lib.npmtest_slack_client.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":3,"column":0},"end":{"line":14,"column":2}}},"branchMap":{},"code":["var events = require('./lib/clients/events');","","module.exports = {","  WebClient: require('./lib/clients/web/client'),","  RtmClient: require('./lib/clients/rtm/client'),","  LegacyRtmClient: require('./lib/clients/default/legacy-rtm'),","  CLIENT_EVENTS: {","    WEB: events.CLIENT_EVENTS.WEB,","    RTM: events.CLIENT_EVENTS.RTM,","  },","  RTM_EVENTS: events.RTM_EVENTS,","  RTM_MESSAGE_SUBTYPES: events.RTM_MESSAGE_SUBTYPES,","  MemoryDataStore: require('./lib/data-store/memory-data-store'),","};",""],"l":{"1":1,"3":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":2}}},"branchMap":{},"code":["module.exports = {","  CLIENT_EVENTS: {","    WEB: require('./client').WEB,","    RTM: require('./client').RTM,","  },","  RTM_EVENTS: require('./rtm').EVENTS,","  RTM_MESSAGE_SUBTYPES: require('./rtm').MESSAGE_SUBTYPES,","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/client.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":9,"column":0},"end":{"line":43,"column":2}}},"branchMap":{},"code":["/**"," * API client events."," */","","module.exports.WEB = {","  RATE_LIMITED: 'rate_limited',","};","","module.exports.RTM = {","  CONNECTING: 'connecting',                     // the rtm.start API call has been made, but the","                                                // response has not come back","","  AUTHENTICATED: 'authenticated',               // rtm.start returned successfully with a websocket","                                                // URL to connect to","","  WS_OPENING: 'ws_opening',                     // the underlying websocket connection is being","                                                // opened","","  WS_OPENED: 'ws_opened',                       // the underlying websocket connection has opened","                                                // and messages can be received from the remote","","  RTM_CONNECTION_OPENED: 'open',                // the remote server has acked the socket and sent a","                                                // `hello` message, the connection is now live and","                                                // can be used to send messages","","  DISCONNECT: 'disconnect',                     // the RTM client has disconnected and will not try","                                                // to reconnect again automatically","","  UNABLE_TO_RTM_START: 'unable_to_rtm_start',   // the rtm.start API call failed in some way, this","                                                // may be recoverable","","  WS_CLOSE: 'ws_close',                         // the underlying websocket connection was closed. A","                                                // reconnect may be attempted after this","","  WS_ERROR: 'ws_error',                         // the underlying websocket connection threw an","                                                // an error","","  ATTEMPTING_RECONNECT: 'attempting_reconnect', // the client is attempting to initiate a reconnect","","  RAW_MESSAGE: 'raw_message',                   // a message was received from the RTM API. This","                                                // will also contain the raw message payload that","                                                // was sent from Slack","};",""],"l":{"5":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/rtm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/rtm.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":69,"column":2}},"2":{"start":{"line":71,"column":0},"end":{"line":95,"column":2}}},"branchMap":{},"code":["/**"," * Events sent by the Slack RTM API."," *"," * NOTE: This file was auto-generated and should not be edited manually."," */","","module.exports.EVENTS = {","  ACCOUNTS_CHANGED: 'accounts_changed',","  COMMANDS_CHANGED: 'commands_changed',","  EMAIL_DOMAIN_CHANGED: 'email_domain_changed',","  EMOJI_CHANGED: 'emoji_changed',","  HELLO: 'hello',","  MANUAL_PRESENCE_CHANGE: 'manual_presence_change',","  MESSAGE: 'message',","  PREF_CHANGE: 'pref_change',","  PRESENCE_CHANGE: 'presence_change',","  BOT_ADDED: 'bot_added',","  BOT_CHANGED: 'bot_changed',","  CHANNEL_ARCHIVE: 'channel_archive',","  CHANNEL_CREATED: 'channel_created',","  CHANNEL_DELETED: 'channel_deleted',","  CHANNEL_HISTORY_CHANGED: 'channel_history_changed',","  CHANNEL_JOINED: 'channel_joined',","  CHANNEL_LEFT: 'channel_left',","  CHANNEL_MARKED: 'channel_marked',","  CHANNEL_RENAME: 'channel_rename',","  CHANNEL_UNARCHIVE: 'channel_unarchive',","  FILE_CHANGE: 'file_change',","  FILE_COMMENT_ADDED: 'file_comment_added',","  FILE_COMMENT_DELETED: 'file_comment_deleted',","  FILE_COMMENT_EDITED: 'file_comment_edited',","  FILE_CREATED: 'file_created',","  FILE_DELETED: 'file_deleted',","  FILE_PRIVATE: 'file_private',","  FILE_PUBLIC: 'file_public',","  FILE_SHARED: 'file_shared',","  FILE_UNSHARED: 'file_unshared',","  GROUP_ARCHIVE: 'group_archive',","  GROUP_CLOSE: 'group_close',","  GROUP_HISTORY_CHANGED: 'group_history_changed',","  GROUP_JOINED: 'group_joined',","  GROUP_LEFT: 'group_left',","  GROUP_MARKED: 'group_marked',","  GROUP_OPEN: 'group_open',","  GROUP_RENAME: 'group_rename',","  GROUP_UNARCHIVE: 'group_unarchive',","  IM_CLOSE: 'im_close',","  IM_CREATED: 'im_created',","  IM_HISTORY_CHANGED: 'im_history_changed',","  IM_MARKED: 'im_marked',","  IM_OPEN: 'im_open',","  MPIM_CLOSE: 'mpim_close',","  MPIM_JOINED: 'mpim_joined',","  MPIM_OPEN: 'mpim_open',","  PIN_ADDED: 'pin_added',","  PIN_REMOVED: 'pin_removed',","  REACTION_ADDED: 'reaction_added',","  REACTION_REMOVED: 'reaction_removed',","  STAR_ADDED: 'star_added',","  STAR_REMOVED: 'star_removed',","  TEAM_DOMAIN_CHANGE: 'team_domain_change',","  TEAM_JOIN: 'team_join',","  TEAM_MIGRATION_STARTED: 'team_migration_started',","  TEAM_PLAN_CHANGE: 'team_plan_change',","  TEAM_PREF_CHANGE: 'team_pref_change',","  TEAM_RENAME: 'team_rename',","  USER_CHANGE: 'user_change',","  USER_TYPING: 'user_typing',","};","","module.exports.MESSAGE_SUBTYPES = {","  BOT_MESSAGE: 'bot_message',","  ME_MESSAGE: 'me_message',","  PINNED_ITEM: 'pinned_item',","  UNPINNED_ITEM: 'unpinned_item',","  CHANNEL_ARCHIVE: 'channel_archive',","  CHANNEL_JOIN: 'channel_join',","  CHANNEL_LEAVE: 'channel_leave',","  CHANNEL_NAME: 'channel_name',","  CHANNEL_PURPOSE: 'channel_purpose',","  CHANNEL_TOPIC: 'channel_topic',","  CHANNEL_UNARCHIVE: 'channel_unarchive',","  FILE_COMMENT: 'file_comment',","  FILE_MENTION: 'file_mention',","  FILE_SHARE: 'file_share',","  GROUP_ARCHIVE: 'group_archive',","  GROUP_JOIN: 'group_join',","  GROUP_LEAVE: 'group_leave',","  GROUP_NAME: 'group_name',","  GROUP_PURPOSE: 'group_purpose',","  GROUP_TOPIC: 'group_topic',","  GROUP_UNARCHIVE: 'group_unarchive',","  MESSAGE_CHANGED: 'message_changed',","  MESSAGE_DELETED: 'message_deleted',","};",""],"l":{"7":1,"71":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"WebAPIClient","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}},"2":{"name":"_createFacets","line":38,"loc":{"start":{"line":38,"column":39},"end":{"line":38,"column":64}}},"3":{"name":"registerWebClientFacet","line":45,"loc":{"start":{"line":45,"column":18},"end":{"line":45,"column":57}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"6":{"start":{"line":22,"column":0},"end":{"line":32,"column":1}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":30}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":46}},"9":{"start":{"line":28,"column":2},"end":{"line":31,"column":4}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":38}},"11":{"start":{"line":38,"column":0},"end":{"line":49,"column":2}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":15}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":57}},"15":{"start":{"line":44,"column":2},"end":{"line":44,"column":45}},"16":{"start":{"line":45,"column":2},"end":{"line":48,"column":11}},"17":{"start":{"line":46,"column":4},"end":{"line":46,"column":38}},"18":{"start":{"line":47,"column":4},"end":{"line":47,"column":35}},"19":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":19},"end":{"line":23,"column":23}},{"start":{"line":23,"column":27},"end":{"line":23,"column":29}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":21},"end":{"line":28,"column":43}},{"start":{"line":28,"column":47},"end":{"line":31,"column":3}}]}},"code":["/**"," *"," */","","var bind = require('lodash').bind;","var forEach = require('lodash').forEach;","var inherits = require('inherits');","","var BaseAPIClient = require('../client');","var facets = require('./facets/index');","","","/**"," * Slack Web API client."," *"," * @param token The Slack API token to use with this client."," * @param {Object=} opts"," * @param {Object} opts.retryConfig The configuration to use for the retry operation,"," *     {@see https://github.com/SEAPUNK/node-retry}"," * @constructor"," */","function WebAPIClient(token, opts) {","  var clientOpts = opts || {};","","  BaseAPIClient.call(this, token, clientOpts);","","  // Attempts 5 retries within 5 minutes, with exponential backoff","  this.retryConfig = clientOpts.retryConfig || {","    retries: 5,","    factor: 3.9,","  };","}","","inherits(WebAPIClient, BaseAPIClient);","","","/** @inheritDocs **/","WebAPIClient.prototype._createFacets = function _createFacets() {","  var newFacet;","  var makeAPICall;","","  WebAPIClient.super_.prototype._createFacets.call(this);","","  makeAPICall = bind(this.makeAPICall, this);","  forEach(facets, function registerWebClientFacet(Facet) {","    newFacet = new Facet(makeAPICall);","    this[newFacet.name] = newFacet;","  }, this);","};","","","module.exports = WebAPIClient;",""],"l":{"5":1,"6":1,"7":1,"9":1,"10":1,"22":1,"23":0,"25":0,"28":0,"34":1,"38":1,"39":0,"40":0,"42":0,"44":0,"45":0,"46":0,"47":0,"52":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":1,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"BaseAPIClient","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"2":{"name":"emit","line":71,"loc":{"start":{"line":71,"column":31},"end":{"line":71,"column":47}}},"3":{"name":"_createFacets","line":81,"loc":{"start":{"line":81,"column":40},"end":{"line":81,"column":65}}},"4":{"name":"registerDataStore","line":89,"loc":{"start":{"line":89,"column":44},"end":{"line":89,"column":82}}},"5":{"name":"_callTransport","line":103,"loc":{"start":{"line":103,"column":41},"end":{"line":103,"column":80}}},"6":{"name":"handleTransportResponse","line":111,"loc":{"start":{"line":111,"column":32},"end":{"line":111,"column":97}}},"7":{"name":"retryRateLimitedRequest","line":139,"loc":{"start":{"line":139,"column":19},"end":{"line":139,"column":54}}},"8":{"name":"attemptTransportCall","line":181,"loc":{"start":{"line":181,"column":18},"end":{"line":181,"column":50}}},"9":{"name":"makeAPICall","line":194,"loc":{"start":{"line":194,"column":38},"end":{"line":194,"column":85}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":55}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":73}},"11":{"start":{"line":31,"column":0},"end":{"line":66,"column":1}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"13":{"start":{"line":38,"column":2},"end":{"line":38,"column":22}},"14":{"start":{"line":41,"column":2},"end":{"line":41,"column":66}},"15":{"start":{"line":44,"column":2},"end":{"line":44,"column":55}},"16":{"start":{"line":47,"column":2},"end":{"line":47,"column":50}},"17":{"start":{"line":54,"column":2},"end":{"line":57,"column":4}},"18":{"start":{"line":63,"column":2},"end":{"line":63,"column":56}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":23}},"20":{"start":{"line":68,"column":0},"end":{"line":68,"column":38}},"21":{"start":{"line":71,"column":0},"end":{"line":74,"column":2}},"22":{"start":{"line":72,"column":2},"end":{"line":72,"column":61}},"23":{"start":{"line":73,"column":2},"end":{"line":73,"column":34}},"24":{"start":{"line":81,"column":0},"end":{"line":82,"column":2}},"25":{"start":{"line":89,"column":0},"end":{"line":91,"column":2}},"26":{"start":{"line":90,"column":2},"end":{"line":90,"column":29}},"27":{"start":{"line":103,"column":0},"end":{"line":184,"column":2}},"28":{"start":{"line":105,"column":2},"end":{"line":105,"column":23}},"29":{"start":{"line":106,"column":2},"end":{"line":106,"column":19}},"30":{"start":{"line":107,"column":2},"end":{"line":107,"column":19}},"31":{"start":{"line":109,"column":2},"end":{"line":109,"column":50}},"32":{"start":{"line":111,"column":2},"end":{"line":179,"column":4}},"33":{"start":{"line":112,"column":4},"end":{"line":112,"column":19}},"34":{"start":{"line":113,"column":4},"end":{"line":113,"column":17}},"35":{"start":{"line":114,"column":4},"end":{"line":114,"column":16}},"36":{"start":{"line":115,"column":4},"end":{"line":115,"column":21}},"37":{"start":{"line":116,"column":4},"end":{"line":116,"column":21}},"38":{"start":{"line":118,"column":4},"end":{"line":124,"column":5}},"39":{"start":{"line":119,"column":6},"end":{"line":123,"column":7}},"40":{"start":{"line":120,"column":8},"end":{"line":120,"column":38}},"41":{"start":{"line":122,"column":8},"end":{"line":122,"column":15}},"42":{"start":{"line":128,"column":4},"end":{"line":174,"column":5}},"43":{"start":{"line":135,"column":6},"end":{"line":159,"column":7}},"44":{"start":{"line":136,"column":8},"end":{"line":136,"column":36}},"45":{"start":{"line":137,"column":8},"end":{"line":137,"column":58}},"46":{"start":{"line":138,"column":8},"end":{"line":138,"column":37}},"47":{"start":{"line":139,"column":8},"end":{"line":143,"column":21}},"48":{"start":{"line":141,"column":10},"end":{"line":141,"column":57}},"49":{"start":{"line":142,"column":10},"end":{"line":142,"column":39}},"50":{"start":{"line":145,"column":8},"end":{"line":145,"column":63}},"51":{"start":{"line":153,"column":8},"end":{"line":153,"column":96}},"52":{"start":{"line":154,"column":8},"end":{"line":158,"column":9}},"53":{"start":{"line":155,"column":10},"end":{"line":155,"column":28}},"54":{"start":{"line":157,"column":10},"end":{"line":157,"column":17}},"55":{"start":{"line":161,"column":6},"end":{"line":166,"column":7}},"56":{"start":{"line":162,"column":8},"end":{"line":162,"column":40}},"57":{"start":{"line":165,"column":8},"end":{"line":165,"column":71}},"58":{"start":{"line":168,"column":6},"end":{"line":173,"column":7}},"59":{"start":{"line":169,"column":8},"end":{"line":169,"column":39}},"60":{"start":{"line":172,"column":8},"end":{"line":172,"column":43}},"61":{"start":{"line":178,"column":4},"end":{"line":178,"column":14}},"62":{"start":{"line":181,"column":2},"end":{"line":183,"column":5}},"63":{"start":{"line":182,"column":4},"end":{"line":182,"column":51}},"64":{"start":{"line":194,"column":0},"end":{"line":209,"column":2}},"65":{"start":{"line":195,"column":2},"end":{"line":195,"column":72}},"66":{"start":{"line":197,"column":2},"end":{"line":203,"column":4}},"67":{"start":{"line":205,"column":2},"end":{"line":208,"column":5}},"68":{"start":{"line":212,"column":0},"end":{"line":212,"column":31}}},"branchMap":{"1":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":21},"end":{"line":41,"column":37}},{"start":{"line":41,"column":41},"end":{"line":41,"column":65}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":19},"end":{"line":44,"column":33}},{"start":{"line":44,"column":37},"end":{"line":44,"column":54}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":19},"end":{"line":47,"column":33}},{"start":{"line":47,"column":37},"end":{"line":47,"column":49}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":27}},{"start":{"line":63,"column":31},"end":{"line":63,"column":55}}]},"5":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"6":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"7":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"8":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":6},"end":{"line":135,"column":6}},{"start":{"line":135,"column":6},"end":{"line":135,"column":6}}]},"9":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]}},"code":["/**"," *"," */","","var EventEmitter = require('eventemitter3');","var async = require('async');","var bind = require('lodash').bind;","var inherits = require('inherits');","var retry = require('retry');","var urlJoin = require('url-join');","","var WEB_CLIENT_EVENTS = require('./events/client').WEB;","var getLogger = require('../helpers').getLogger;","var helpers = require('./helpers');","var requestsTransport = require('./transports/request').requestTransport;","","","/**"," * Base client for both the RTM and web APIs."," * @param {string} token The Slack API token to use with this client."," * @param {Object} opts"," * @param {String} opts.slackAPIUrl The Slack API URL."," * @param {String} opts.userAgent The user-agent to use, defaults to node-slack."," * @param {Function} opts.transport Function to call to make an HTTP call to the Slack API."," * @param {string=} opts.logLevel The log level for the logger."," * @param {Function=} opts.logger Function to use for log calls, takes (logLevel, logString) params."," * @param {Number} opts.maxRequestConcurrency The max # of concurrent requests to make to Slack's"," *     API's, defaults to 5."," * @constructor"," */","function BaseAPIClient(token, opts) {","  EventEmitter.call(this);","","  /**","   * @type {string}","   * @private","   */","  this._token = token;","","  /** @type {string} */","  this.slackAPIUrl = opts.slackAPIUrl || 'https://slack.com/api/';","","  /** @type {Function} */","  this.transport = opts.transport || requestsTransport;","","  /** @type {string} */","  this.userAgent = opts.userAgent || 'node-slack';","","  /**","   *","   * @type {Object}","   * @private","   */","  this._requestQueue = async.priorityQueue(","    bind(this._callTransport, this),","    opts.maxRequestConcurrency","  );","","  /**","   * The logger function attached to this client.","   * @type {Function}","   */","  this.logger = opts.logger || getLogger(opts.logLevel);","","  this._createFacets();","}","","inherits(BaseAPIClient, EventEmitter);","","","BaseAPIClient.prototype.emit = function emit() {","  BaseAPIClient.super_.prototype.emit.apply(this, arguments);","  this.logger('debug', arguments);","};","","","/**"," * Initializes each of the API facets."," * @protected"," */","BaseAPIClient.prototype._createFacets = function _createFacets() {","};","","","/**"," * Attaches a data-store to the client instance."," * @param {SlackDataStore} dataStore"," */","BaseAPIClient.prototype.registerDataStore = function registerDataStore(dataStore) {","  this.dataStore = dataStore;","};","","","/**"," * Calls the supplied transport function and processes the results."," *"," * This will also manage 429 responses and retry failed operations."," *"," * @param {object} task The arguments to pass to the transport."," * @param {function} queueCb Callback to signal to the request queue that the request has completed."," * @protected"," */","BaseAPIClient.prototype._callTransport = function _callTransport(task, queueCb) {","  // TODO(leah): Add some logging to this function as it's kind of complex","  var args = task.args;","  var cb = task.cb;","  var _this = this;","","  var retryOp = retry.operation(this.retryConfig);","","  var handleTransportResponse = function handleTransportResponse(err, headers, statusCode, body) {","    var headerSecs;","    var headerMs;","    var httpErr;","    var jsonResponse;","    var jsonParseErr;","","    if (err) {","      if (!retryOp.retry(err)) {","        cb(retryOp.mainError(), null);","      } else {","        return;","      }","    }","","    // NOTE: this assumes that non-200 codes simply won't happen, as the Slack API policy is to","    //       return a 200 with an error property","    if (statusCode !== 200) {","      // There are only a couple of possible bad cases here:","      //   - 429: the application is being rate-limited. The client is designed to automatically","      //          respect this","      //   - 4xx or 5xx: something bad, but probably recoverable, has happened, so requeue the","      //          request","","      if (statusCode === 429) {","        _this._requestQueue.pause();","        headerSecs = parseInt(headers['Retry-After'], 10);","        headerMs = headerSecs * 1000;","        setTimeout(function retryRateLimitedRequest() {","          // Don't retry limit requests that were rejected due to retry-after","          _this.transport(args, handleTransportResponse);","          _this._requestQueue.resume();","        }, headerMs);","","        _this.emit(WEB_CLIENT_EVENTS.RATE_LIMITED, headerSecs);","      } else {","        // If this is reached, it means an error outside the normal error logic was received. These","        // should be very unusual as standard errors come back with a 200 code and an \"error\"","        // property.","        //","        // Given that, assume that something really weird happened and retry the request as normal.","","        httpErr = new Error('Unable to process request, received bad ' + statusCode + ' error');","        if (!retryOp.retry(httpErr)) {","          cb(httpErr, null);","        } else {","          return;","        }","      }","    } else {","      try {","        jsonResponse = JSON.parse(body);","      } catch (parseErr) {","        // TODO(leah): Emit an event here?","        jsonParseErr = new Error('unable to parse Slack API Response');","      }","","      try {","        cb(jsonParseErr, jsonResponse);","      } catch (callbackErr) {","        // Never retry requests that fail in the callback","        _this.logger('error', callbackErr);","      }","    }","","    // This is always an empty callback, even if there's an error, as it's used to signal the","    // request queue that a request has completed processing, and nothing else.","    queueCb();","  };","","  retryOp.attempt(function attemptTransportCall() {","    _this.transport(args, handleTransportResponse);","  });","};","","","/**"," * Makes a call to the Slack API."," *"," * @param {String} endpoint The API endpoint to send to."," * @param {Object=} optData The data send to the Slack API."," * @param {function} optCb The callback to run on completion."," */","BaseAPIClient.prototype.makeAPICall = function makeAPICall(endpoint, optData, optCb) {","  var apiCallArgs = helpers.getAPICallArgs(this._token, optData, optCb);","","  var args = {","    url: urlJoin(this.slackAPIUrl, endpoint),","    data: apiCallArgs.data,","    headers: {","      'User-Agent': this.userAgent,","    },","  };","","  this._requestQueue.push({","    args: args,","    cb: apiCallArgs.cb,","  });","};","","","module.exports = BaseAPIClient;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":1,"14":1,"15":1,"31":1,"32":0,"38":0,"41":0,"44":0,"47":0,"54":0,"63":0,"65":0,"68":1,"71":1,"72":0,"73":0,"81":1,"89":1,"90":0,"103":1,"105":0,"106":0,"107":0,"109":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"118":0,"119":0,"120":0,"122":0,"128":0,"135":0,"136":0,"137":0,"138":0,"139":0,"141":0,"142":0,"145":0,"153":0,"154":0,"155":0,"157":0,"161":0,"162":0,"165":0,"168":0,"169":0,"172":0,"178":0,"181":0,"182":0,"194":1,"195":0,"197":0,"205":0,"212":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getLogger","line":16,"loc":{"start":{"line":16,"column":16},"end":{"line":16,"column":62}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":61}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}},"4":{"start":{"line":16,"column":0},"end":{"line":22,"column":2}},"5":{"start":{"line":17,"column":2},"end":{"line":20,"column":5}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":34}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":11},"end":{"line":18,"column":22}},{"start":{"line":18,"column":26},"end":{"line":18,"column":32}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":17},"end":{"line":19,"column":29}},{"start":{"line":19,"column":33},"end":{"line":19,"column":55}}]}},"code":["/**"," * Top level helpers."," */","","var ConsoleTransport = require('winston').transports.Console;","var bind = require('lodash').bind;","var winston = require('winston');","","","/**"," *"," * @param {string} optLogLevel"," * @param {Object} optTransport"," * @returns {function(this:*)|Function|*}"," */","var getLogger = function getLogger(optLogLevel, optTransport) {","  var logger = new winston.Logger({","    level: optLogLevel || 'info',","    transports: [optTransport || new ConsoleTransport()],","  });","  return bind(logger.log, logger);","};","","","module.exports.getLogger = getLogger;",""],"l":{"5":1,"6":1,"7":1,"16":1,"17":0,"21":0,"25":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"getData","line":18,"loc":{"start":{"line":18,"column":14},"end":{"line":18,"column":44}}},"2":{"name":"getValidData","line":21,"loc":{"start":{"line":21,"column":22},"end":{"line":21,"column":54}}},"3":{"name":"getAPICallArgs","line":46,"loc":{"start":{"line":46,"column":21},"end":{"line":46,"column":68}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"7":{"start":{"line":18,"column":0},"end":{"line":43,"column":2}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":56}},"9":{"start":{"line":21,"column":2},"end":{"line":35,"column":5}},"10":{"start":{"line":22,"column":4},"end":{"line":34,"column":5}},"11":{"start":{"line":25,"column":6},"end":{"line":33,"column":7}},"12":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"13":{"start":{"line":27,"column":10},"end":{"line":27,"column":29}},"14":{"start":{"line":29,"column":10},"end":{"line":29,"column":45}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"16":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":26}},"18":{"start":{"line":42,"column":2},"end":{"line":42,"column":17}},"19":{"start":{"line":46,"column":0},"end":{"line":71,"column":2}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":11}},"21":{"start":{"line":48,"column":2},"end":{"line":48,"column":9}},"22":{"start":{"line":50,"column":2},"end":{"line":65,"column":3}},"23":{"start":{"line":52,"column":4},"end":{"line":52,"column":14}},"24":{"start":{"line":53,"column":4},"end":{"line":53,"column":30}},"25":{"start":{"line":54,"column":9},"end":{"line":65,"column":3}},"26":{"start":{"line":55,"column":4},"end":{"line":61,"column":5}},"27":{"start":{"line":56,"column":6},"end":{"line":56,"column":24}},"28":{"start":{"line":57,"column":6},"end":{"line":57,"column":32}},"29":{"start":{"line":59,"column":6},"end":{"line":59,"column":16}},"30":{"start":{"line":60,"column":6},"end":{"line":60,"column":37}},"31":{"start":{"line":62,"column":9},"end":{"line":65,"column":3}},"32":{"start":{"line":63,"column":4},"end":{"line":63,"column":23}},"33":{"start":{"line":64,"column":4},"end":{"line":64,"column":35}},"34":{"start":{"line":67,"column":2},"end":{"line":70,"column":4}},"35":{"start":{"line":74,"column":0},"end":{"line":74,"column":33}},"36":{"start":{"line":75,"column":0},"end":{"line":75,"column":47}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":34},"end":{"line":19,"column":49}},{"start":{"line":19,"column":52},"end":{"line":19,"column":54}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":34},"end":{"line":19,"column":43}},{"start":{"line":19,"column":47},"end":{"line":19,"column":49}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":10},"end":{"line":21,"column":14}},{"start":{"line":21,"column":18},"end":{"line":21,"column":20}}]},"4":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"5":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},{"start":{"line":22,"column":29},"end":{"line":22,"column":41}},{"start":{"line":22,"column":45},"end":{"line":22,"column":59}}]},"6":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":6}},{"start":{"line":25,"column":6},"end":{"line":25,"column":6}}]},"7":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"9":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"10":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":9},"end":{"line":54,"column":9}},{"start":{"line":54,"column":9},"end":{"line":54,"column":9}}]},"11":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"12":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":9},"end":{"line":62,"column":9}},{"start":{"line":62,"column":9},"end":{"line":62,"column":9}}]},"13":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":9},"end":{"line":63,"column":14}},{"start":{"line":63,"column":18},"end":{"line":63,"column":22}}]}},"code":["/**"," * Helpers for working with Slack API clients."," */","","var assign = require('lodash').assign;","var isFunction = require('lodash').isFunction;","var isUndefined = require('lodash').isUndefined;","var isString = require('lodash').isString;","var forEach = require('lodash').forEach;","var noop = require('lodash').noop;","","","/**"," *"," * @param {object} data"," * @returns {object}"," */","var getData = function getData(data, token) {","  var newData = assign({}, data ? data.opts || {} : {});","","  forEach(data || {}, function getValidData(val, key) {","    if (!isUndefined(val) && val !== null && key !== 'opts') {","      // For the web API, this should always be a JSON-encoded array, see:","      //   https://api.slack.com/docs/attachments","      if (key === 'attachments') {","        if (isString(val)) {","          newData[key] = val;","        } else {","          newData[key] = JSON.stringify(val);","        }","      } else {","        newData[key] = val;","      }","    }","  });","","  // There are a couple of API calls that don't require tokens, so check before passing it through","  if (token) {","    newData.token = token;","  }","","  return newData;","};","","","var getAPICallArgs = function getAPICallArgs(token, optData, optCb) {","  var data;","  var cb;","","  if (arguments.length === 1) {","    // Pass in a no-op function here to avoid adding more conditionals in the _callTransport fn","    cb = noop;","    data = getData({}, token);","  } else if (arguments.length === 2) {","    if (isFunction(arguments[1])) {","      cb = arguments[1];","      data = getData({}, token);","    } else {","      cb = noop;","      data = getData(optData, token);","    }","  } else if (arguments.length === 3) {","    cb = optCb || noop;","    data = getData(optData, token);","  }","","  return {","    cb: cb,","    data: data,","  };","};","","","module.exports.getData = getData;","module.exports.getAPICallArgs = getAPICallArgs;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"18":1,"19":0,"21":0,"22":0,"25":0,"26":0,"27":0,"29":0,"32":0,"38":0,"39":0,"42":0,"46":1,"47":0,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"62":0,"63":0,"64":0,"67":0,"74":1,"75":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/transports/request.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/transports/request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"handleRequestTranportRes","line":11,"loc":{"start":{"line":11,"column":31},"end":{"line":11,"column":90}}},"2":{"name":"getReqestTransportArgs","line":25,"loc":{"start":{"line":25,"column":30},"end":{"line":25,"column":68}}},"3":{"name":"proxiedRequestTransport","line":41,"loc":{"start":{"line":41,"column":30},"end":{"line":41,"column":73}}},"4":{"name":"_proxiedRequestTransport","line":42,"loc":{"start":{"line":42,"column":9},"end":{"line":42,"column":53}}},"5":{"name":"requestTransport","line":50,"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":59}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"5":{"start":{"line":11,"column":0},"end":{"line":22,"column":2}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":14}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"8":{"start":{"line":15,"column":2},"end":{"line":21,"column":3}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":53}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":63}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":39}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":57}},"13":{"start":{"line":25,"column":0},"end":{"line":38,"column":2}},"14":{"start":{"line":26,"column":2},"end":{"line":29,"column":4}},"15":{"start":{"line":31,"column":2},"end":{"line":35,"column":3}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":39}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"18":{"start":{"line":37,"column":2},"end":{"line":37,"column":23}},"19":{"start":{"line":41,"column":0},"end":{"line":47,"column":2}},"20":{"start":{"line":42,"column":2},"end":{"line":46,"column":4}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":52}},"22":{"start":{"line":44,"column":4},"end":{"line":44,"column":54}},"23":{"start":{"line":45,"column":4},"end":{"line":45,"column":69}},"24":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"25":{"start":{"line":51,"column":2},"end":{"line":51,"column":50}},"26":{"start":{"line":52,"column":2},"end":{"line":52,"column":67}},"27":{"start":{"line":56,"column":0},"end":{"line":56,"column":65}},"28":{"start":{"line":57,"column":0},"end":{"line":57,"column":51}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":25},"end":{"line":16,"column":47}},{"start":{"line":16,"column":50},"end":{"line":16,"column":52}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":25},"end":{"line":16,"column":41}},{"start":{"line":16,"column":45},"end":{"line":16,"column":47}}]},"4":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":28},"end":{"line":17,"column":55}},{"start":{"line":17,"column":58},"end":{"line":17,"column":62}}]},"5":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":28},"end":{"line":17,"column":47}},{"start":{"line":17,"column":51},"end":{"line":17,"column":55}}]},"6":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]}},"code":["/**"," * Simple transport using the node request library."," */","","var HttpsProxyAgent = require('https-proxy-agent');","var has = require('lodash').has;","var partial = require('lodash').partial;","var request = require('request');","","","var handleRequestTranportRes = function handleRequestTranportRes(cb, err, response, body) {","  var headers;","  var statusCode;","","  if (err) {","    headers = response ? response.headers || {} : {};","    statusCode = response ? response.statusCode || null : null;","    cb(err, headers, statusCode, body);","  } else {","    cb(err, response.headers, response.statusCode, body);","  }","};","","","var getRequestTransportArgs = function getReqestTransportArgs(args) {","  var transportArgs = {","    url: args.url,","    headers: args.headers,","  };","","  if (has(args.data, 'file')) {","    transportArgs.formData = args.data;","  } else {","    transportArgs.form = args.data;","  }","","  return transportArgs;","};","","","var proxiedRequestTransport = function proxiedRequestTransport(proxyURL) {","  return function _proxiedRequestTransport(args, cb) {","    var requestArgs = getRequestTransportArgs(args);","    requestArgs.agent = new HttpsProxyAgent(proxyURL);","    request.post(requestArgs, partial(handleRequestTranportRes, cb));","  };","};","","","var requestTransport = function requestTransport(args, cb) {","  var requestArgs = getRequestTransportArgs(args);","  request.post(requestArgs, partial(handleRequestTranportRes, cb));","};","","","module.exports.proxiedRequestTransport = proxiedRequestTransport;","module.exports.requestTransport = requestTransport;",""],"l":{"5":1,"6":1,"7":1,"8":1,"11":1,"12":0,"13":0,"15":0,"16":0,"17":0,"18":0,"20":0,"25":1,"26":0,"31":0,"32":0,"34":0,"37":0,"41":1,"42":0,"43":0,"44":0,"45":0,"50":1,"51":0,"52":0,"56":1,"57":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":2}}},"branchMap":{},"code":["module.exports = {","  ApiFacet: require('./api.js'),","  AuthFacet: require('./auth.js'),","  ChannelsFacet: require('./channels.js'),","  ChatFacet: require('./chat.js'),","  DmFacet: require('./dm.js'),","  EmojiFacet: require('./emoji.js'),","  FilesFacet: require('./files.js'),","  GroupsFacet: require('./groups.js'),","  OauthFacet: require('./oauth.js'),","  PinsFacet: require('./pins.js'),","  PresenceFacet: require('./presence.js'),","  ReactionsFacet: require('./reactions.js'),","  RtmFacet: require('./rtm.js'),","  SearchFacet: require('./search.js'),","  StarsFacet: require('./stars.js'),","  TeamFacet: require('./team.js'),","  UsersFacet: require('./users.js'),","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/api.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/api.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ApiFacet","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}}},"2":{"name":"test","line":25,"loc":{"start":{"line":25,"column":26},"end":{"line":25,"column":53}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":20}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"4":{"start":{"line":25,"column":0},"end":{"line":31,"column":2}},"5":{"start":{"line":26,"column":2},"end":{"line":28,"column":4}},"6":{"start":{"line":30,"column":2},"end":{"line":30,"column":51}},"7":{"start":{"line":34,"column":0},"end":{"line":34,"column":26}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the api namespace."," *"," * This provides functions to call:"," *   - test: {@link https://api.slack.com/methods/api.test|api.test}"," *"," */","","","function ApiFacet(makeAPICall) {","  this.name = 'api';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Checks API calling code."," * @see {@link https://api.slack.com/methods/api.test|api.test}"," *"," * @param {Object=} opts"," * @param {?} opts.error Error response to return"," * @param {?} opts.foo example property to return"," * @param {function} optCb Optional callback, if not using promises."," */","ApiFacet.prototype.test = function test(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('api.test', args, optCb);","};","","","module.exports = ApiFacet;",""],"l":{"10":1,"11":0,"12":0,"25":1,"26":0,"30":0,"34":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/auth.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/auth.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"AuthFacet","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}}},"2":{"name":"test","line":22,"loc":{"start":{"line":22,"column":27},"end":{"line":22,"column":48}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":21}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"4":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":16}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":52}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the auth namespace."," *"," * This provides functions to call:"," *   - test: {@link https://api.slack.com/methods/auth.test|auth.test}"," *"," */","","","function AuthFacet(makeAPICall) {","  this.name = 'auth';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Checks authentication & identity."," * @see {@link https://api.slack.com/methods/auth.test|auth.test}"," *"," * @param {function} optCb Optional callback, if not using promises."," */","AuthFacet.prototype.test = function test(optCb) {","  var args = {};","","  return this.makeAPICall('auth.test', args, optCb);","};","","","module.exports = AuthFacet;",""],"l":{"10":1,"11":0,"12":0,"22":1,"23":0,"25":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/channels.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/channels.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"ChannelsFacet","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"2":{"name":"archive","line":38,"loc":{"start":{"line":38,"column":34},"end":{"line":38,"column":67}}},"3":{"name":"create","line":53,"loc":{"start":{"line":53,"column":33},"end":{"line":53,"column":62}}},"4":{"name":"history","line":73,"loc":{"start":{"line":73,"column":34},"end":{"line":73,"column":73}}},"5":{"name":"info","line":89,"loc":{"start":{"line":89,"column":31},"end":{"line":89,"column":61}}},"6":{"name":"invite","line":105,"loc":{"start":{"line":105,"column":33},"end":{"line":105,"column":71}}},"7":{"name":"join","line":121,"loc":{"start":{"line":121,"column":31},"end":{"line":121,"column":58}}},"8":{"name":"kick","line":137,"loc":{"start":{"line":137,"column":31},"end":{"line":137,"column":67}}},"9":{"name":"leave","line":153,"loc":{"start":{"line":153,"column":32},"end":{"line":153,"column":63}}},"10":{"name":"list","line":168,"loc":{"start":{"line":168,"column":31},"end":{"line":168,"column":72}}},"11":{"name":"mark","line":181,"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":65}}},"12":{"name":"rename","line":198,"loc":{"start":{"line":198,"column":33},"end":{"line":198,"column":71}}},"13":{"name":"setPurpose","line":215,"loc":{"start":{"line":215,"column":37},"end":{"line":215,"column":82}}},"14":{"name":"setTopic","line":232,"loc":{"start":{"line":232,"column":35},"end":{"line":232,"column":76}}},"15":{"name":"unarchive","line":248,"loc":{"start":{"line":248,"column":36},"end":{"line":248,"column":71}}}},"statementMap":{"1":{"start":{"line":22,"column":0},"end":{"line":22,"column":77}},"2":{"start":{"line":25,"column":0},"end":{"line":28,"column":1}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":25}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":33}},"5":{"start":{"line":38,"column":0},"end":{"line":44,"column":2}},"6":{"start":{"line":39,"column":2},"end":{"line":41,"column":4}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":59}},"8":{"start":{"line":53,"column":0},"end":{"line":59,"column":2}},"9":{"start":{"line":54,"column":2},"end":{"line":56,"column":4}},"10":{"start":{"line":58,"column":2},"end":{"line":58,"column":58}},"11":{"start":{"line":73,"column":0},"end":{"line":80,"column":2}},"12":{"start":{"line":74,"column":2},"end":{"line":77,"column":4}},"13":{"start":{"line":79,"column":2},"end":{"line":79,"column":59}},"14":{"start":{"line":89,"column":0},"end":{"line":95,"column":2}},"15":{"start":{"line":90,"column":2},"end":{"line":92,"column":4}},"16":{"start":{"line":94,"column":2},"end":{"line":94,"column":56}},"17":{"start":{"line":105,"column":0},"end":{"line":112,"column":2}},"18":{"start":{"line":106,"column":2},"end":{"line":109,"column":4}},"19":{"start":{"line":111,"column":2},"end":{"line":111,"column":58}},"20":{"start":{"line":121,"column":0},"end":{"line":127,"column":2}},"21":{"start":{"line":122,"column":2},"end":{"line":124,"column":4}},"22":{"start":{"line":126,"column":2},"end":{"line":126,"column":56}},"23":{"start":{"line":137,"column":0},"end":{"line":144,"column":2}},"24":{"start":{"line":138,"column":2},"end":{"line":141,"column":4}},"25":{"start":{"line":143,"column":2},"end":{"line":143,"column":56}},"26":{"start":{"line":153,"column":0},"end":{"line":159,"column":2}},"27":{"start":{"line":154,"column":2},"end":{"line":156,"column":4}},"28":{"start":{"line":158,"column":2},"end":{"line":158,"column":57}},"29":{"start":{"line":168,"column":0},"end":{"line":171,"column":2}},"30":{"start":{"line":169,"column":2},"end":{"line":169,"column":87}},"31":{"start":{"line":170,"column":2},"end":{"line":170,"column":67}},"32":{"start":{"line":181,"column":0},"end":{"line":188,"column":2}},"33":{"start":{"line":182,"column":2},"end":{"line":185,"column":4}},"34":{"start":{"line":187,"column":2},"end":{"line":187,"column":56}},"35":{"start":{"line":198,"column":0},"end":{"line":205,"column":2}},"36":{"start":{"line":199,"column":2},"end":{"line":202,"column":4}},"37":{"start":{"line":204,"column":2},"end":{"line":204,"column":58}},"38":{"start":{"line":215,"column":0},"end":{"line":222,"column":2}},"39":{"start":{"line":216,"column":2},"end":{"line":219,"column":4}},"40":{"start":{"line":221,"column":2},"end":{"line":221,"column":62}},"41":{"start":{"line":232,"column":0},"end":{"line":239,"column":2}},"42":{"start":{"line":233,"column":2},"end":{"line":236,"column":4}},"43":{"start":{"line":238,"column":2},"end":{"line":238,"column":60}},"44":{"start":{"line":248,"column":0},"end":{"line":254,"column":2}},"45":{"start":{"line":249,"column":2},"end":{"line":251,"column":4}},"46":{"start":{"line":253,"column":2},"end":{"line":253,"column":61}},"47":{"start":{"line":257,"column":0},"end":{"line":257,"column":31}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the channels namespace."," *"," * This provides functions to call:"," *   - archive: {@link https://api.slack.com/methods/channels.archive|channels.archive}"," *   - create: {@link https://api.slack.com/methods/channels.create|channels.create}"," *   - history: {@link https://api.slack.com/methods/channels.history|channels.history}"," *   - info: {@link https://api.slack.com/methods/channels.info|channels.info}"," *   - invite: {@link https://api.slack.com/methods/channels.invite|channels.invite}"," *   - join: {@link https://api.slack.com/methods/channels.join|channels.join}"," *   - kick: {@link https://api.slack.com/methods/channels.kick|channels.kick}"," *   - leave: {@link https://api.slack.com/methods/channels.leave|channels.leave}"," *   - list: {@link https://api.slack.com/methods/channels.list|channels.list}"," *   - mark: {@link https://api.slack.com/methods/channels.mark|channels.mark}"," *   - rename: {@link https://api.slack.com/methods/channels.rename|channels.rename}"," *   - setPurpose: {@link https://api.slack.com/methods/channels.setPurpose|channels.setPurpose}"," *   - setTopic: {@link https://api.slack.com/methods/channels.setTopic|channels.setTopic}"," *   - unarchive: {@link https://api.slack.com/methods/channels.unarchive|channels.unarchive}"," *"," */","","var getArgsForFnsWithOptArgs = require('./helpers').getArgsForFnsWithOptArgs;","","","function ChannelsFacet(makeAPICall) {","  this.name = 'channels';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Archives a channel."," * @see {@link https://api.slack.com/methods/channels.archive|channels.archive}"," *"," * @param {?} channel Channel to archive"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.archive = function archive(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('channels.archive', args, optCb);","};","","/**"," * Creates a channel."," * @see {@link https://api.slack.com/methods/channels.create|channels.create}"," *"," * @param {?} name Name of channel to create"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.create = function create(name, optCb) {","  var args = {","    name: name,","  };","","  return this.makeAPICall('channels.create', args, optCb);","};","","/**"," * Fetches history of messages and events from a channel."," * @see {@link https://api.slack.com/methods/channels.history|channels.history}"," *"," * @param {?} channel Channel to fetch history for."," * @param {Object=} opts"," * @param {?} opts.latest End of time range of messages to include in results."," * @param {?} opts.oldest Start of time range of messages to include in results."," * @param {?} opts.inclusive Include messages with latest or oldest timestamp in results."," * @param {?} opts.count Number of messages to return, between 1 and 1000."," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.history = function history(channel, opts, optCb) {","  var args = {","    channel: channel,","    opts: opts,","  };","","  return this.makeAPICall('channels.history', args, optCb);","};","","/**"," * Gets information about a channel."," * @see {@link https://api.slack.com/methods/channels.info|channels.info}"," *"," * @param {?} channel Channel to get info on"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.info = function info(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('channels.info', args, optCb);","};","","/**"," * Invites a user to a channel."," * @see {@link https://api.slack.com/methods/channels.invite|channels.invite}"," *"," * @param {?} channel Channel to invite user to."," * @param {?} user User to invite to channel."," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.invite = function invite(channel, user, optCb) {","  var args = {","    channel: channel,","    user: user,","  };","","  return this.makeAPICall('channels.invite', args, optCb);","};","","/**"," * Joins a channel, creating it if needed."," * @see {@link https://api.slack.com/methods/channels.join|channels.join}"," *"," * @param {?} name Name of channel to join"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.join = function join(name, optCb) {","  var args = {","    name: name,","  };","","  return this.makeAPICall('channels.join', args, optCb);","};","","/**"," * Removes a user from a channel."," * @see {@link https://api.slack.com/methods/channels.kick|channels.kick}"," *"," * @param {?} channel Channel to remove user from."," * @param {?} user User to remove from channel."," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.kick = function kick(channel, user, optCb) {","  var args = {","    channel: channel,","    user: user,","  };","","  return this.makeAPICall('channels.kick', args, optCb);","};","","/**"," * Leaves a channel."," * @see {@link https://api.slack.com/methods/channels.leave|channels.leave}"," *"," * @param {?} channel Channel to leave"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.leave = function leave(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('channels.leave', args, optCb);","};","","/**"," * Lists all channels in a Slack team."," * @see {@link https://api.slack.com/methods/channels.list|channels.list}"," *"," * @param {?} optExcludeArchived Don't return archived channels."," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.list = function list(optExcludeArchived, optCb) {","  var fnArgs = getArgsForFnsWithOptArgs(optExcludeArchived, optCb, 'exclude_archived');","  return this.makeAPICall('channels.list', fnArgs.args, fnArgs.cb);","};","","/**"," * Sets the read cursor in a channel."," * @see {@link https://api.slack.com/methods/channels.mark|channels.mark}"," *"," * @param {?} channel Channel to set reading cursor in."," * @param {?} ts Timestamp of the most recently seen message."," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.mark = function mark(channel, ts, optCb) {","  var args = {","    channel: channel,","    ts: ts,","  };","","  return this.makeAPICall('channels.mark', args, optCb);","};","","/**"," * Renames a channel."," * @see {@link https://api.slack.com/methods/channels.rename|channels.rename}"," *"," * @param {?} channel Channel to rename"," * @param {?} name New name for channel."," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.rename = function rename(channel, name, optCb) {","  var args = {","    channel: channel,","    name: name,","  };","","  return this.makeAPICall('channels.rename', args, optCb);","};","","/**"," * Sets the purpose for a channel."," * @see {@link https://api.slack.com/methods/channels.setPurpose|channels.setPurpose}"," *"," * @param {?} channel Channel to set the purpose of"," * @param {?} purpose The new purpose"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.setPurpose = function setPurpose(channel, purpose, optCb) {","  var args = {","    channel: channel,","    purpose: purpose,","  };","","  return this.makeAPICall('channels.setPurpose', args, optCb);","};","","/**"," * Sets the topic for a channel."," * @see {@link https://api.slack.com/methods/channels.setTopic|channels.setTopic}"," *"," * @param {?} channel Channel to set the topic of"," * @param {?} topic The new topic"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.setTopic = function setTopic(channel, topic, optCb) {","  var args = {","    channel: channel,","    topic: topic,","  };","","  return this.makeAPICall('channels.setTopic', args, optCb);","};","","/**"," * Unarchives a channel."," * @see {@link https://api.slack.com/methods/channels.unarchive|channels.unarchive}"," *"," * @param {?} channel Channel to unarchive"," * @param {function} optCb Optional callback, if not using promises."," */","ChannelsFacet.prototype.unarchive = function unarchive(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('channels.unarchive', args, optCb);","};","","","module.exports = ChannelsFacet;",""],"l":{"22":1,"25":1,"26":0,"27":0,"38":1,"39":0,"43":0,"53":1,"54":0,"58":0,"73":1,"74":0,"79":0,"89":1,"90":0,"94":0,"105":1,"106":0,"111":0,"121":1,"122":0,"126":0,"137":1,"138":0,"143":0,"153":1,"154":0,"158":0,"168":1,"169":0,"170":0,"181":1,"182":0,"187":0,"198":1,"199":0,"204":0,"215":1,"216":0,"221":0,"232":1,"233":0,"238":0,"248":1,"249":0,"253":0,"257":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getArgsForFnsWithOptArgs","line":10,"loc":{"start":{"line":10,"column":31},"end":{"line":10,"column":92}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"4":{"start":{"line":10,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":11,"column":2},"end":{"line":13,"column":4}},"6":{"start":{"line":15,"column":2},"end":{"line":26,"column":3}},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":19}},"8":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"9":{"start":{"line":18,"column":6},"end":{"line":18,"column":36}},"10":{"start":{"line":20,"column":9},"end":{"line":26,"column":3}},"11":{"start":{"line":21,"column":4},"end":{"line":25,"column":5}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":36}},"13":{"start":{"line":24,"column":6},"end":{"line":24,"column":22}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":13}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":67}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":47}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":9}},{"start":{"line":20,"column":9},"end":{"line":20,"column":9}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":13},"end":{"line":20,"column":33}},{"start":{"line":20,"column":37},"end":{"line":20,"column":52}}]},"6":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]}},"code":["/**"," *"," */","","var isFunction = require('lodash').isFunction;","var isNull = require('lodash').isNull;","var isUndefined = require('lodash').isUndefined;","","","var getArgsForFnsWithOptArgs = function getArgsForFnsWithOptArgs(optArg, optCb, optArgName) {","  var ret = {","    args: {},","  };","","  if (isFunction(optCb)) {","    ret.cb = optCb;","    if (!isUndefined(optArg) && !isNull(optArg)) {","      ret.args[optArgName] = optArg;","    }","  } else if (!isUndefined(optArg) && !isNull(optArg)) {","    if (!isFunction(optArg)) {","      ret.args[optArgName] = optArg;","    } else {","      ret.cb = optArg;","    }","  }","","  return ret;","};","","","module.exports.getArgsForFnsWithOptArgs = getArgsForFnsWithOptArgs;",""],"l":{"5":1,"6":1,"7":1,"10":1,"11":0,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"28":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/chat.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/chat.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"ChatFacet","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}}},"2":{"name":"delete_","line":26,"loc":{"start":{"line":26,"column":29},"end":{"line":26,"column":66}}},"3":{"name":"postMessage","line":54,"loc":{"start":{"line":54,"column":34},"end":{"line":54,"column":83}}},"4":{"name":"update","line":77,"loc":{"start":{"line":77,"column":29},"end":{"line":77,"column":77}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":21}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":33}},"4":{"start":{"line":26,"column":0},"end":{"line":33,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":30,"column":4}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":54}},"7":{"start":{"line":54,"column":0},"end":{"line":62,"column":2}},"8":{"start":{"line":55,"column":2},"end":{"line":59,"column":4}},"9":{"start":{"line":61,"column":2},"end":{"line":61,"column":59}},"10":{"start":{"line":77,"column":0},"end":{"line":86,"column":2}},"11":{"start":{"line":78,"column":2},"end":{"line":83,"column":4}},"12":{"start":{"line":85,"column":2},"end":{"line":85,"column":54}},"13":{"start":{"line":89,"column":0},"end":{"line":89,"column":27}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the chat namespace."," *"," * This provides functions to call:"," *   - delete: {@link https://api.slack.com/methods/chat.delete|chat.delete}"," *   - postMessage: {@link https://api.slack.com/methods/chat.postMessage|chat.postMessage}"," *   - update: {@link https://api.slack.com/methods/chat.update|chat.update}"," *"," */","","","function ChatFacet(makeAPICall) {","  this.name = 'chat';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Deletes a message."," * @see {@link https://api.slack.com/methods/chat.delete|chat.delete}"," *"," * @param {?} ts Timestamp of the message to be deleted."," * @param {?} channel Channel containing the message to be deleted."," * @param {function} optCb Optional callback, if not using promises."," */","ChatFacet.prototype.delete = function delete_(ts, channel, optCb) {","  var args = {","    ts: ts,","    channel: channel,","  };","","  return this.makeAPICall('chat.delete', args, optCb);","};","","/**"," * Sends a message to a channel."," * @see {@link https://api.slack.com/methods/chat.postMessage|chat.postMessage}"," *"," * @param {?} channel Channel, private group, or IM channel to send message to."," *    Can be an encoded ID, or a name. See below for more details."," * @param {?} text Text of the message to send. See below for an explanation of formatting."," * @param {Object=} opts"," * @param {?} opts.username Name of bot."," * @param {?} opts.as_user Pass true to post the message as the authed user, instead of as a bot"," * @param {?} opts.parse Change how messages are treated. See below."," * @param {?} opts.link_names Find and link channel names and usernames."," * @param {?} opts.attachments Structured message attachments."," * @param {?} opts.unfurl_links Pass true to enable unfurling of primarily text-based content."," * @param {?} opts.unfurl_media Pass false to disable unfurling of media content."," * @param {?} opts.icon_url URL to an image to use as the icon for this message"," * @param {?} opts.icon_emoji emoji to use as the icon for this message. Overrides `icon_url`."," * @param {function} optCb Optional callback, if not using promises."," */","ChatFacet.prototype.postMessage = function postMessage(channel, text, opts, optCb) {","  var args = {","    channel: channel,","    text: text,","    opts: opts,","  };","","  return this.makeAPICall('chat.postMessage', args, optCb);","};","","/**"," * Updates a message."," * @see {@link https://api.slack.com/methods/chat.update|chat.update}"," *"," * @param {?} ts Timestamp of the message to be updated."," * @param {?} channel Channel containing the message to be updated."," * @param {?} text New text for the message, using the [default formatting rules](/docs/formatting)."," * @param {Object=} opts"," * @param {?} opts.attachments Structured message attachments."," * @param {?} opts.parse Change how messages are treated. See below."," * @param {?} opts.link_names Find and link channel names and usernames."," * @param {function} optCb Optional callback, if not using promises."," */","ChatFacet.prototype.update = function update(ts, channel, text, opts, optCb) {","  var args = {","    ts: ts,","    channel: channel,","    text: text,","    opts: opts,","  };","","  return this.makeAPICall('chat.update', args, optCb);","};","","","module.exports = ChatFacet;",""],"l":{"12":1,"13":0,"14":0,"26":1,"27":0,"32":0,"54":1,"55":0,"61":0,"77":1,"78":0,"85":0,"89":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/dm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/dm.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"DmFacet","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}}},"2":{"name":"close","line":26,"loc":{"start":{"line":26,"column":26},"end":{"line":26,"column":57}}},"3":{"name":"history","line":46,"loc":{"start":{"line":46,"column":28},"end":{"line":46,"column":67}}},"4":{"name":"list","line":60,"loc":{"start":{"line":60,"column":25},"end":{"line":60,"column":46}}},"5":{"name":"mark","line":74,"loc":{"start":{"line":74,"column":25},"end":{"line":74,"column":59}}},"6":{"name":"open","line":90,"loc":{"start":{"line":90,"column":25},"end":{"line":90,"column":52}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":19}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":33}},"4":{"start":{"line":26,"column":0},"end":{"line":32,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":4}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":51}},"7":{"start":{"line":46,"column":0},"end":{"line":53,"column":2}},"8":{"start":{"line":47,"column":2},"end":{"line":50,"column":4}},"9":{"start":{"line":52,"column":2},"end":{"line":52,"column":53}},"10":{"start":{"line":60,"column":0},"end":{"line":64,"column":2}},"11":{"start":{"line":61,"column":2},"end":{"line":61,"column":16}},"12":{"start":{"line":63,"column":2},"end":{"line":63,"column":50}},"13":{"start":{"line":74,"column":0},"end":{"line":81,"column":2}},"14":{"start":{"line":75,"column":2},"end":{"line":78,"column":4}},"15":{"start":{"line":80,"column":2},"end":{"line":80,"column":50}},"16":{"start":{"line":90,"column":0},"end":{"line":96,"column":2}},"17":{"start":{"line":91,"column":2},"end":{"line":93,"column":4}},"18":{"start":{"line":95,"column":2},"end":{"line":95,"column":50}},"19":{"start":{"line":99,"column":0},"end":{"line":99,"column":25}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the im namespace."," *"," * This provides functions to call:"," *   - close: {@link https://api.slack.com/methods/im.close|im.close}"," *   - history: {@link https://api.slack.com/methods/im.history|im.history}"," *   - list: {@link https://api.slack.com/methods/im.list|im.list}"," *   - mark: {@link https://api.slack.com/methods/im.mark|im.mark}"," *   - open: {@link https://api.slack.com/methods/im.open|im.open}"," *"," */","","function DmFacet(makeAPICall) {","  this.name = 'dm';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Close a direct message channel."," * @see {@link https://api.slack.com/methods/im.close|im.close}"," *"," * @param {?} channel Direct message channel to close."," * @param {function} optCb Optional callback, if not using promises."," */","DmFacet.prototype.close = function close(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('im.close', args, optCb);","};","","/**"," * Fetches history of messages and events from direct message channel."," * @see {@link https://api.slack.com/methods/im.history|im.history}"," *"," * @param {?} channel Direct message channel to fetch history for."," * @param {Object=} opts"," * @param {?} opts.latest End of time range of messages to include in results."," * @param {?} opts.oldest Start of time range of messages to include in results."," * @param {?} opts.inclusive Include messages with latest or oldest timestamp in results."," * @param {?} opts.count Number of messages to return, between 1 and 1000."," * @param {function} optCb Optional callback, if not using promises."," */","DmFacet.prototype.history = function history(channel, opts, optCb) {","  var args = {","    channel: channel,","    opts: opts,","  };","","  return this.makeAPICall('im.history', args, optCb);","};","","/**"," * Lists direct message channels for the calling user."," * @see {@link https://api.slack.com/methods/im.list|im.list}"," * @param {function} optCb Optional callback, if not using promises."," */","DmFacet.prototype.list = function list(optCb) {","  var args = {};","","  return this.makeAPICall('im.list', args, optCb);","};","","/**"," * Sets the read cursor in a direct message channel."," * @see {@link https://api.slack.com/methods/im.mark|im.mark}"," *"," * @param {?} channel Direct message channel to set reading cursor in."," * @param {?} ts Timestamp of the most recently seen message."," * @param {function} optCb Optional callback, if not using promises."," */","DmFacet.prototype.mark = function mark(channel, ts, optCb) {","  var args = {","    channel: channel,","    ts: ts,","  };","","  return this.makeAPICall('im.mark', args, optCb);","};","","/**"," * Opens a direct message channel."," * @see {@link https://api.slack.com/methods/im.open|im.open}"," *"," * @param {?} user User to open a direct message channel with."," * @param {function} optCb Optional callback, if not using promises."," */","DmFacet.prototype.open = function open(user, optCb) {","  var args = {","    user: user,","  };","","  return this.makeAPICall('im.open', args, optCb);","};","","","module.exports = DmFacet;",""],"l":{"13":1,"14":0,"15":0,"26":1,"27":0,"31":0,"46":1,"47":0,"52":0,"60":1,"61":0,"63":0,"74":1,"75":0,"80":0,"90":1,"91":0,"95":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/emoji.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/emoji.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"EmojiFacet","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}}},"2":{"name":"list","line":22,"loc":{"start":{"line":22,"column":28},"end":{"line":22,"column":49}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"4":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":16}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":53}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the emoji namespace."," *"," * This provides functions to call:"," *   - list: {@link https://api.slack.com/methods/emoji.list|emoji.list}"," *"," */","","","function EmojiFacet(makeAPICall) {","  this.name = 'emoji';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Lists custom emoji for a team."," * @see {@link https://api.slack.com/methods/emoji.list|emoji.list}"," *"," * @param {function} optCb Optional callback, if not using promises."," */","EmojiFacet.prototype.list = function list(optCb) {","  var args = {};","","  return this.makeAPICall('emoji.list', args, optCb);","};","","","module.exports = EmojiFacet;",""],"l":{"10":1,"11":0,"12":0,"22":1,"23":0,"25":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/files.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/files.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"FilesFacet","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}}},"2":{"name":"delete_","line":26,"loc":{"start":{"line":26,"column":30},"end":{"line":26,"column":60}}},"3":{"name":"info","line":41,"loc":{"start":{"line":41,"column":28},"end":{"line":41,"column":55}}},"4":{"name":"list","line":71,"loc":{"start":{"line":71,"column":28},"end":{"line":71,"column":55}}},"5":{"name":"upload","line":93,"loc":{"start":{"line":93,"column":30},"end":{"line":93,"column":59}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":22}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":33}},"4":{"start":{"line":26,"column":0},"end":{"line":32,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":4}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}},"7":{"start":{"line":41,"column":0},"end":{"line":47,"column":2}},"8":{"start":{"line":42,"column":2},"end":{"line":44,"column":4}},"9":{"start":{"line":46,"column":2},"end":{"line":46,"column":53}},"10":{"start":{"line":71,"column":0},"end":{"line":77,"column":2}},"11":{"start":{"line":72,"column":2},"end":{"line":74,"column":4}},"12":{"start":{"line":76,"column":2},"end":{"line":76,"column":53}},"13":{"start":{"line":93,"column":0},"end":{"line":99,"column":2}},"14":{"start":{"line":94,"column":2},"end":{"line":96,"column":4}},"15":{"start":{"line":98,"column":2},"end":{"line":98,"column":55}},"16":{"start":{"line":102,"column":0},"end":{"line":102,"column":28}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the files namespace."," *"," * This provides functions to call:"," *   - delete: {@link https://api.slack.com/methods/files.delete|files.delete}"," *   - info: {@link https://api.slack.com/methods/files.info|files.info}"," *   - list: {@link https://api.slack.com/methods/files.list|files.list}"," *   - upload: {@link https://api.slack.com/methods/files.upload|files.upload}"," *"," */","","","function FilesFacet(makeAPICall) {","  this.name = 'files';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Deletes a file."," * @see {@link https://api.slack.com/methods/files.delete|files.delete}"," *"," * @param {?} file ID of file to delete."," * @param {function} optCb Optional callback, if not using promises."," */","FilesFacet.prototype.delete = function delete_(file, optCb) {","  var args = {","    file: file,","  };","","  return this.makeAPICall('files.delete', args, optCb);","};","","/**"," * Gets information about a team file."," * @see {@link https://api.slack.com/methods/files.info|files.info}"," *"," * @param {?} file File to fetch info for"," * @param {function} optCb Optional callback, if not using promises."," */","FilesFacet.prototype.info = function info(file, optCb) {","  var args = {","    file: file,","  };","","  return this.makeAPICall('files.info', args, optCb);","};","","/**"," * Lists & filters team files."," * @see {@link https://api.slack.com/methods/files.list|files.list}"," *"," * @param {Object=} opts"," * @param {?} opts.user Filter files created by a single user."," * @param {?} opts.ts_from Filter files created after this timestamp (inclusive)."," * @param {?} opts.ts_to Filter files created before this timestamp (inclusive)."," * @param {?} opts.types Filter files by type:","   - `all` - All files","   - `posts` - Posts","   - `snippets` - Snippets","   - `images` - Image files","   - `gdocs` - Google docs","   - `zips` - Zip files","   - `pdfs` - PDF files",""," * You can pass multiple values in the types argument, like `types=posts,snippets`."," * The default value is `all`, which does not filter the list."," *"," * @param {function} optCb Optional callback, if not using promises."," */","FilesFacet.prototype.list = function list(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('files.list', args, optCb);","};","","/**"," * Uploads or creates a file."," * @see {@link https://api.slack.com/methods/files.upload|files.upload}"," *"," * @param {Object=} opts"," * @param {?} opts.file File contents via `multipart/form-data`."," * @param {?} opts.content File contents via a POST var."," * @param {?} opts.filetype Slack-internal file type identifier."," * @param {?} opts.filename Filename of file."," * @param {?} opts.title Title of file."," * @param {?} opts.initial_comment Initial comment to add to file."," * @param {?} opts.channels Comma separated list of channels to share the file into."," * @param {function} optCb Optional callback, if not using promises."," */","FilesFacet.prototype.upload = function upload(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('files.upload', args, optCb);","};","","","module.exports = FilesFacet;",""],"l":{"13":1,"14":0,"15":0,"26":1,"27":0,"31":0,"41":1,"42":0,"46":0,"71":1,"72":0,"76":0,"93":1,"94":0,"98":0,"102":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/groups.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/groups.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"GroupsFacet","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}}},"2":{"name":"archive","line":40,"loc":{"start":{"line":40,"column":32},"end":{"line":40,"column":65}}},"3":{"name":"close","line":55,"loc":{"start":{"line":55,"column":30},"end":{"line":55,"column":61}}},"4":{"name":"create","line":70,"loc":{"start":{"line":70,"column":31},"end":{"line":70,"column":60}}},"5":{"name":"createChild","line":85,"loc":{"start":{"line":85,"column":36},"end":{"line":85,"column":73}}},"6":{"name":"history","line":105,"loc":{"start":{"line":105,"column":32},"end":{"line":105,"column":71}}},"7":{"name":"info","line":121,"loc":{"start":{"line":121,"column":29},"end":{"line":121,"column":59}}},"8":{"name":"invite","line":137,"loc":{"start":{"line":137,"column":31},"end":{"line":137,"column":69}}},"9":{"name":"kick","line":154,"loc":{"start":{"line":154,"column":29},"end":{"line":154,"column":65}}},"10":{"name":"leave","line":170,"loc":{"start":{"line":170,"column":30},"end":{"line":170,"column":61}}},"11":{"name":"list","line":185,"loc":{"start":{"line":185,"column":29},"end":{"line":185,"column":70}}},"12":{"name":"mark","line":198,"loc":{"start":{"line":198,"column":29},"end":{"line":198,"column":63}}},"13":{"name":"open","line":214,"loc":{"start":{"line":214,"column":29},"end":{"line":214,"column":59}}},"14":{"name":"rename","line":230,"loc":{"start":{"line":230,"column":31},"end":{"line":230,"column":69}}},"15":{"name":"setPurpose","line":247,"loc":{"start":{"line":247,"column":35},"end":{"line":247,"column":80}}},"16":{"name":"setTopic","line":264,"loc":{"start":{"line":264,"column":33},"end":{"line":264,"column":74}}},"17":{"name":"unarchive","line":280,"loc":{"start":{"line":280,"column":34},"end":{"line":280,"column":69}}}},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":77}},"2":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":28,"column":23}},"4":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"5":{"start":{"line":40,"column":0},"end":{"line":46,"column":2}},"6":{"start":{"line":41,"column":2},"end":{"line":43,"column":4}},"7":{"start":{"line":45,"column":2},"end":{"line":45,"column":57}},"8":{"start":{"line":55,"column":0},"end":{"line":61,"column":2}},"9":{"start":{"line":56,"column":2},"end":{"line":58,"column":4}},"10":{"start":{"line":60,"column":2},"end":{"line":60,"column":55}},"11":{"start":{"line":70,"column":0},"end":{"line":76,"column":2}},"12":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"13":{"start":{"line":75,"column":2},"end":{"line":75,"column":56}},"14":{"start":{"line":85,"column":0},"end":{"line":91,"column":2}},"15":{"start":{"line":86,"column":2},"end":{"line":88,"column":4}},"16":{"start":{"line":90,"column":2},"end":{"line":90,"column":61}},"17":{"start":{"line":105,"column":0},"end":{"line":112,"column":2}},"18":{"start":{"line":106,"column":2},"end":{"line":109,"column":4}},"19":{"start":{"line":111,"column":2},"end":{"line":111,"column":57}},"20":{"start":{"line":121,"column":0},"end":{"line":127,"column":2}},"21":{"start":{"line":122,"column":2},"end":{"line":124,"column":4}},"22":{"start":{"line":126,"column":2},"end":{"line":126,"column":54}},"23":{"start":{"line":137,"column":0},"end":{"line":144,"column":2}},"24":{"start":{"line":138,"column":2},"end":{"line":141,"column":4}},"25":{"start":{"line":143,"column":2},"end":{"line":143,"column":56}},"26":{"start":{"line":154,"column":0},"end":{"line":161,"column":2}},"27":{"start":{"line":155,"column":2},"end":{"line":158,"column":4}},"28":{"start":{"line":160,"column":2},"end":{"line":160,"column":54}},"29":{"start":{"line":170,"column":0},"end":{"line":176,"column":2}},"30":{"start":{"line":171,"column":2},"end":{"line":173,"column":4}},"31":{"start":{"line":175,"column":2},"end":{"line":175,"column":55}},"32":{"start":{"line":185,"column":0},"end":{"line":188,"column":2}},"33":{"start":{"line":186,"column":2},"end":{"line":186,"column":87}},"34":{"start":{"line":187,"column":2},"end":{"line":187,"column":65}},"35":{"start":{"line":198,"column":0},"end":{"line":205,"column":2}},"36":{"start":{"line":199,"column":2},"end":{"line":202,"column":4}},"37":{"start":{"line":204,"column":2},"end":{"line":204,"column":54}},"38":{"start":{"line":214,"column":0},"end":{"line":220,"column":2}},"39":{"start":{"line":215,"column":2},"end":{"line":217,"column":4}},"40":{"start":{"line":219,"column":2},"end":{"line":219,"column":54}},"41":{"start":{"line":230,"column":0},"end":{"line":237,"column":2}},"42":{"start":{"line":231,"column":2},"end":{"line":234,"column":4}},"43":{"start":{"line":236,"column":2},"end":{"line":236,"column":56}},"44":{"start":{"line":247,"column":0},"end":{"line":254,"column":2}},"45":{"start":{"line":248,"column":2},"end":{"line":251,"column":4}},"46":{"start":{"line":253,"column":2},"end":{"line":253,"column":60}},"47":{"start":{"line":264,"column":0},"end":{"line":271,"column":2}},"48":{"start":{"line":265,"column":2},"end":{"line":268,"column":4}},"49":{"start":{"line":270,"column":2},"end":{"line":270,"column":58}},"50":{"start":{"line":280,"column":0},"end":{"line":286,"column":2}},"51":{"start":{"line":281,"column":2},"end":{"line":283,"column":4}},"52":{"start":{"line":285,"column":2},"end":{"line":285,"column":59}},"53":{"start":{"line":289,"column":0},"end":{"line":289,"column":29}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the groups namespace."," *"," * This provides functions to call:"," *   - archive: {@link https://api.slack.com/methods/groups.archive|groups.archive}"," *   - close: {@link https://api.slack.com/methods/groups.close|groups.close}"," *   - create: {@link https://api.slack.com/methods/groups.create|groups.create}"," *   - createChild: {@link https://api.slack.com/methods/groups.createChild|groups.createChild}"," *   - history: {@link https://api.slack.com/methods/groups.history|groups.history}"," *   - info: {@link https://api.slack.com/methods/groups.info|groups.info}"," *   - invite: {@link https://api.slack.com/methods/groups.invite|groups.invite}"," *   - kick: {@link https://api.slack.com/methods/groups.kick|groups.kick}"," *   - leave: {@link https://api.slack.com/methods/groups.leave|groups.leave}"," *   - list: {@link https://api.slack.com/methods/groups.list|groups.list}"," *   - mark: {@link https://api.slack.com/methods/groups.mark|groups.mark}"," *   - open: {@link https://api.slack.com/methods/groups.open|groups.open}"," *   - rename: {@link https://api.slack.com/methods/groups.rename|groups.rename}"," *   - setPurpose: {@link https://api.slack.com/methods/groups.setPurpose|groups.setPurpose}"," *   - setTopic: {@link https://api.slack.com/methods/groups.setTopic|groups.setTopic}"," *   - unarchive: {@link https://api.slack.com/methods/groups.unarchive|groups.unarchive}"," *"," */","","var getArgsForFnsWithOptArgs = require('./helpers').getArgsForFnsWithOptArgs;","","","function GroupsFacet(makeAPICall) {","  this.name = 'groups';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Archives a private group."," * @see {@link https://api.slack.com/methods/groups.archive|groups.archive}"," *"," * @param {?} channel Private group to archive"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.archive = function archive(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.archive', args, optCb);","};","","/**"," * Closes a private group."," * @see {@link https://api.slack.com/methods/groups.close|groups.close}"," *"," * @param {?} channel Group to open."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.close = function close(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.close', args, optCb);","};","","/**"," * Creates a private group."," * @see {@link https://api.slack.com/methods/groups.create|groups.create}"," *"," * @param {?} name Name of group to create"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.create = function create(name, optCb) {","  var args = {","    name: name,","  };","","  return this.makeAPICall('groups.create', args, optCb);","};","","/**"," * Clones and archives a private group."," * @see {@link https://api.slack.com/methods/groups.createChild|groups.createChild}"," *"," * @param {?} channel Group to clone and archive."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.createChild = function createChild(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.createChild', args, optCb);","};","","/**"," * Fetches history of messages and events from a private group."," * @see {@link https://api.slack.com/methods/groups.history|groups.history}"," *"," * @param {?} channel Group to fetch history for."," * @param {Object=} opts"," * @param {?} opts.latest End of time range of messages to include in results."," * @param {?} opts.oldest Start of time range of messages to include in results."," * @param {?} opts.inclusive Include messages with latest or oldest timestamp in results."," * @param {?} opts.count Number of messages to return, between 1 and 1000."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.history = function history(channel, opts, optCb) {","  var args = {","    channel: channel,","    opts: opts,","  };","","  return this.makeAPICall('groups.history', args, optCb);","};","","/**"," * Gets information about a private group."," * @see {@link https://api.slack.com/methods/groups.info|groups.info}"," *"," * @param {?} channel Group to get info on"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.info = function info(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.info', args, optCb);","};","","/**"," * Invites a user to a private group."," * @see {@link https://api.slack.com/methods/groups.invite|groups.invite}"," *"," * @param {?} channel Private group to invite user to."," * @param {?} user User to invite."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.invite = function invite(channel, user, optCb) {","  var args = {","    channel: channel,","    user: user,","  };","","  return this.makeAPICall('groups.invite', args, optCb);","};","","/**"," * Removes a user from a private group."," * @see {@link https://api.slack.com/methods/groups.kick|groups.kick}"," *"," * @param {?} channel Group to remove user from."," * @param {?} user User to remove from group."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.kick = function kick(channel, user, optCb) {","  var args = {","    channel: channel,","    user: user,","  };","","  return this.makeAPICall('groups.kick', args, optCb);","};","","/**"," * Leaves a private group."," * @see {@link https://api.slack.com/methods/groups.leave|groups.leave}"," *"," * @param {?} channel Group to leave"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.leave = function leave(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.leave', args, optCb);","};","","/**"," * Lists private groups that the calling user has access to."," * @see {@link https://api.slack.com/methods/groups.list|groups.list}"," *"," * @param {?} optExcludeArchived Don't return archived groups."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.list = function list(optExcludeArchived, optCb) {","  var fnArgs = getArgsForFnsWithOptArgs(optExcludeArchived, optCb, 'exclude_archived');","  return this.makeAPICall('groups.list', fnArgs.args, fnArgs.cb);","};","","/**"," * Sets the read cursor in a private group."," * @see {@link https://api.slack.com/methods/groups.mark|groups.mark}"," *"," * @param {?} channel Group to set reading cursor in."," * @param {?} ts Timestamp of the most recently seen message."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.mark = function mark(channel, ts, optCb) {","  var args = {","    channel: channel,","    ts: ts,","  };","","  return this.makeAPICall('groups.mark', args, optCb);","};","","/**"," * Opens a private group."," * @see {@link https://api.slack.com/methods/groups.open|groups.open}"," *"," * @param {?} channel Group to open."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.open = function open(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.open', args, optCb);","};","","/**"," * Renames a private group."," * @see {@link https://api.slack.com/methods/groups.rename|groups.rename}"," *"," * @param {?} channel Group to rename"," * @param {?} name New name for group."," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.rename = function rename(channel, name, optCb) {","  var args = {","    channel: channel,","    name: name,","  };","","  return this.makeAPICall('groups.rename', args, optCb);","};","","/**"," * Sets the purpose for a private group."," * @see {@link https://api.slack.com/methods/groups.setPurpose|groups.setPurpose}"," *"," * @param {?} channel Private group to set the purpose of"," * @param {?} purpose The new purpose"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.setPurpose = function setPurpose(channel, purpose, optCb) {","  var args = {","    channel: channel,","    purpose: purpose,","  };","","  return this.makeAPICall('groups.setPurpose', args, optCb);","};","","/**"," * Sets the topic for a private group."," * @see {@link https://api.slack.com/methods/groups.setTopic|groups.setTopic}"," *"," * @param {?} channel Private group to set the topic of"," * @param {?} topic The new topic"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.setTopic = function setTopic(channel, topic, optCb) {","  var args = {","    channel: channel,","    topic: topic,","  };","","  return this.makeAPICall('groups.setTopic', args, optCb);","};","","/**"," * Unarchives a private group."," * @see {@link https://api.slack.com/methods/groups.unarchive|groups.unarchive}"," *"," * @param {?} channel Group to unarchive"," * @param {function} optCb Optional callback, if not using promises."," */","GroupsFacet.prototype.unarchive = function unarchive(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('groups.unarchive', args, optCb);","};","","","module.exports = GroupsFacet;",""],"l":{"24":1,"27":1,"28":0,"29":0,"40":1,"41":0,"45":0,"55":1,"56":0,"60":0,"70":1,"71":0,"75":0,"85":1,"86":0,"90":0,"105":1,"106":0,"111":0,"121":1,"122":0,"126":0,"137":1,"138":0,"143":0,"154":1,"155":0,"160":0,"170":1,"171":0,"175":0,"185":1,"186":0,"187":0,"198":1,"199":0,"204":0,"214":1,"215":0,"219":0,"230":1,"231":0,"236":0,"247":1,"248":0,"253":0,"264":1,"265":0,"270":0,"280":1,"281":0,"285":0,"289":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/oauth.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/oauth.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"OauthFacet","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}}},"2":{"name":"access","line":27,"loc":{"start":{"line":27,"column":30},"end":{"line":27,"column":89}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"4":{"start":{"line":27,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":28,"column":2},"end":{"line":33,"column":4}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":55}},"7":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the oauth namespace."," *"," * This provides functions to call:"," *   - access: {@link https://api.slack.com/methods/oauth.access|oauth.access}"," *"," */","","","function OauthFacet(makeAPICall) {","  this.name = 'oauth';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Exchanges a temporary OAuth code for an API token."," * @see {@link https://api.slack.com/methods/oauth.access|oauth.access}"," *"," * @param {?} clientId Issued when you created your application."," * @param {?} clientSecret Issued when you created your application."," * @param {?} code The `code` param returned via the OAuth callback."," * @param {Object=} opts"," * @param {?} opts.redirect_uri This must match the originally submitted URI (if one was sent)."," * @param {function} optCb Optional callback, if not using promises."," */","OauthFacet.prototype.access = function access(clientId, clientSecret, code, opts, optCb) {","  var args = {","    client_id: clientId,","    client_secret: clientSecret,","    code: code,","    opts: opts,","  };","","  return this.makeAPICall('oauth.access', args, optCb);","};","","","module.exports = OauthFacet;",""],"l":{"10":1,"11":0,"12":0,"27":1,"28":0,"35":0,"39":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/pins.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/pins.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"PinsFacet","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}}},"2":{"name":"add","line":29,"loc":{"start":{"line":29,"column":26},"end":{"line":29,"column":61}}},"3":{"name":"list","line":45,"loc":{"start":{"line":45,"column":27},"end":{"line":45,"column":57}}},"4":{"name":"remove","line":64,"loc":{"start":{"line":64,"column":29},"end":{"line":64,"column":67}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":21}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":33}},"4":{"start":{"line":29,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":30,"column":2},"end":{"line":33,"column":4}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":51}},"7":{"start":{"line":45,"column":0},"end":{"line":51,"column":2}},"8":{"start":{"line":46,"column":2},"end":{"line":48,"column":4}},"9":{"start":{"line":50,"column":2},"end":{"line":50,"column":52}},"10":{"start":{"line":64,"column":0},"end":{"line":71,"column":2}},"11":{"start":{"line":65,"column":2},"end":{"line":68,"column":4}},"12":{"start":{"line":70,"column":2},"end":{"line":70,"column":54}},"13":{"start":{"line":74,"column":0},"end":{"line":74,"column":27}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the pins namespace."," *"," * This provides functions to call:"," *   - add: {@link https://api.slack.com/methods/pins.add|pins.add}"," *   - list: {@link https://api.slack.com/methods/pins.list|pins.list}"," *   - remove: {@link https://api.slack.com/methods/pins.remove|pins.remove}"," *"," */","","","function PinsFacet(makeAPICall) {","  this.name = 'pins';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Pins an item to a channel."," * @see {@link https://api.slack.com/methods/pins.add|pins.add}"," *"," * @param {?} channel Channel to pin the item in."," * @param {Object=} opts"," * @param {?} opts.file File to pin."," * @param {?} opts.file_comment File comment to pin."," * @param {?} opts.timestamp Timestamp of the message to pin."," * @param {function} optCb Optional callback, if not using promises."," */","PinsFacet.prototype.add = function add(channel, opts, optCb) {","  var args = {","    channel: channel,","    opts: opts,","  };","","  return this.makeAPICall('pins.add', args, optCb);","};","","/**"," * Lists items pinned to a channel."," * @see {@link https://api.slack.com/methods/pins.list|pins.list}"," *"," * @param {?} channel Channel to get pinned items for."," * @param {function} optCb Optional callback, if not using promises."," */","PinsFacet.prototype.list = function list(channel, optCb) {","  var args = {","    channel: channel,","  };","","  return this.makeAPICall('pins.list', args, optCb);","};","","/**"," * Un-pins an item from a channel."," * @see {@link https://api.slack.com/methods/pins.remove|pins.remove}"," *"," * @param {?} channel Channel where the item is pinned to."," * @param {Object=} opts"," * @param {?} opts.file File to un-pin."," * @param {?} opts.file_comment File comment to un-pin."," * @param {?} opts.timestamp Timestamp of the message to un-pin."," * @param {function} optCb Optional callback, if not using promises."," */","PinsFacet.prototype.remove = function remove(channel, opts, optCb) {","  var args = {","    channel: channel,","    opts: opts,","  };","","  return this.makeAPICall('pins.remove', args, optCb);","};","","","module.exports = PinsFacet;",""],"l":{"12":1,"13":0,"14":0,"29":1,"30":0,"35":0,"45":1,"46":0,"50":0,"64":1,"65":0,"70":0,"74":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/presence.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/presence.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"PresenceFacet","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}}},"2":{"name":"set","line":23,"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":60}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":25}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"4":{"start":{"line":23,"column":0},"end":{"line":29,"column":2}},"5":{"start":{"line":24,"column":2},"end":{"line":26,"column":4}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":55}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":31}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the presence namespace."," *"," * This provides functions to call:"," *   - set: {@link https://api.slack.com/methods/presence.set|presence.set}"," *"," */","","","function PresenceFacet(makeAPICall) {","  this.name = 'presence';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Manually set user presence"," * @see {@link https://api.slack.com/methods/presence.set|presence.set}"," *"," * @param {?} presence Either `active` or `away`"," * @param {function} optCb Optional callback, if not using promises."," */","PresenceFacet.prototype.set = function set(presence, optCb) {","  var args = {","    presence: presence,","  };","","  return this.makeAPICall('presence.set', args, optCb);","};","","","module.exports = PresenceFacet;",""],"l":{"10":1,"11":0,"12":0,"23":1,"24":0,"28":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/reactions.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/reactions.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"ReactionsFacet","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"2":{"name":"add","line":31,"loc":{"start":{"line":31,"column":31},"end":{"line":31,"column":63}}},"3":{"name":"get","line":52,"loc":{"start":{"line":52,"column":31},"end":{"line":52,"column":57}}},"4":{"name":"list","line":69,"loc":{"start":{"line":69,"column":32},"end":{"line":69,"column":59}}},"5":{"name":"remove","line":89,"loc":{"start":{"line":89,"column":34},"end":{"line":89,"column":69}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":26}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":33}},"4":{"start":{"line":31,"column":0},"end":{"line":38,"column":2}},"5":{"start":{"line":32,"column":2},"end":{"line":35,"column":4}},"6":{"start":{"line":37,"column":2},"end":{"line":37,"column":56}},"7":{"start":{"line":52,"column":0},"end":{"line":58,"column":2}},"8":{"start":{"line":53,"column":2},"end":{"line":55,"column":4}},"9":{"start":{"line":57,"column":2},"end":{"line":57,"column":56}},"10":{"start":{"line":69,"column":0},"end":{"line":75,"column":2}},"11":{"start":{"line":70,"column":2},"end":{"line":72,"column":4}},"12":{"start":{"line":74,"column":2},"end":{"line":74,"column":57}},"13":{"start":{"line":89,"column":0},"end":{"line":96,"column":2}},"14":{"start":{"line":90,"column":2},"end":{"line":93,"column":4}},"15":{"start":{"line":95,"column":2},"end":{"line":95,"column":59}},"16":{"start":{"line":99,"column":0},"end":{"line":99,"column":32}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the reactions namespace."," *"," * This provides functions to call:"," *   - add: {@link https://api.slack.com/methods/reactions.add|reactions.add}"," *   - get: {@link https://api.slack.com/methods/reactions.get|reactions.get}"," *   - list: {@link https://api.slack.com/methods/reactions.list|reactions.list}"," *   - remove: {@link https://api.slack.com/methods/reactions.remove|reactions.remove}"," *"," */","","","function ReactionsFacet(makeAPICall) {","  this.name = 'reactions';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Adds a reaction to an item."," * @see {@link https://api.slack.com/methods/reactions.add|reactions.add}"," *"," * @param {?} name Reaction (emoji) name."," * @param {Object=} opts"," * @param {?} opts.file File to add reaction to."," * @param {?} opts.file_comment File comment to add reaction to."," * @param {?} opts.channel Channel where the message to add reaction to was posted."," * @param {?} opts.timestamp Timestamp of the message to add reaction to."," * @param {function} optCb Optional callback, if not using promises."," */","ReactionsFacet.prototype.add = function add(name, opts, optCb) {","  var args = {","    name: name,","    opts: opts,","  };","","  return this.makeAPICall('reactions.add', args, optCb);","};","","/**"," * Gets reactions for an item."," * @see {@link https://api.slack.com/methods/reactions.get|reactions.get}"," *"," * @param {Object=} opts"," * @param {?} opts.file File to get reactions for."," * @param {?} opts.file_comment File comment to get reactions for."," * @param {?} opts.channel Channel where the message to get reactions for was posted."," * @param {?} opts.timestamp Timestamp of the message to get reactions for."," * @param {?} opts.full If true always return the complete reaction list."," * @param {function} optCb Optional callback, if not using promises."," */","ReactionsFacet.prototype.get = function get(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('reactions.get', args, optCb);","};","","/**"," * Lists reactions made by a user."," * @see {@link https://api.slack.com/methods/reactions.list|reactions.list}"," *"," * @param {Object=} opts"," * @param {?} opts.user Show reactions made by this user. Defaults to the authed user."," * @param {?} opts.full If true always return the complete reaction list."," * @param {function} optCb Optional callback, if not using promises."," */","ReactionsFacet.prototype.list = function list(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('reactions.list', args, optCb);","};","","/**"," * Removes a reaction from an item."," * @see {@link https://api.slack.com/methods/reactions.remove|reactions.remove}"," *"," * @param {?} name Reaction (emoji) name."," * @param {Object=} opts"," * @param {?} opts.file File to remove reaction from."," * @param {?} opts.file_comment File comment to remove reaction from."," * @param {?} opts.channel Channel where the message to remove reaction from was posted."," * @param {?} opts.timestamp Timestamp of the message to remove reaction from."," * @param {function} optCb Optional callback, if not using promises."," */","ReactionsFacet.prototype.remove = function remove(name, opts, optCb) {","  var args = {","    name: name,","    opts: opts,","  };","","  return this.makeAPICall('reactions.remove', args, optCb);","};","","","module.exports = ReactionsFacet;",""],"l":{"13":1,"14":0,"15":0,"31":1,"32":0,"37":0,"52":1,"53":0,"57":0,"69":1,"70":0,"74":0,"89":1,"90":0,"95":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/rtm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/rtm.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"RtmFacet","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}}},"2":{"name":"start","line":26,"loc":{"start":{"line":26,"column":27},"end":{"line":26,"column":55}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":13,"column":1}},"2":{"start":{"line":11,"column":2},"end":{"line":11,"column":20}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"4":{"start":{"line":26,"column":0},"end":{"line":32,"column":2}},"5":{"start":{"line":27,"column":2},"end":{"line":29,"column":4}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":52}},"7":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the rtm namespace."," *"," * This provides functions to call:"," *   - start: {@link https://api.slack.com/methods/rtm.start|rtm.start}"," *"," */","","","function RtmFacet(makeAPICall) {","  this.name = 'rtm';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Starts a Real Time Messaging session."," * @see {@link https://api.slack.com/methods/rtm.start|rtm.start}"," *"," * @param {Object=} opts"," * @param {?} opts.simple_latest Return timestamp only for latest message object of each channel"," *     (improves performance)."," * @param {?} opts.no_unreads Skip unread counts for each channel (improves performance)."," * @param {function} optCb Optional callback, if not using promises."," */","RtmFacet.prototype.start = function start(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('rtm.start', args, optCb);","};","","","module.exports = RtmFacet;",""],"l":{"10":1,"11":0,"12":0,"26":1,"27":0,"31":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/search.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/search.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"SearchFacet","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}}},"2":{"name":"all","line":29,"loc":{"start":{"line":29,"column":28},"end":{"line":29,"column":61}}},"3":{"name":"files","line":49,"loc":{"start":{"line":49,"column":30},"end":{"line":49,"column":65}}},"4":{"name":"messages","line":69,"loc":{"start":{"line":69,"column":33},"end":{"line":69,"column":71}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":15,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":23}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":33}},"4":{"start":{"line":29,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":30,"column":2},"end":{"line":33,"column":4}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":53}},"7":{"start":{"line":49,"column":0},"end":{"line":56,"column":2}},"8":{"start":{"line":50,"column":2},"end":{"line":53,"column":4}},"9":{"start":{"line":55,"column":2},"end":{"line":55,"column":55}},"10":{"start":{"line":69,"column":0},"end":{"line":76,"column":2}},"11":{"start":{"line":70,"column":2},"end":{"line":73,"column":4}},"12":{"start":{"line":75,"column":2},"end":{"line":75,"column":58}},"13":{"start":{"line":79,"column":0},"end":{"line":79,"column":29}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the search namespace."," *"," * This provides functions to call:"," *   - all: {@link https://api.slack.com/methods/search.all|search.all}"," *   - files: {@link https://api.slack.com/methods/search.files|search.files}"," *   - messages: {@link https://api.slack.com/methods/search.messages|search.messages}"," *"," */","","","function SearchFacet(makeAPICall) {","  this.name = 'search';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Searches for messages and files matching a query."," * @see {@link https://api.slack.com/methods/search.all|search.all}"," *"," * @param {?} query Search query. May contains booleans, etc."," * @param {Object=} opts"," * @param {?} opts.sort Return matches sorted by either `score` or `timestamp`."," * @param {?} opts.sort_dir Change sort direction to ascending (`asc`) or descending (`desc`)."," * @param {?} opts.highlight Pass a value of `1` to enable query highlight markers (see below)."," * @param {function} optCb Optional callback, if not using promises."," */","SearchFacet.prototype.all = function all(query, opts, optCb) {","  var args = {","    query: query,","    opts: opts,","  };","","  return this.makeAPICall('search.all', args, optCb);","};","","/**"," * Searches for files matching a query."," * @see {@link https://api.slack.com/methods/search.files|search.files}"," *"," * @param {?} query Search query. May contain booleans, etc."," * @param {Object=} opts"," * @param {?} opts.sort Return matches sorted by either `score` or `timestamp`."," * @param {?} opts.sort_dir Change sort direction to ascending (`asc`) or descending (`desc`)."," * @param {?} opts.highlight Pass a value of `1` to enable query highlight markers (see below)."," * @param {function} optCb Optional callback, if not using promises."," */","SearchFacet.prototype.files = function files(query, opts, optCb) {","  var args = {","    query: query,","    opts: opts,","  };","","  return this.makeAPICall('search.files', args, optCb);","};","","/**"," * Searches for messages matching a query."," * @see {@link https://api.slack.com/methods/search.messages|search.messages}"," *"," * @param {?} query Search query. May contains booleans, etc."," * @param {Object=} opts"," * @param {?} opts.sort Return matches sorted by either `score` or `timestamp`."," * @param {?} opts.sort_dir Change sort direction to ascending (`asc`) or descending (`desc`)."," * @param {?} opts.highlight Pass a value of `1` to enable query highlight markers (see below)."," * @param {function} optCb Optional callback, if not using promises."," */","SearchFacet.prototype.messages = function messages(query, opts, optCb) {","  var args = {","    query: query,","    opts: opts,","  };","","  return this.makeAPICall('search.messages', args, optCb);","};","","","module.exports = SearchFacet;",""],"l":{"12":1,"13":0,"14":0,"29":1,"30":0,"35":0,"49":1,"50":0,"55":0,"69":1,"70":0,"75":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/stars.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/stars.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"StarsFacet","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}}},"2":{"name":"add","line":32,"loc":{"start":{"line":32,"column":27},"end":{"line":32,"column":53}}},"3":{"name":"list","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":58}}},"4":{"name":"remove","line":64,"loc":{"start":{"line":64,"column":30},"end":{"line":64,"column":59}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":77}},"2":{"start":{"line":14,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":33}},"5":{"start":{"line":32,"column":0},"end":{"line":38,"column":2}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":4}},"7":{"start":{"line":37,"column":2},"end":{"line":37,"column":52}},"8":{"start":{"line":47,"column":0},"end":{"line":50,"column":2}},"9":{"start":{"line":48,"column":2},"end":{"line":48,"column":64}},"10":{"start":{"line":49,"column":2},"end":{"line":49,"column":64}},"11":{"start":{"line":64,"column":0},"end":{"line":70,"column":2}},"12":{"start":{"line":65,"column":2},"end":{"line":67,"column":4}},"13":{"start":{"line":69,"column":2},"end":{"line":69,"column":55}},"14":{"start":{"line":73,"column":0},"end":{"line":73,"column":28}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the stars namespace."," *"," * This provides functions to call:"," *   - add: {@link https://api.slack.com/methods/stars.add|stars.add}"," *   - list: {@link https://api.slack.com/methods/stars.list|stars.list}"," *   - remove: {@link https://api.slack.com/methods/stars.remove|stars.remove}"," *"," */","","var getArgsForFnsWithOptArgs = require('./helpers').getArgsForFnsWithOptArgs;","","","function StarsFacet(makeAPICall) {","  this.name = 'stars';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Adds a star to an item."," * @see {@link https://api.slack.com/methods/stars.add|stars.add}"," *"," * @param {Object=} opts"," * @param {?} opts.file File to add star to."," * @param {?} opts.file_comment File comment to add star to."," * @param {?} opts.channel Channel to add star to, or channel where the message to add star to was"," *     posted (used with `timestamp`)."," * @param {?} opts.timestamp Timestamp of the message to add star to."," * @param {function} optCb Optional callback, if not using promises."," */","StarsFacet.prototype.add = function add(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('stars.add', args, optCb);","};","","/**"," * Lists stars for a user."," * @see {@link https://api.slack.com/methods/stars.list|stars.list}"," *"," * @param {?} optUser Show stars by this user. Defaults to the authed user."," * @param {function} optCb Optional callback, if not using promises."," */","StarsFacet.prototype.list = function list(optUser, optCb) {","  var fnArgs = getArgsForFnsWithOptArgs(optUser, optCb, 'user');","  return this.makeAPICall('stars.list', fnArgs.args, fnArgs.cb);","};","","/**"," * Removes a star from an item."," * @see {@link https://api.slack.com/methods/stars.remove|stars.remove}"," *"," * @param {Object=} opts"," * @param {?} opts.file File to remove star from."," * @param {?} opts.file_comment File comment to remove star from."," * @param {?} opts.channel Channel to remove star from, or channel where the message to remove star"," *     from was posted (used with `timestamp`)."," * @param {?} opts.timestamp Timestamp of the message to remove star from."," * @param {function} optCb Optional callback, if not using promises."," */","StarsFacet.prototype.remove = function remove(opts, optCb) {","  var args = {","    opts: opts,","  };","","  return this.makeAPICall('stars.remove', args, optCb);","};","","","module.exports = StarsFacet;",""],"l":{"11":1,"14":1,"15":0,"16":0,"32":1,"33":0,"37":0,"47":1,"48":0,"49":0,"64":1,"65":0,"69":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/team.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/team.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"TeamFacet","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}}},"2":{"name":"accessLogs","line":23,"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":60}}},"3":{"name":"info","line":35,"loc":{"start":{"line":35,"column":27},"end":{"line":35,"column":48}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":14,"column":1}},"2":{"start":{"line":12,"column":2},"end":{"line":12,"column":21}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"4":{"start":{"line":23,"column":0},"end":{"line":27,"column":2}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":16}},"6":{"start":{"line":26,"column":2},"end":{"line":26,"column":58}},"7":{"start":{"line":35,"column":0},"end":{"line":39,"column":2}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":16}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":52}},"10":{"start":{"line":42,"column":0},"end":{"line":42,"column":27}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the team namespace."," *"," * This provides functions to call:"," *   - accessLogs: {@link https://api.slack.com/methods/team.accessLogs|team.accessLogs}"," *   - info: {@link https://api.slack.com/methods/team.info|team.info}"," *"," */","","","function TeamFacet(makeAPICall) {","  this.name = 'team';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Gets the access logs for the current team."," * @see {@link https://api.slack.com/methods/team.accessLogs|team.accessLogs}"," *"," * @param {function} optCb Optional callback, if not using promises."," */","TeamFacet.prototype.accessLogs = function accessLogs(optCb) {","  var args = {};","","  return this.makeAPICall('team.accessLogs', args, optCb);","};","","/**"," * Gets information about the current team."," * @see {@link https://api.slack.com/methods/team.info|team.info}"," *"," * @param {function} optCb Optional callback, if not using promises."," */","TeamFacet.prototype.info = function info(optCb) {","  var args = {};","","  return this.makeAPICall('team.info', args, optCb);","};","","","module.exports = TeamFacet;",""],"l":{"11":1,"12":0,"13":0,"23":1,"24":0,"26":0,"35":1,"36":0,"38":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/users.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/web/facets/users.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"UsersFacet","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":33}}},"2":{"name":"getPresence","line":29,"loc":{"start":{"line":29,"column":35},"end":{"line":29,"column":69}}},"3":{"name":"info","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":55}}},"4":{"name":"list","line":59,"loc":{"start":{"line":59,"column":28},"end":{"line":59,"column":62}}},"5":{"name":"setActive","line":70,"loc":{"start":{"line":70,"column":33},"end":{"line":70,"column":59}}},"6":{"name":"setPresence","line":83,"loc":{"start":{"line":83,"column":35},"end":{"line":83,"column":73}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":77}},"2":{"start":{"line":16,"column":0},"end":{"line":19,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":22}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":33}},"5":{"start":{"line":29,"column":0},"end":{"line":35,"column":2}},"6":{"start":{"line":30,"column":2},"end":{"line":32,"column":4}},"7":{"start":{"line":34,"column":2},"end":{"line":34,"column":60}},"8":{"start":{"line":44,"column":0},"end":{"line":50,"column":2}},"9":{"start":{"line":45,"column":2},"end":{"line":47,"column":4}},"10":{"start":{"line":49,"column":2},"end":{"line":49,"column":53}},"11":{"start":{"line":59,"column":0},"end":{"line":62,"column":2}},"12":{"start":{"line":60,"column":2},"end":{"line":60,"column":72}},"13":{"start":{"line":61,"column":2},"end":{"line":61,"column":64}},"14":{"start":{"line":70,"column":0},"end":{"line":74,"column":2}},"15":{"start":{"line":71,"column":2},"end":{"line":71,"column":16}},"16":{"start":{"line":73,"column":2},"end":{"line":73,"column":58}},"17":{"start":{"line":83,"column":0},"end":{"line":89,"column":2}},"18":{"start":{"line":84,"column":2},"end":{"line":86,"column":4}},"19":{"start":{"line":88,"column":2},"end":{"line":88,"column":60}},"20":{"start":{"line":92,"column":0},"end":{"line":92,"column":28}}},"branchMap":{},"code":["/**"," * API Facet to make calls to methods in the users namespace."," *"," * This provides functions to call:"," *   - getPresence: {@link https://api.slack.com/methods/users.getPresence|users.getPresence}"," *   - info: {@link https://api.slack.com/methods/users.info|users.info}"," *   - list: {@link https://api.slack.com/methods/users.list|users.list}"," *   - setActive: {@link https://api.slack.com/methods/users.setActive|users.setActive}"," *   - setPresence: {@link https://api.slack.com/methods/users.setPresence|users.setPresence}"," *"," */","","var getArgsForFnsWithOptArgs = require('./helpers').getArgsForFnsWithOptArgs;","","","function UsersFacet(makeAPICall) {","  this.name = 'users';","  this.makeAPICall = makeAPICall;","}","","","/**"," * Gets user presence information."," * @see {@link https://api.slack.com/methods/users.getPresence|users.getPresence}"," *"," * @param {?} user User to get presence info on. Defaults to the authed user."," * @param {function} optCb Optional callback, if not using promises."," */","UsersFacet.prototype.getPresence = function getPresence(user, optCb) {","  var args = {","    user: user,","  };","","  return this.makeAPICall('users.getPresence', args, optCb);","};","","/**"," * Gets information about a user."," * @see {@link https://api.slack.com/methods/users.info|users.info}"," *"," * @param {?} user User to get info on"," * @param {function} optCb Optional callback, if not using promises."," */","UsersFacet.prototype.info = function info(user, optCb) {","  var args = {","    user: user,","  };","","  return this.makeAPICall('users.info', args, optCb);","};","","/**"," * Lists all users in a Slack team."," * @see {@link https://api.slack.com/methods/users.list|users.list}"," *"," * @param {?} optPresence Whether to include presence data in the output"," * @param {function} optCb Optional callback, if not using promises."," */","UsersFacet.prototype.list = function list(optPresence, optCb) {","  var fnArgs = getArgsForFnsWithOptArgs(optPresence, optCb, 'presence');","  return this.makeAPICall('users.list', fnArgs.args, fnArgs.cb);","};","","/**"," * Marks a user as active."," * @see {@link https://api.slack.com/methods/users.setActive|users.setActive}"," *"," * @param {function} optCb Optional callback, if not using promises."," */","UsersFacet.prototype.setActive = function setActive(optCb) {","  var args = {};","","  return this.makeAPICall('users.setActive', args, optCb);","};","","/**"," * Manually sets user presence."," * @see {@link https://api.slack.com/methods/users.setPresence|users.setPresence}"," *"," * @param {?} presence Either `auto` or `away`"," * @param {function} optCb Optional callback, if not using promises."," */","UsersFacet.prototype.setPresence = function setPresence(presence, optCb) {","  var args = {","    presence: presence,","  };","","  return this.makeAPICall('users.setPresence', args, optCb);","};","","","module.exports = UsersFacet;",""],"l":{"13":1,"16":1,"17":0,"18":0,"29":1,"30":0,"34":0,"44":1,"45":0,"49":0,"59":1,"60":0,"61":0,"70":1,"71":0,"73":0,"83":1,"84":0,"88":0,"92":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/rtm/client.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/rtm/client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":1,"165":0,"166":0,"167":1,"168":0,"169":0,"170":1,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"RTMClient","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":32}}},"2":{"name":"_createFacets","line":164,"loc":{"start":{"line":164,"column":36},"end":{"line":164,"column":61}}},"3":{"name":"start","line":180,"loc":{"start":{"line":180,"column":28},"end":{"line":180,"column":49}}},"4":{"name":"login","line":195,"loc":{"start":{"line":195,"column":28},"end":{"line":195,"column":49}}},"5":{"name":"nextMessageId","line":203,"loc":{"start":{"line":203,"column":36},"end":{"line":203,"column":61}}},"6":{"name":"_onStart","line":215,"loc":{"start":{"line":215,"column":31},"end":{"line":215,"column":60}}},"7":{"name":"_safeDisconnect","line":254,"loc":{"start":{"line":254,"column":38},"end":{"line":254,"column":65}}},"8":{"name":"connect","line":274,"loc":{"start":{"line":274,"column":30},"end":{"line":274,"column":58}}},"9":{"name":"disconnect","line":291,"loc":{"start":{"line":291,"column":33},"end":{"line":291,"column":70}}},"10":{"name":"reconnect","line":301,"loc":{"start":{"line":301,"column":32},"end":{"line":301,"column":53}}},"11":{"name":"_pingServer","line":322,"loc":{"start":{"line":322,"column":34},"end":{"line":322,"column":57}}},"12":{"name":"handleWsOpen","line":341,"loc":{"start":{"line":341,"column":35},"end":{"line":341,"column":59}}},"13":{"name":"handleWsMessage","line":357,"loc":{"start":{"line":357,"column":38},"end":{"line":357,"column":70}}},"14":{"name":"_handleWsMessageInternal","line":384,"loc":{"start":{"line":384,"column":47},"end":{"line":385,"column":24}}},"15":{"name":"_handleWsMessageViaEventHandler","line":403,"loc":{"start":{"line":403,"column":54},"end":{"line":404,"column":24}}},"16":{"name":"handleWsError","line":436,"loc":{"start":{"line":436,"column":36},"end":{"line":436,"column":64}}},"17":{"name":"handleWsClose","line":445,"loc":{"start":{"line":445,"column":36},"end":{"line":445,"column":73}}},"18":{"name":"handleWsPing","line":464,"loc":{"start":{"line":464,"column":35},"end":{"line":464,"column":59}}},"19":{"name":"_handlePong","line":475,"loc":{"start":{"line":475,"column":34},"end":{"line":475,"column":64}}},"20":{"name":"_handleHello","line":482,"loc":{"start":{"line":482,"column":35},"end":{"line":482,"column":59}}},"21":{"name":"sendMessage","line":494,"loc":{"start":{"line":494,"column":34},"end":{"line":494,"column":79}}},"22":{"name":"send","line":508,"loc":{"start":{"line":508,"column":27},"end":{"line":508,"column":57}}},"23":{"name":"handleWsMsgResponse","line":520,"loc":{"start":{"line":520,"column":41},"end":{"line":520,"column":81}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":53}},"7":{"start":{"line":13,"column":0},"end":{"line":17,"column":2}},"8":{"start":{"line":18,"column":0},"end":{"line":22,"column":2}},"9":{"start":{"line":23,"column":0},"end":{"line":23,"column":52}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":41}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":49}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":89}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":45}},"14":{"start":{"line":49,"column":0},"end":{"line":79,"column":1}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":30}},"16":{"start":{"line":54,"column":2},"end":{"line":54,"column":39}},"17":{"start":{"line":56,"column":2},"end":{"line":56,"column":46}},"18":{"start":{"line":61,"column":2},"end":{"line":61,"column":53}},"19":{"start":{"line":67,"column":2},"end":{"line":67,"column":22}},"20":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"21":{"start":{"line":70,"column":4},"end":{"line":70,"column":49}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":76}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":69}},"24":{"start":{"line":75,"column":2},"end":{"line":75,"column":63}},"25":{"start":{"line":76,"column":2},"end":{"line":76,"column":60}},"26":{"start":{"line":78,"column":2},"end":{"line":78,"column":58}},"27":{"start":{"line":81,"column":0},"end":{"line":81,"column":35}},"28":{"start":{"line":87,"column":0},"end":{"line":87,"column":38}},"29":{"start":{"line":93,"column":0},"end":{"line":93,"column":42}},"30":{"start":{"line":100,"column":0},"end":{"line":100,"column":45}},"31":{"start":{"line":107,"column":0},"end":{"line":107,"column":45}},"32":{"start":{"line":115,"column":0},"end":{"line":115,"column":42}},"33":{"start":{"line":122,"column":0},"end":{"line":122,"column":38}},"34":{"start":{"line":130,"column":0},"end":{"line":130,"column":34}},"35":{"start":{"line":138,"column":0},"end":{"line":138,"column":38}},"36":{"start":{"line":146,"column":0},"end":{"line":146,"column":40}},"37":{"start":{"line":154,"column":0},"end":{"line":154,"column":42}},"38":{"start":{"line":160,"column":0},"end":{"line":160,"column":42}},"39":{"start":{"line":164,"column":0},"end":{"line":173,"column":2}},"40":{"start":{"line":165,"column":2},"end":{"line":165,"column":54}},"41":{"start":{"line":172,"column":2},"end":{"line":172,"column":57}},"42":{"start":{"line":180,"column":0},"end":{"line":189,"column":2}},"43":{"start":{"line":182,"column":2},"end":{"line":188,"column":3}},"44":{"start":{"line":183,"column":4},"end":{"line":183,"column":68}},"45":{"start":{"line":184,"column":4},"end":{"line":184,"column":40}},"46":{"start":{"line":185,"column":4},"end":{"line":185,"column":28}},"47":{"start":{"line":187,"column":4},"end":{"line":187,"column":53}},"48":{"start":{"line":195,"column":0},"end":{"line":197,"column":2}},"49":{"start":{"line":196,"column":2},"end":{"line":196,"column":19}},"50":{"start":{"line":203,"column":0},"end":{"line":206,"column":2}},"51":{"start":{"line":204,"column":2},"end":{"line":204,"column":41}},"52":{"start":{"line":205,"column":2},"end":{"line":205,"column":27}},"53":{"start":{"line":215,"column":0},"end":{"line":247,"column":2}},"54":{"start":{"line":216,"column":2},"end":{"line":216,"column":13}},"55":{"start":{"line":217,"column":2},"end":{"line":217,"column":27}},"56":{"start":{"line":218,"column":2},"end":{"line":218,"column":29}},"57":{"start":{"line":220,"column":2},"end":{"line":246,"column":3}},"58":{"start":{"line":221,"column":4},"end":{"line":221,"column":68}},"59":{"start":{"line":224,"column":4},"end":{"line":234,"column":5}},"60":{"start":{"line":225,"column":6},"end":{"line":225,"column":65}},"61":{"start":{"line":226,"column":6},"end":{"line":226,"column":55}},"62":{"start":{"line":227,"column":6},"end":{"line":227,"column":42}},"63":{"start":{"line":229,"column":6},"end":{"line":229,"column":93}},"64":{"start":{"line":230,"column":6},"end":{"line":230,"column":33}},"65":{"start":{"line":231,"column":6},"end":{"line":233,"column":7}},"66":{"start":{"line":232,"column":8},"end":{"line":232,"column":25}},"67":{"start":{"line":236,"column":4},"end":{"line":236,"column":85}},"68":{"start":{"line":237,"column":4},"end":{"line":237,"column":30}},"69":{"start":{"line":238,"column":4},"end":{"line":238,"column":37}},"70":{"start":{"line":239,"column":4},"end":{"line":239,"column":37}},"71":{"start":{"line":240,"column":4},"end":{"line":242,"column":5}},"72":{"start":{"line":241,"column":6},"end":{"line":241,"column":41}},"73":{"start":{"line":244,"column":4},"end":{"line":244,"column":49}},"74":{"start":{"line":245,"column":4},"end":{"line":245,"column":27}},"75":{"start":{"line":254,"column":0},"end":{"line":267,"column":2}},"76":{"start":{"line":255,"column":2},"end":{"line":258,"column":3}},"77":{"start":{"line":256,"column":4},"end":{"line":256,"column":35}},"78":{"start":{"line":257,"column":4},"end":{"line":257,"column":27}},"79":{"start":{"line":259,"column":2},"end":{"line":264,"column":3}},"80":{"start":{"line":262,"column":4},"end":{"line":262,"column":40}},"81":{"start":{"line":263,"column":4},"end":{"line":263,"column":20}},"82":{"start":{"line":265,"column":2},"end":{"line":265,"column":29}},"83":{"start":{"line":266,"column":2},"end":{"line":266,"column":25}},"84":{"start":{"line":274,"column":0},"end":{"line":283,"column":2}},"85":{"start":{"line":275,"column":2},"end":{"line":275,"column":38}},"86":{"start":{"line":276,"column":2},"end":{"line":276,"column":38}},"87":{"start":{"line":278,"column":2},"end":{"line":278,"column":52}},"88":{"start":{"line":279,"column":2},"end":{"line":279,"column":58}},"89":{"start":{"line":280,"column":2},"end":{"line":280,"column":54}},"90":{"start":{"line":281,"column":2},"end":{"line":281,"column":54}},"91":{"start":{"line":282,"column":2},"end":{"line":282,"column":52}},"92":{"start":{"line":291,"column":0},"end":{"line":295,"column":2}},"93":{"start":{"line":292,"column":2},"end":{"line":292,"column":55}},"94":{"start":{"line":293,"column":2},"end":{"line":293,"column":29}},"95":{"start":{"line":294,"column":2},"end":{"line":294,"column":25}},"96":{"start":{"line":301,"column":0},"end":{"line":315,"column":2}},"97":{"start":{"line":302,"column":2},"end":{"line":314,"column":3}},"98":{"start":{"line":303,"column":4},"end":{"line":303,"column":50}},"99":{"start":{"line":304,"column":4},"end":{"line":304,"column":30}},"100":{"start":{"line":305,"column":4},"end":{"line":305,"column":27}},"101":{"start":{"line":309,"column":4},"end":{"line":309,"column":25}},"102":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"103":{"start":{"line":311,"column":6},"end":{"line":311,"column":100}},"104":{"start":{"line":313,"column":4},"end":{"line":313,"column":87}},"105":{"start":{"line":322,"column":0},"end":{"line":334,"column":2}},"106":{"start":{"line":323,"column":2},"end":{"line":323,"column":19}},"107":{"start":{"line":325,"column":2},"end":{"line":333,"column":3}},"108":{"start":{"line":326,"column":4},"end":{"line":326,"column":32}},"109":{"start":{"line":329,"column":4},"end":{"line":329,"column":47}},"110":{"start":{"line":330,"column":4},"end":{"line":332,"column":5}},"111":{"start":{"line":331,"column":6},"end":{"line":331,"column":23}},"112":{"start":{"line":341,"column":0},"end":{"line":350,"column":2}},"113":{"start":{"line":342,"column":2},"end":{"line":342,"column":37}},"114":{"start":{"line":343,"column":2},"end":{"line":343,"column":30}},"115":{"start":{"line":344,"column":2},"end":{"line":344,"column":25}},"116":{"start":{"line":345,"column":2},"end":{"line":349,"column":3}},"117":{"start":{"line":346,"column":4},"end":{"line":346,"column":35}},"118":{"start":{"line":348,"column":4},"end":{"line":348,"column":87}},"119":{"start":{"line":357,"column":0},"end":{"line":375,"column":2}},"120":{"start":{"line":358,"column":2},"end":{"line":358,"column":14}},"121":{"start":{"line":359,"column":2},"end":{"line":359,"column":30}},"122":{"start":{"line":360,"column":2},"end":{"line":360,"column":46}},"123":{"start":{"line":362,"column":2},"end":{"line":368,"column":3}},"124":{"start":{"line":363,"column":4},"end":{"line":363,"column":32}},"125":{"start":{"line":366,"column":4},"end":{"line":366,"column":60}},"126":{"start":{"line":367,"column":4},"end":{"line":367,"column":11}},"127":{"start":{"line":370,"column":2},"end":{"line":374,"column":3}},"128":{"start":{"line":371,"column":4},"end":{"line":371,"column":57}},"129":{"start":{"line":373,"column":4},"end":{"line":373,"column":64}},"130":{"start":{"line":384,"column":0},"end":{"line":394,"column":2}},"131":{"start":{"line":386,"column":2},"end":{"line":393,"column":3}},"132":{"start":{"line":387,"column":4},"end":{"line":387,"column":30}},"133":{"start":{"line":388,"column":9},"end":{"line":393,"column":3}},"134":{"start":{"line":389,"column":4},"end":{"line":389,"column":24}},"135":{"start":{"line":390,"column":9},"end":{"line":393,"column":3}},"136":{"start":{"line":391,"column":4},"end":{"line":391,"column":21}},"137":{"start":{"line":392,"column":4},"end":{"line":392,"column":36}},"138":{"start":{"line":403,"column":0},"end":{"line":429,"column":2}},"139":{"start":{"line":405,"column":2},"end":{"line":405,"column":14}},"140":{"start":{"line":407,"column":2},"end":{"line":419,"column":3}},"141":{"start":{"line":408,"column":4},"end":{"line":408,"column":31}},"142":{"start":{"line":409,"column":4},"end":{"line":418,"column":5}},"143":{"start":{"line":412,"column":6},"end":{"line":417,"column":7}},"144":{"start":{"line":413,"column":8},"end":{"line":413,"column":46}},"145":{"start":{"line":416,"column":8},"end":{"line":416,"column":15}},"146":{"start":{"line":421,"column":2},"end":{"line":423,"column":3}},"147":{"start":{"line":422,"column":4},"end":{"line":422,"column":96}},"148":{"start":{"line":425,"column":2},"end":{"line":425,"column":34}},"149":{"start":{"line":426,"column":2},"end":{"line":428,"column":3}},"150":{"start":{"line":427,"column":4},"end":{"line":427,"column":69}},"151":{"start":{"line":436,"column":0},"end":{"line":439,"column":2}},"152":{"start":{"line":437,"column":2},"end":{"line":437,"column":28}},"153":{"start":{"line":438,"column":2},"end":{"line":438,"column":41}},"154":{"start":{"line":445,"column":0},"end":{"line":457,"column":2}},"155":{"start":{"line":446,"column":2},"end":{"line":446,"column":25}},"156":{"start":{"line":448,"column":2},"end":{"line":448,"column":50}},"157":{"start":{"line":450,"column":2},"end":{"line":456,"column":3}},"158":{"start":{"line":451,"column":4},"end":{"line":453,"column":5}},"159":{"start":{"line":452,"column":6},"end":{"line":452,"column":23}},"160":{"start":{"line":455,"column":4},"end":{"line":455,"column":84}},"161":{"start":{"line":464,"column":0},"end":{"line":468,"column":2}},"162":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"163":{"start":{"line":466,"column":4},"end":{"line":466,"column":19}},"164":{"start":{"line":475,"column":0},"end":{"line":478,"column":2}},"165":{"start":{"line":476,"column":2},"end":{"line":476,"column":30}},"166":{"start":{"line":477,"column":2},"end":{"line":477,"column":49}},"167":{"start":{"line":482,"column":0},"end":{"line":485,"column":2}},"168":{"start":{"line":483,"column":2},"end":{"line":483,"column":24}},"169":{"start":{"line":484,"column":2},"end":{"line":484,"column":49}},"170":{"start":{"line":494,"column":0},"end":{"line":500,"column":2}},"171":{"start":{"line":495,"column":2},"end":{"line":499,"column":12}},"172":{"start":{"line":508,"column":0},"end":{"line":536,"column":2}},"173":{"start":{"line":509,"column":2},"end":{"line":509,"column":33}},"174":{"start":{"line":510,"column":2},"end":{"line":510,"column":18}},"175":{"start":{"line":511,"column":2},"end":{"line":511,"column":10}},"176":{"start":{"line":512,"column":2},"end":{"line":512,"column":19}},"177":{"start":{"line":514,"column":2},"end":{"line":535,"column":3}},"178":{"start":{"line":515,"column":4},"end":{"line":515,"column":36}},"179":{"start":{"line":516,"column":4},"end":{"line":516,"column":40}},"180":{"start":{"line":517,"column":4},"end":{"line":517,"column":38}},"181":{"start":{"line":519,"column":4},"end":{"line":519,"column":44}},"182":{"start":{"line":520,"column":4},"end":{"line":528,"column":7}},"183":{"start":{"line":521,"column":6},"end":{"line":523,"column":7}},"184":{"start":{"line":522,"column":8},"end":{"line":522,"column":70}},"185":{"start":{"line":525,"column":6},"end":{"line":527,"column":7}},"186":{"start":{"line":526,"column":8},"end":{"line":526,"column":25}},"187":{"start":{"line":530,"column":4},"end":{"line":530,"column":53}},"188":{"start":{"line":531,"column":4},"end":{"line":531,"column":30}},"189":{"start":{"line":532,"column":4},"end":{"line":534,"column":5}},"190":{"start":{"line":533,"column":6},"end":{"line":533,"column":28}},"191":{"start":{"line":539,"column":0},"end":{"line":539,"column":27}}},"branchMap":{"1":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":19},"end":{"line":50,"column":23}},{"start":{"line":50,"column":27},"end":{"line":50,"column":29}}]},"2":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":19},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":61,"column":52}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"4":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":35},"end":{"line":73,"column":69}},{"start":{"line":73,"column":73},"end":{"line":73,"column":75}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":30},"end":{"line":74,"column":60}},{"start":{"line":74,"column":64},"end":{"line":74,"column":68}}]},"6":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":27},"end":{"line":75,"column":53}},{"start":{"line":75,"column":57},"end":{"line":75,"column":62}}]},"7":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":26},"end":{"line":76,"column":51}},{"start":{"line":76,"column":55},"end":{"line":76,"column":59}}]},"8":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"9":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":20},"end":{"line":204,"column":35}},{"start":{"line":204,"column":39},"end":{"line":204,"column":40}}]},"10":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"11":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":9}},{"start":{"line":220,"column":13},"end":{"line":220,"column":22}}]},"12":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":49},"end":{"line":221,"column":52}},{"start":{"line":221,"column":56},"end":{"line":221,"column":66}}]},"13":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":4}},{"start":{"line":224,"column":4},"end":{"line":224,"column":4}}]},"14":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":12}},{"start":{"line":224,"column":16},"end":{"line":224,"column":66}}]},"15":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":26},"end":{"line":229,"column":77}},{"start":{"line":229,"column":81},"end":{"line":229,"column":91}}]},"16":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":6}},{"start":{"line":231,"column":6},"end":{"line":231,"column":6}}]},"17":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":240,"column":4}},{"start":{"line":240,"column":4},"end":{"line":240,"column":4}}]},"18":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"19":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":2},"end":{"line":259,"column":2}},{"start":{"line":259,"column":2},"end":{"line":259,"column":2}}]},"20":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"21":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"22":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"23":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"24":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"25":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":2},"end":{"line":370,"column":2}},{"start":{"line":370,"column":2},"end":{"line":370,"column":2}}]},"26":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"27":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":9},"end":{"line":388,"column":9}},{"start":{"line":388,"column":9},"end":{"line":388,"column":9}}]},"28":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":9},"end":{"line":390,"column":9}},{"start":{"line":390,"column":9},"end":{"line":390,"column":9}}]},"29":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":2},"end":{"line":407,"column":2}},{"start":{"line":407,"column":2},"end":{"line":407,"column":2}}]},"30":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":4},"end":{"line":409,"column":4}},{"start":{"line":409,"column":4},"end":{"line":409,"column":4}}]},"31":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":6},"end":{"line":412,"column":6}},{"start":{"line":412,"column":6},"end":{"line":412,"column":6}}]},"32":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":2},"end":{"line":421,"column":2}},{"start":{"line":421,"column":2},"end":{"line":421,"column":2}}]},"33":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":2},"end":{"line":426,"column":2}},{"start":{"line":426,"column":2},"end":{"line":426,"column":2}}]},"34":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":6},"end":{"line":426,"column":44}},{"start":{"line":426,"column":48},"end":{"line":426,"column":77}}]},"35":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":2},"end":{"line":450,"column":2}},{"start":{"line":450,"column":2},"end":{"line":450,"column":2}}]},"36":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":451,"column":4}},{"start":{"line":451,"column":4},"end":{"line":451,"column":4}}]},"37":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]},"38":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":2},"end":{"line":514,"column":2}},{"start":{"line":514,"column":2},"end":{"line":514,"column":2}}]},"39":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":6},"end":{"line":521,"column":6}},{"start":{"line":521,"column":6},"end":{"line":521,"column":6}}]},"40":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":6},"end":{"line":525,"column":6}},{"start":{"line":525,"column":6},"end":{"line":525,"column":6}}]},"41":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":4},"end":{"line":532,"column":4}},{"start":{"line":532,"column":4},"end":{"line":532,"column":4}}]}},"code":["/**"," *"," * See [the RTM client events](../events/client) for details of the client event lifecycle."," */","","var bind = require('lodash').bind;","var cloneDeep = require('lodash').cloneDeep;","var contains = require('lodash').contains;","var inherits = require('inherits');","var isUndefined = require('lodash').isUndefined;","","var RTM_API_EVENTS = require('../events/rtm').EVENTS;","var RTM_CLIENT_INTERNAL_EVENT_TYPES = [","  'pong',","  RTM_API_EVENTS.HELLO,","  RTM_API_EVENTS.TEAM_MIGRATION_STARTED,","];","var UNRECOVERABLE_RTM_START_ERRS = [","  'not_authed',","  'invalid_auth',","  'account_inactive',","];","var CLIENT_EVENTS = require('../events/client').RTM;","var BaseAPIClient = require('../client');","var RtmFacet = require('../web/facets').RtmFacet;","var makeMessageEventWithSubtype = require('../events/utils').makeMessageEventWithSubtype;","var wsSocketFn = require('../transports/ws');","","","/**"," *"," * @param {String} token"," * @param {object?} opts"," * @param {Function} opts.socketFn A function to call, passing in a websocket URL, that should"," *     return a websocket instance connected to that URL."," * @param {object} opts.dataStore A store to cache Slack info, e.g. channels, users etc. in."," * @param {boolean} opts.autoReconnect Whether or not to automatically reconnect when the connection"," *     closes."," * @param {number} opts.maxReconnectionAttempts"," * @param {number} opts.reconnectionBackoff"," * @param {number} opts.wsPingInterval"," * @param {number} opts.maxPongInterval"," * @param {string} opts.logLevel The log level for the logger."," * @param {Function} opts.logger Function to use for log calls, takes (logLevel, logString)"," *     parameters."," * @param {SlackDataStore} opts.dataStore"," * @constructor"," */","function RTMClient(token, opts) {","  var clientOpts = opts || {};","","  // Force the max request concurrency to 1 for the RTM client. This is because it should not be","  // trying to rtm.start in parallel.","  clientOpts.maxRequestConcurrency = 1;","","  BaseAPIClient.call(this, token, clientOpts);","","  /**","   * @type {Function}","   */","  this._socketFn = clientOpts.socketFn || wsSocketFn;","","  /**","   * The active websocket.","   * @type {Object}","   */","  this.ws = undefined;","","  if (!isUndefined(clientOpts.dataStore)) {","    this.registerDataStore(clientOpts.dataStore);","  }","","  this.MAX_RECONNECTION_ATTEMPTS = clientOpts.maxReconnectionAttempts || 10;","  this.RECONNECTION_BACKOFF = clientOpts.reconnectionBackoff || 3000;","  this.MAX_PONG_INTERVAL = clientOpts.maxPongInterval || 10000;","  this.WS_PING_INTERVAL = clientOpts.wsPingInterval || 5000;","","  this.autoReconnect = clientOpts.autoReconnect !== false;","}","","inherits(RTMClient, BaseAPIClient);","","","/**"," * @type {boolean}"," */","RTMClient.prototype.connected = false;","","","/**"," * @type {boolean}"," */","RTMClient.prototype.authenticated = false;","","","/**"," * The id of the user that's currently connected via this client."," * @type {string}"," */","RTMClient.prototype.activeUserId = undefined;","","","/**"," * The id of the team that's currently connected via this client."," * @type {string}"," */","RTMClient.prototype.activeTeamId = undefined;","","","/**"," * Maps message id to message object for messages sent to but not replied to by the remote server."," * @type {Object}"," * @private"," */","RTMClient.prototype._pendingMessages = {};","","","/**"," * The timer repeatedly pinging the server to let it know the client is still alive."," * @type {?}"," */","RTMClient.prototype._pingTimer = null;","","","/**"," * The time the last pong was received from the server."," * @type {number}"," * @private"," */","RTMClient.prototype._lastPong = 0;","","","/**"," *"," * @type {number}"," * @private"," */","RTMClient.prototype._connAttempts = 0;","","","/**"," * Whether the server is currently connecting."," * @type {boolean}"," * @private"," */","RTMClient.prototype._connecting = false;","","","/**"," * Whether the server is currently re-connecting."," * @type {boolean}"," * @private"," */","RTMClient.prototype._reconnecting = false;","","","/**"," * @type {SlackDataStore}"," */","RTMClient.prototype.dataStore = undefined;","","","/** @inheritDoc */","RTMClient.prototype._createFacets = function _createFacets() {","  RTMClient.super_.prototype._createFacets.call(this);","","  /**","   * Allows the RTM client to get setup without needing to have a full web client.","   * @type {RtmFacet}","   * @private","   */","  this._rtm = new RtmFacet(bind(this.makeAPICall, this));","};","","","/**"," *"," * @param {object} opts"," */","RTMClient.prototype.start = function start(opts) {","  // Check whether the client is currently attempting to connect to the RTM API.","  if (!this._connecting) {","    this.logger('verbose', 'attempting to connect via the RTM API');","    this.emit(CLIENT_EVENTS.CONNECTING);","    this._connecting = true;","","    this._rtm.start(opts, bind(this._onStart, this));","  }","};","","","/**"," * @deprecated since version 2.0.0, use start() instead."," */","RTMClient.prototype.login = function login(opts) {","  this.start(opts);","};","","","/**"," * Generates the next message id to use."," */","RTMClient.prototype.nextMessageId = function nextMessageId() {","  this._messageId = this._messageId || 1;","  return this._messageId++;","};","","","/**"," *"," * @param err"," * @param data"," * @private"," */","RTMClient.prototype._onStart = function _onStart(err, data) {","  var errMsg;","  this._connecting = false;","  this._reconnecting = false;","","  if (err || !data.url) {","    this.emit(CLIENT_EVENTS.UNABLE_TO_RTM_START, err || data.error);","","    // Any of these mean this client is unusable, so don't attempt to auto-reconnect","    if (data && contains(UNRECOVERABLE_RTM_START_ERRS, data.error)) {","      errMsg = 'unrecoverable failure connecting to the RTM API';","      this.logger('error', errMsg + ': ' + data.error);","      this.disconnect(errMsg, data.error);","    } else {","      this.logger('info', 'unable to RTM start, attempting reconnect: ' + err || data.error);","      this.authenticated = false;","      if (this.autoReconnect) {","        this.reconnect();","      }","    }","  } else {","    this.logger('verbose', 'rtm.start successful, attempting to open websocket URL');","    this.authenticated = true;","    this.activeUserId = data.self.id;","    this.activeTeamId = data.team.id;","    if (!isUndefined(this.dataStore)) {","      this.dataStore.cacheRtmStart(data);","    }","","    this.emit(CLIENT_EVENTS.AUTHENTICATED, data);","    this.connect(data.url);","  }","};","","","/**"," * Closes the websocket and tears down the ping function."," * @private"," */","RTMClient.prototype._safeDisconnect = function _safeDisconnect() {","  if (this._pingTimer) {","    clearInterval(this._pingTimer);","    this._pingTimer = null;","  }","  if (this.ws) {","    // Stop listening to the websocket's close event, so that the auto-reconnect logic doesn't fire","    // twice.","    this.ws.removeAllListeners('close');","    this.ws.close();","  }","  this.authenticated = false;","  this.connected = false;","};","","","/**"," * Connects to the RTM API."," * @param {string} socketUrl The URL of the websocket to connect to."," */","RTMClient.prototype.connect = function connect(socketUrl) {","  this.emit(CLIENT_EVENTS.WS_OPENING);","  this.ws = this._socketFn(socketUrl);","","  this.ws.on('open', bind(this.handleWsOpen, this));","  this.ws.on('message', bind(this.handleWsMessage, this));","  this.ws.on('error', bind(this.handleWsError, this));","  this.ws.on('close', bind(this.handleWsClose, this));","  this.ws.on('ping', bind(this.handleWsPing, this));","};","","","/**"," * Disconnects from the RTM API."," * @param optReason"," * @param optCode"," */","RTMClient.prototype.disconnect = function disconnect(optErr, optCode) {","  this.emit(CLIENT_EVENTS.DISCONNECT, optErr, optCode);","  this.autoReconnect = false;","  this._safeDisconnect();","};","","","/**"," *"," */","RTMClient.prototype.reconnect = function reconnect() {","  if (!this._reconnecting) {","    this.emit(CLIENT_EVENTS.ATTEMPTING_RECONNECT);","    this._reconnecting = true;","    this._safeDisconnect();","","    // TODO(leah): Update this to remove the reconn logic in the RTM client as it should be covered","    //             by the web client policy","    this._connAttempts++;","    if (this._connAttempts > this.MAX_RECONNECTION_ATTEMPTS) {","      throw new Error('unable to connect to Slack RTM API, failed after max reconnection attempts');","    }","    setTimeout(bind(this.start, this), this._connAttempts * this.RECONNECTION_BACKOFF);","  }","};","","","/**"," * Pings the remote server to let it know the client is still alive."," * @private"," */","RTMClient.prototype._pingServer = function _pingServer() {","  var pongInterval;","","  if (this.connected) {","    this.send({ type: 'ping' });","","    // If the last pong was more than MAX_PONG_INTERVAL, force a reconnect","    pongInterval = Date.now() - this._lastPong;","    if (pongInterval > this.MAX_PONG_INTERVAL) {","      this.reconnect();","    }","  }","};","","","/**"," * Handler to deal with the WebSocket open event."," * NOTE: this.connected doesn't get set to true until the helloHandler is called."," */","RTMClient.prototype.handleWsOpen = function handleWsOpen() {","  this.emit(CLIENT_EVENTS.WS_OPENED);","  this._lastPong = Date.now();","  this._connAttempts = 0;","  if (this._pingTimer) {","    clearInterval(this._pingTimer);","  } else {","    this._pingTimer = setInterval(bind(this._pingServer, this), this.WS_PING_INTERVAL);","  }","};","","","/**"," * Handler to deal with the WebSocket message event."," * @param {object} wsMsg"," */","RTMClient.prototype.handleWsMessage = function handleWsMessage(wsMsg) {","  var message;","  this.logger('debug', wsMsg);","  this.emit(CLIENT_EVENTS.RAW_MESSAGE, wsMsg);","","  try {","    message = JSON.parse(wsMsg);","  } catch (err) {","    // TODO(leah): Emit an event here?","    this.logger('debug', 'unable to parse message: ' + err);","    return;","  }","","  if (contains(RTM_CLIENT_INTERNAL_EVENT_TYPES, message.type)) {","    this._handleWsMessageInternal(message.type, message);","  } else {","    this._handleWsMessageViaEventHandler(message.type, message);","  }","};","","","/**"," *"," * @param {String} messageType"," * @param {Object} message"," * @private"," */","RTMClient.prototype._handleWsMessageInternal = function _handleWsMessageInternal(","  messageType, message) {","  if (messageType === 'pong') {","    this._handlePong(message);","  } else if (messageType === RTM_API_EVENTS.HELLO) {","    this._handleHello();","  } else if (messageType === RTM_API_EVENTS.TEAM_MIGRATION_STARTED) {","    this.reconnect();","    this.emit(messageType, message);","  }","};","","","/**"," *"," * @param {String} messageType"," * @param {Object} message"," * @private"," */","RTMClient.prototype._handleWsMessageViaEventHandler = function _handleWsMessageViaEventHandler(","  messageType, message) {","  var replyTo;","","  if (messageType === RTM_API_EVENTS.MESSAGE) {","    replyTo = message.reply_to;","    if (replyTo) {","      // TODO(leah): figure out how message pushes via the RTM API should work and how any errors","      //             will be handled","      if (this._pendingMessages[replyTo]) {","        delete this._pendingMessages[replyTo];","      } else {","        // If the message was sent in reply to a message that's not on this client, skip the message","        return;","      }","    }","  }","","  if (!isUndefined(this.dataStore)) {","    this.dataStore.handleRtmMessage(this.activeUserId, this.activeTeamId, messageType, message);","  }","","  this.emit(messageType, message);","  if (messageType === RTM_API_EVENTS.MESSAGE && !isUndefined(message.subtype)) {","    this.emit(makeMessageEventWithSubtype(message.subtype), message);","  }","};","","","/**"," * Emits the websocket error."," * @param {Object} err"," */","RTMClient.prototype.handleWsError = function handleWsError(err) {","  this.logger('debug', err);","  this.emit(CLIENT_EVENTS.WS_ERROR, err);","};","","","/**"," *"," */","RTMClient.prototype.handleWsClose = function handleWsClose(code, reason) {","  this.connected = false;","","  this.emit(CLIENT_EVENTS.WS_CLOSE, code, reason);","","  if (this.autoReconnect) {","    if (!this._connecting) {","      this.reconnect();","    }","  } else {","    this.disconnect('websocket closed with auto-reconnect false on the RTM client');","  }","};","","","/**"," * Handler for the websocket ping event."," * This pongs back to the server to let it know the client is still active."," */","RTMClient.prototype.handleWsPing = function handleWsPing() {","  if (this.ws.pong) {","    this.ws.pong();","  }","};","","","/**"," * Handles the server's pong message, updating the lastPong time on the client."," * @param {Object} message"," */","RTMClient.prototype._handlePong = function _handlePong(message) {","  this._lastPong = Date.now();","  delete this._pendingMessages[message.reply_to];","};","","","/** {@link https://api.slack.com/events/hello|hello} */","RTMClient.prototype._handleHello = function _handleHello() {","  this.connected = true;","  this.emit(CLIENT_EVENTS.RTM_CONNECTION_OPENED);","};","","","/**"," * Helper for sending a simple message to a channel|group|DM etc via the RTM API."," * @param {string} text The text of the messsage to send."," * @param {string} channelId The id of the channel|group|DM to send this message to."," * @param {Function=} optCb"," */","RTMClient.prototype.sendMessage = function sendMessage(text, channelId, optCb) {","  this.send({","    text: text,","    channel: channelId,","    type: RTM_API_EVENTS.MESSAGE,","  }, optCb);","};","","","/**"," * Sends a message over the websocket to the server."," * @param {*} message The message to send back to the server."," * @param {Function=} optCb"," */","RTMClient.prototype.send = function send(message, optCb) {","  var wsMsg = cloneDeep(message);","  var jsonMessage;","  var err;","  var _this = this;","","  if (this.connected) {","    wsMsg.id = this.nextMessageId();","    jsonMessage = JSON.stringify(wsMsg);","    this.logger('debug', jsonMessage);","","    this._pendingMessages[wsMsg.id] = wsMsg;","    this.ws.send(jsonMessage, undefined, function handleWsMsgResponse(wsRespErr) {","      if (!isUndefined(wsRespErr)) {","        _this.logger('debug', 'Unable to send message: ' + wsRespErr);","      }","","      if (!isUndefined(optCb)) {","        optCb(wsRespErr);","      }","    });","  } else {","    err = 'ws not connected, unable to send message';","    this.logger('debug', err);","    if (!isUndefined(optCb)) {","      optCb(new Error(err));","    }","  }","};","","","module.exports = RTMClient;",""],"l":{"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":1,"18":1,"23":1,"24":1,"25":1,"26":1,"27":1,"49":1,"50":0,"54":0,"56":0,"61":0,"67":0,"69":0,"70":0,"73":0,"74":0,"75":0,"76":0,"78":0,"81":1,"87":1,"93":1,"100":1,"107":1,"115":1,"122":1,"130":1,"138":1,"146":1,"154":1,"160":1,"164":1,"165":0,"172":0,"180":1,"182":0,"183":0,"184":0,"185":0,"187":0,"195":1,"196":0,"203":1,"204":0,"205":0,"215":1,"216":0,"217":0,"218":0,"220":0,"221":0,"224":0,"225":0,"226":0,"227":0,"229":0,"230":0,"231":0,"232":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"244":0,"245":0,"254":1,"255":0,"256":0,"257":0,"259":0,"262":0,"263":0,"265":0,"266":0,"274":1,"275":0,"276":0,"278":0,"279":0,"280":0,"281":0,"282":0,"291":1,"292":0,"293":0,"294":0,"301":1,"302":0,"303":0,"304":0,"305":0,"309":0,"310":0,"311":0,"313":0,"322":1,"323":0,"325":0,"326":0,"329":0,"330":0,"331":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"348":0,"357":1,"358":0,"359":0,"360":0,"362":0,"363":0,"366":0,"367":0,"370":0,"371":0,"373":0,"384":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"403":1,"405":0,"407":0,"408":0,"409":0,"412":0,"413":0,"416":0,"421":0,"422":0,"425":0,"426":0,"427":0,"436":1,"437":0,"438":0,"445":1,"446":0,"448":0,"450":0,"451":0,"452":0,"455":0,"464":1,"465":0,"466":0,"475":1,"476":0,"477":0,"482":1,"483":0,"484":0,"494":1,"495":0,"508":1,"509":0,"510":0,"511":0,"512":0,"514":0,"515":0,"516":0,"517":0,"519":0,"520":0,"521":0,"522":0,"525":0,"526":0,"530":0,"531":0,"532":0,"533":0,"539":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/events/utils.js","s":{"1":1,"2":1,"3":7,"4":1},"b":{"1":[7,7]},"f":{"1":7},"fnMap":{"1":{"name":"makeMessageEventWithSubtype","line":12,"loc":{"start":{"line":12,"column":34},"end":{"line":12,"column":87}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"2":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":13,"column":2},"end":{"line":13,"column":59}},"4":{"start":{"line":17,"column":0},"end":{"line":17,"column":73}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":44},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":57}}]}},"code":["/**"," *"," */","","var RTM_EVENTS = require('./rtm').EVENTS;","","","/**"," * @param {string} subtype"," * @param {string=} delim"," */","var makeMessageEventWithSubtype = function makeMessageEventWithSubtype(subtype, delim) {","  return [RTM_EVENTS.MESSAGE, subtype].join(delim || '::');","};","","","module.exports.makeMessageEventWithSubtype = makeMessageEventWithSubtype;",""],"l":{"5":1,"12":1,"13":7,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/transports/ws.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/transports/ws.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"wsTransport","line":16,"loc":{"start":{"line":16,"column":18},"end":{"line":16,"column":56}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":16,"column":0},"end":{"line":25,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":35}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":18}},"6":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":65}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":42}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":24},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":34}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]}},"code":["/**"," * Helper to make a new ws WebSocket instance."," */","","var HttpsProxyAgent = require('https-proxy-agent');","var WebSocket = require('ws');","","","/**"," *"," * @param {String} socketUrl"," * @param {Object=} opts"," * @param {String} opts.proxyURL"," * @returns {*}"," */","var wsTransport = function wsTransport(socketUrl, opts) {","  var wsTransportOpts = opts || {};","  var wsOpts = {};","","  if (wsTransportOpts.proxyURL) {","    wsOpts.agent = new HttpsProxyAgent(wsTransportOpts.proxyUrl);","  }","","  return new WebSocket(socketUrl, wsOpts);","};","","module.exports = wsTransport;",""],"l":{"5":1,"6":1,"16":1,"17":0,"18":0,"20":0,"21":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/default/legacy-rtm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/clients/default/legacy-rtm.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"LegacyRTMClient","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":68}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"5":{"start":{"line":12,"column":2},"end":{"line":16,"column":4}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":41}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":37}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}}},"branchMap":{},"code":["/**"," * Legacy client implementation mirroring the 1.x.x Slack client implementations."," */","","var inherits = require('inherits');","","var MemoryDataStore = require('../../data-store/memory-data-store');","var RtmClient = require('../rtm/client');","","","function LegacyRTMClient(slackToken, autoReconnect) {","  var opts = {","    autoReconnect: autoReconnect,","    logLevel: 'debug',","    dataStore: new MemoryDataStore(),","  };","  RtmClient.call(this, slackToken, opts);","}","","inherits(LegacyRTMClient, RtmClient);","","","module.exports = LegacyRTMClient;",""],"l":{"5":1,"7":1,"8":1,"11":1,"12":0,"17":0,"20":1,"23":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/memory-data-store.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/memory-data-store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":1,"91":0,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"SlackMemoryDataStore","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}}},"2":{"name":"clear","line":67,"loc":{"start":{"line":67,"column":39},"end":{"line":67,"column":56}}},"3":{"name":"getUserById","line":78,"loc":{"start":{"line":78,"column":45},"end":{"line":78,"column":74}}},"4":{"name":"getUserByName","line":84,"loc":{"start":{"line":84,"column":47},"end":{"line":84,"column":76}}},"5":{"name":"getUserByEmail","line":90,"loc":{"start":{"line":90,"column":48},"end":{"line":90,"column":79}}},"6":{"name":"getChannelById","line":96,"loc":{"start":{"line":96,"column":48},"end":{"line":96,"column":83}}},"7":{"name":"getChannelByName","line":102,"loc":{"start":{"line":102,"column":50},"end":{"line":102,"column":82}}},"8":{"name":"getGroupById","line":109,"loc":{"start":{"line":109,"column":46},"end":{"line":109,"column":77}}},"9":{"name":"getGroupByName","line":115,"loc":{"start":{"line":115,"column":48},"end":{"line":115,"column":78}}},"10":{"name":"getDMById","line":121,"loc":{"start":{"line":121,"column":43},"end":{"line":121,"column":68}}},"11":{"name":"getDMByName","line":127,"loc":{"start":{"line":127,"column":45},"end":{"line":127,"column":72}}},"12":{"name":"getBotById","line":134,"loc":{"start":{"line":134,"column":44},"end":{"line":134,"column":71}}},"13":{"name":"getBotByName","line":140,"loc":{"start":{"line":140,"column":46},"end":{"line":140,"column":74}}},"14":{"name":"getTeamById","line":146,"loc":{"start":{"line":146,"column":45},"end":{"line":146,"column":74}}},"15":{"name":"getUnreadCount","line":154,"loc":{"start":{"line":154,"column":48},"end":{"line":154,"column":74}}},"16":{"name":"setChannel","line":164,"loc":{"start":{"line":164,"column":44},"end":{"line":164,"column":73}}},"17":{"name":"setGroup","line":170,"loc":{"start":{"line":170,"column":42},"end":{"line":170,"column":67}}},"18":{"name":"setDM","line":176,"loc":{"start":{"line":176,"column":39},"end":{"line":176,"column":58}}},"19":{"name":"setUser","line":182,"loc":{"start":{"line":182,"column":41},"end":{"line":182,"column":64}}},"20":{"name":"setBot","line":188,"loc":{"start":{"line":188,"column":40},"end":{"line":188,"column":61}}},"21":{"name":"setTeam","line":194,"loc":{"start":{"line":194,"column":41},"end":{"line":194,"column":64}}},"22":{"name":"upsertChannel","line":205,"loc":{"start":{"line":205,"column":47},"end":{"line":205,"column":79}}},"23":{"name":"upsertGroup","line":215,"loc":{"start":{"line":215,"column":45},"end":{"line":215,"column":73}}},"24":{"name":"upsertDM","line":225,"loc":{"start":{"line":225,"column":42},"end":{"line":225,"column":64}}},"25":{"name":"upsertUser","line":235,"loc":{"start":{"line":235,"column":44},"end":{"line":235,"column":70}}},"26":{"name":"upsertBot","line":245,"loc":{"start":{"line":245,"column":43},"end":{"line":245,"column":67}}},"27":{"name":"upsertTeam","line":258,"loc":{"start":{"line":258,"column":44},"end":{"line":258,"column":70}}},"28":{"name":"removeChannel","line":276,"loc":{"start":{"line":276,"column":47},"end":{"line":276,"column":81}}},"29":{"name":"removeGroup","line":282,"loc":{"start":{"line":282,"column":45},"end":{"line":282,"column":75}}},"30":{"name":"removeDM","line":288,"loc":{"start":{"line":288,"column":42},"end":{"line":288,"column":66}}},"31":{"name":"removeUser","line":294,"loc":{"start":{"line":294,"column":44},"end":{"line":294,"column":72}}},"32":{"name":"removeBot","line":300,"loc":{"start":{"line":300,"column":43},"end":{"line":300,"column":69}}},"33":{"name":"removeTeam","line":306,"loc":{"start":{"line":306,"column":44},"end":{"line":306,"column":72}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"7":{"start":{"line":18,"column":0},"end":{"line":61,"column":1}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":34}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":21}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":16}},"12":{"start":{"line":46,"column":2},"end":{"line":46,"column":19}},"13":{"start":{"line":53,"column":2},"end":{"line":53,"column":17}},"14":{"start":{"line":60,"column":2},"end":{"line":60,"column":18}},"15":{"start":{"line":63,"column":0},"end":{"line":63,"column":47}},"16":{"start":{"line":67,"column":0},"end":{"line":74,"column":2}},"17":{"start":{"line":68,"column":2},"end":{"line":68,"column":18}},"18":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"19":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}},"20":{"start":{"line":71,"column":2},"end":{"line":71,"column":19}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":17}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"23":{"start":{"line":78,"column":0},"end":{"line":80,"column":2}},"24":{"start":{"line":79,"column":2},"end":{"line":79,"column":28}},"25":{"start":{"line":84,"column":0},"end":{"line":86,"column":2}},"26":{"start":{"line":85,"column":2},"end":{"line":85,"column":40}},"27":{"start":{"line":90,"column":0},"end":{"line":92,"column":2}},"28":{"start":{"line":91,"column":2},"end":{"line":91,"column":42}},"29":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"30":{"start":{"line":97,"column":2},"end":{"line":97,"column":34}},"31":{"start":{"line":102,"column":0},"end":{"line":105,"column":2}},"32":{"start":{"line":103,"column":2},"end":{"line":103,"column":47}},"33":{"start":{"line":104,"column":2},"end":{"line":104,"column":54}},"34":{"start":{"line":109,"column":0},"end":{"line":111,"column":2}},"35":{"start":{"line":110,"column":2},"end":{"line":110,"column":30}},"36":{"start":{"line":115,"column":0},"end":{"line":117,"column":2}},"37":{"start":{"line":116,"column":2},"end":{"line":116,"column":41}},"38":{"start":{"line":121,"column":0},"end":{"line":123,"column":2}},"39":{"start":{"line":122,"column":2},"end":{"line":122,"column":24}},"40":{"start":{"line":127,"column":0},"end":{"line":130,"column":2}},"41":{"start":{"line":128,"column":2},"end":{"line":128,"column":38}},"42":{"start":{"line":129,"column":2},"end":{"line":129,"column":41}},"43":{"start":{"line":134,"column":0},"end":{"line":136,"column":2}},"44":{"start":{"line":135,"column":2},"end":{"line":135,"column":26}},"45":{"start":{"line":140,"column":0},"end":{"line":142,"column":2}},"46":{"start":{"line":141,"column":2},"end":{"line":141,"column":39}},"47":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"48":{"start":{"line":147,"column":2},"end":{"line":147,"column":28}},"49":{"start":{"line":154,"column":0},"end":{"line":155,"column":2}},"50":{"start":{"line":164,"column":0},"end":{"line":166,"column":2}},"51":{"start":{"line":165,"column":2},"end":{"line":165,"column":38}},"52":{"start":{"line":170,"column":0},"end":{"line":172,"column":2}},"53":{"start":{"line":171,"column":2},"end":{"line":171,"column":32}},"54":{"start":{"line":176,"column":0},"end":{"line":178,"column":2}},"55":{"start":{"line":177,"column":2},"end":{"line":177,"column":23}},"56":{"start":{"line":182,"column":0},"end":{"line":184,"column":2}},"57":{"start":{"line":183,"column":2},"end":{"line":183,"column":29}},"58":{"start":{"line":188,"column":0},"end":{"line":190,"column":2}},"59":{"start":{"line":189,"column":2},"end":{"line":189,"column":26}},"60":{"start":{"line":194,"column":0},"end":{"line":196,"column":2}},"61":{"start":{"line":195,"column":2},"end":{"line":195,"column":29}},"62":{"start":{"line":205,"column":0},"end":{"line":211,"column":2}},"63":{"start":{"line":206,"column":2},"end":{"line":210,"column":3}},"64":{"start":{"line":207,"column":4},"end":{"line":207,"column":69}},"65":{"start":{"line":209,"column":4},"end":{"line":209,"column":49}},"66":{"start":{"line":215,"column":0},"end":{"line":221,"column":2}},"67":{"start":{"line":216,"column":2},"end":{"line":220,"column":3}},"68":{"start":{"line":217,"column":4},"end":{"line":217,"column":61}},"69":{"start":{"line":219,"column":4},"end":{"line":219,"column":43}},"70":{"start":{"line":225,"column":0},"end":{"line":231,"column":2}},"71":{"start":{"line":226,"column":2},"end":{"line":230,"column":3}},"72":{"start":{"line":227,"column":4},"end":{"line":227,"column":49}},"73":{"start":{"line":229,"column":4},"end":{"line":229,"column":34}},"74":{"start":{"line":235,"column":0},"end":{"line":241,"column":2}},"75":{"start":{"line":236,"column":2},"end":{"line":240,"column":3}},"76":{"start":{"line":237,"column":4},"end":{"line":237,"column":57}},"77":{"start":{"line":239,"column":4},"end":{"line":239,"column":40}},"78":{"start":{"line":245,"column":0},"end":{"line":254,"column":2}},"79":{"start":{"line":246,"column":2},"end":{"line":246,"column":17}},"80":{"start":{"line":248,"column":2},"end":{"line":253,"column":3}},"81":{"start":{"line":249,"column":4},"end":{"line":249,"column":41}},"82":{"start":{"line":250,"column":4},"end":{"line":250,"column":41}},"83":{"start":{"line":252,"column":4},"end":{"line":252,"column":21}},"84":{"start":{"line":258,"column":0},"end":{"line":267,"column":2}},"85":{"start":{"line":259,"column":2},"end":{"line":259,"column":18}},"86":{"start":{"line":261,"column":2},"end":{"line":266,"column":3}},"87":{"start":{"line":262,"column":4},"end":{"line":262,"column":44}},"88":{"start":{"line":263,"column":4},"end":{"line":263,"column":44}},"89":{"start":{"line":265,"column":4},"end":{"line":265,"column":23}},"90":{"start":{"line":276,"column":0},"end":{"line":278,"column":2}},"91":{"start":{"line":277,"column":2},"end":{"line":277,"column":34}},"92":{"start":{"line":282,"column":0},"end":{"line":284,"column":2}},"93":{"start":{"line":283,"column":2},"end":{"line":283,"column":30}},"94":{"start":{"line":288,"column":0},"end":{"line":290,"column":2}},"95":{"start":{"line":289,"column":2},"end":{"line":289,"column":24}},"96":{"start":{"line":294,"column":0},"end":{"line":296,"column":2}},"97":{"start":{"line":295,"column":2},"end":{"line":295,"column":28}},"98":{"start":{"line":300,"column":0},"end":{"line":302,"column":2}},"99":{"start":{"line":301,"column":2},"end":{"line":301,"column":26}},"100":{"start":{"line":306,"column":0},"end":{"line":308,"column":2}},"101":{"start":{"line":307,"column":2},"end":{"line":307,"column":28}},"102":{"start":{"line":311,"column":0},"end":{"line":311,"column":38}}},"branchMap":{"1":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"2":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"3":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"4":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":2},"end":{"line":236,"column":2}},{"start":{"line":236,"column":2},"end":{"line":236,"column":2}}]},"5":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"6":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]}},"code":["/**"," * In memory data store for caching information from the Slack API."," */","","var assign = require('lodash').assign;","var find = require('lodash').find;","var has = require('lodash').has;","var inherits = require('inherits');","","var SlackDataStore = require('./data-store');","var models = require('../models');","","","/**"," *"," * @constructor"," */","function SlackMemoryDataStore(opts) {","  SlackDataStore.call(this, opts);","","  /**","   *","   * @type {Object}","   */","  this.users = {};","","","  /**","   *","   * @type {Object}","   */","  this.channels = {};","","","  /**","   *","   * @type {Object}","   */","  this.dms = {};","","","  /**","   *","   * @type {Object}","   */","  this.groups = {};","","","  /**","   *","   * @type {Object}","   */","  this.bots = {};","","","  /**","   *","   * @type {Object}","   */","  this.teams = {};","}","","inherits(SlackMemoryDataStore, SlackDataStore);","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.clear = function clear() {","  this.users = {};","  this.channels = {};","  this.dms = {};","  this.groups = {};","  this.bots = {};","  this.teams = {};","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getUserById = function getUserById(userId) {","  return this.users[userId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getUserByName = function getUserByName(name) {","  return find(this.users, 'name', name);","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getUserByEmail = function getUserByEmail(email) {","  return find(this.users, 'email', email);","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getChannelById = function getChannelById(channelId) {","  return this.channels[channelId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getChannelByName = function getChannelByName(name) {","  var transformedName = name.replace(/^#/, '');","  return find(this.channels, 'name', transformedName);","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getGroupById = function getGroupById(groupId) {","  return this.groups[groupId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getGroupByName = function getGroupByName(name) {","  return find(this.groups, 'name', name);","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getDMById = function getDMById(dmId) {","  return this.dms[dmId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getDMByName = function getDMByName(name) {","  var user = this.getUserByName(name);","  return find(this.dms, 'user', user.id);","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getBotById = function getBotById(botId) {","  return this.bots[botId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getBotByName = function getBotByName(name) {","  return find(this.bots, 'name', name);","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.getTeamById = function getTeamById(teamId) {","  return this.teams[teamId];","};","","","/**"," * Returns the unread count for all objects: channels, groups etc."," */","SlackMemoryDataStore.prototype.getUnreadCount = function getUnreadCount() {","};","","","// ###############################################","// Setters","// ###############################################","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.setChannel = function setChannel(channel) {","  this.channels[channel.id] = channel;","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.setGroup = function setGroup(group) {","  this.groups[group.id] = group;","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.setDM = function setDM(dm) {","  this.dms[dm.id] = dm;","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.setUser = function setUser(user) {","  this.users[user.id] = user;","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.setBot = function setBot(bot) {","  this.bots[bot.id] = bot;","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.setTeam = function setTeam(team) {","  this.teams[team.id] = team;","};","","","// ###############################################","// Upserts","// ###############################################","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.upsertChannel = function upsertChannel(channel) {","  if (has(this.channels, channel.id)) {","    this.setChannel(this.getChannelById(channel.id).update(channel));","  } else {","    this.setChannel(new models.Channel(channel));","  }","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.upsertGroup = function upsertGroup(group) {","  if (has(this.groups, group.id)) {","    this.setGroup(this.getGroupById(group.id).update(group));","  } else {","    this.setGroup(new models.Group(group));","  }","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.upsertDM = function upsertDM(dm) {","  if (has(this.dms, dm.id)) {","    this.setDM(this.getDMById(dm.id).update(dm));","  } else {","    this.setDM(new models.DM(dm));","  }","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.upsertUser = function upsertUser(user) {","  if (has(this.users, user.id)) {","    this.setUser(this.getUserById(user.id).update(user));","  } else {","    this.setUser(new models.User(user));","  }","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.upsertBot = function upsertBot(bot) {","  var currentBot;","","  if (has(this.bots, bot.id)) {","    currentBot = this.getBotById(bot.id);","    this.setBot(assign(currentBot, bot));","  } else {","    this.setBot(bot);","  }","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.upsertTeam = function upsertTeam(team) {","  var currentTeam;","","  if (has(this.teams, team.id)) {","    currentTeam = this.getTeamById(team.id);","    this.setTeam(assign(currentTeam, team));","  } else {","    this.setTeam(team);","  }","};","","","// ###############################################","// Deletion methods","// ###############################################","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.removeChannel = function removeChannel(channelId) {","  delete this.channels[channelId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.removeGroup = function removeGroup(groupId) {","  delete this.groups[groupId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.removeDM = function removeDM(dmId) {","  delete this.dms[dmId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.removeUser = function removeUser(userId) {","  delete this.users[userId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.removeBot = function removeBot(botId) {","  delete this.bots[botId];","};","","","/** @inheritdoc */","SlackMemoryDataStore.prototype.removeTeam = function removeTeam(teamId) {","  delete this.teams[teamId];","};","","","module.exports = SlackMemoryDataStore;",""],"l":{"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"18":1,"19":0,"25":0,"32":0,"39":0,"46":0,"53":0,"60":0,"63":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"78":1,"79":0,"84":1,"85":0,"90":1,"91":0,"96":1,"97":0,"102":1,"103":0,"104":0,"109":1,"110":0,"115":1,"116":0,"121":1,"122":0,"127":1,"128":0,"129":0,"134":1,"135":0,"140":1,"141":0,"146":1,"147":0,"154":1,"164":1,"165":0,"170":1,"171":0,"176":1,"177":0,"182":1,"183":0,"188":1,"189":0,"194":1,"195":0,"205":1,"206":0,"207":0,"209":0,"215":1,"216":0,"217":0,"219":0,"225":1,"226":0,"227":0,"229":0,"235":1,"236":0,"237":0,"239":0,"245":1,"246":0,"248":0,"249":0,"250":0,"252":0,"258":1,"259":0,"261":0,"262":0,"263":0,"265":0,"276":1,"277":0,"282":1,"283":0,"288":1,"289":0,"294":1,"295":0,"300":1,"301":0,"306":1,"307":0,"311":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/data-store.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/data-store.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"fnMap":{"1":{"name":"SlackDataStore","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":30}}},"2":{"name":"anonRegisterMessageHandler","line":34,"loc":{"start":{"line":34,"column":27},"end":{"line":34,"column":79}}},"3":{"name":"registerMessageHandler","line":52,"loc":{"start":{"line":52,"column":50},"end":{"line":52,"column":98}}},"4":{"name":"clear","line":60,"loc":{"start":{"line":60,"column":33},"end":{"line":60,"column":50}}},"5":{"name":"getUserById","line":74,"loc":{"start":{"line":74,"column":39},"end":{"line":74,"column":68}}},"6":{"name":"getUserByName","line":83,"loc":{"start":{"line":83,"column":41},"end":{"line":83,"column":70}}},"7":{"name":"getUserByEmail","line":92,"loc":{"start":{"line":92,"column":42},"end":{"line":92,"column":73}}},"8":{"name":"getChannelById","line":101,"loc":{"start":{"line":101,"column":42},"end":{"line":101,"column":77}}},"9":{"name":"getChannelByName","line":110,"loc":{"start":{"line":110,"column":44},"end":{"line":110,"column":76}}},"10":{"name":"getGroupById","line":119,"loc":{"start":{"line":119,"column":40},"end":{"line":119,"column":71}}},"11":{"name":"getGroupByName","line":128,"loc":{"start":{"line":128,"column":42},"end":{"line":128,"column":72}}},"12":{"name":"getDMById","line":138,"loc":{"start":{"line":138,"column":37},"end":{"line":138,"column":62}}},"13":{"name":"getDMByName","line":148,"loc":{"start":{"line":148,"column":39},"end":{"line":148,"column":66}}},"14":{"name":"getBotById","line":158,"loc":{"start":{"line":158,"column":38},"end":{"line":158,"column":65}}},"15":{"name":"getBotByName","line":168,"loc":{"start":{"line":168,"column":40},"end":{"line":168,"column":68}}},"16":{"name":"getTeamById","line":178,"loc":{"start":{"line":178,"column":39},"end":{"line":178,"column":66}}},"17":{"name":"getUnreadCount","line":186,"loc":{"start":{"line":186,"column":42},"end":{"line":186,"column":68}}},"18":{"name":"setChannel","line":199,"loc":{"start":{"line":199,"column":38},"end":{"line":199,"column":67}}},"19":{"name":"setGroup","line":207,"loc":{"start":{"line":207,"column":36},"end":{"line":207,"column":61}}},"20":{"name":"setDM","line":215,"loc":{"start":{"line":215,"column":33},"end":{"line":215,"column":52}}},"21":{"name":"setUser","line":223,"loc":{"start":{"line":223,"column":35},"end":{"line":223,"column":58}}},"22":{"name":"setBot","line":231,"loc":{"start":{"line":231,"column":34},"end":{"line":231,"column":55}}},"23":{"name":"setTeam","line":238,"loc":{"start":{"line":238,"column":35},"end":{"line":238,"column":58}}},"24":{"name":"upsertChannel","line":248,"loc":{"start":{"line":248,"column":41},"end":{"line":248,"column":73}}},"25":{"name":"upsertGroup","line":254,"loc":{"start":{"line":254,"column":39},"end":{"line":254,"column":67}}},"26":{"name":"upsertDM","line":260,"loc":{"start":{"line":260,"column":36},"end":{"line":260,"column":58}}},"27":{"name":"upsertUser","line":266,"loc":{"start":{"line":266,"column":38},"end":{"line":266,"column":64}}},"28":{"name":"upsertBot","line":272,"loc":{"start":{"line":272,"column":37},"end":{"line":272,"column":61}}},"29":{"name":"upsertTeam","line":278,"loc":{"start":{"line":278,"column":38},"end":{"line":278,"column":64}}},"30":{"name":"removeChannel","line":288,"loc":{"start":{"line":288,"column":41},"end":{"line":288,"column":75}}},"31":{"name":"removeGroup","line":292,"loc":{"start":{"line":292,"column":39},"end":{"line":292,"column":69}}},"32":{"name":"removeDM","line":296,"loc":{"start":{"line":296,"column":36},"end":{"line":296,"column":60}}},"33":{"name":"removeUser","line":300,"loc":{"start":{"line":300,"column":38},"end":{"line":300,"column":66}}},"34":{"name":"removeBot","line":304,"loc":{"start":{"line":304,"column":37},"end":{"line":304,"column":63}}},"35":{"name":"removeTeam","line":308,"loc":{"start":{"line":308,"column":38},"end":{"line":308,"column":66}}},"36":{"name":"upsertChannelGroupOrDMById","line":320,"loc":{"start":{"line":320,"column":54},"end":{"line":320,"column":99}}},"37":{"name":"getChannelGroupOrDMById","line":338,"loc":{"start":{"line":338,"column":51},"end":{"line":338,"column":91}}},"38":{"name":"getChannelOrGroupByName","line":356,"loc":{"start":{"line":356,"column":51},"end":{"line":356,"column":90}}},"39":{"name":"cacheRtmStart","line":370,"loc":{"start":{"line":370,"column":41},"end":{"line":370,"column":70}}},"40":{"name":"cacheRtmUser","line":373,"loc":{"start":{"line":373,"column":28},"end":{"line":373,"column":56}}},"41":{"name":"cacheRtmChannel","line":376,"loc":{"start":{"line":376,"column":31},"end":{"line":376,"column":65}}},"42":{"name":"cacheRtmDM","line":379,"loc":{"start":{"line":379,"column":26},"end":{"line":379,"column":50}}},"43":{"name":"cacheRtmGroup","line":382,"loc":{"start":{"line":382,"column":29},"end":{"line":382,"column":59}}},"44":{"name":"cacheRtmBot","line":385,"loc":{"start":{"line":385,"column":27},"end":{"line":385,"column":53}}},"45":{"name":"handleRtmMessage","line":407,"loc":{"start":{"line":407,"column":44},"end":{"line":408,"column":52}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":97}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"9":{"start":{"line":25,"column":0},"end":{"line":37,"column":1}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":74}},"12":{"start":{"line":34,"column":2},"end":{"line":36,"column":11}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":48}},"14":{"start":{"line":44,"column":0},"end":{"line":44,"column":47}},"15":{"start":{"line":52,"column":0},"end":{"line":54,"column":2}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":41}},"17":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"18":{"start":{"line":74,"column":0},"end":{"line":75,"column":2}},"19":{"start":{"line":83,"column":0},"end":{"line":84,"column":2}},"20":{"start":{"line":92,"column":0},"end":{"line":93,"column":2}},"21":{"start":{"line":101,"column":0},"end":{"line":102,"column":2}},"22":{"start":{"line":110,"column":0},"end":{"line":111,"column":2}},"23":{"start":{"line":119,"column":0},"end":{"line":120,"column":2}},"24":{"start":{"line":128,"column":0},"end":{"line":130,"column":2}},"25":{"start":{"line":138,"column":0},"end":{"line":140,"column":2}},"26":{"start":{"line":148,"column":0},"end":{"line":150,"column":2}},"27":{"start":{"line":158,"column":0},"end":{"line":160,"column":2}},"28":{"start":{"line":168,"column":0},"end":{"line":170,"column":2}},"29":{"start":{"line":178,"column":0},"end":{"line":180,"column":2}},"30":{"start":{"line":186,"column":0},"end":{"line":187,"column":2}},"31":{"start":{"line":199,"column":0},"end":{"line":200,"column":2}},"32":{"start":{"line":207,"column":0},"end":{"line":208,"column":2}},"33":{"start":{"line":215,"column":0},"end":{"line":216,"column":2}},"34":{"start":{"line":223,"column":0},"end":{"line":224,"column":2}},"35":{"start":{"line":231,"column":0},"end":{"line":232,"column":2}},"36":{"start":{"line":238,"column":0},"end":{"line":239,"column":2}},"37":{"start":{"line":248,"column":0},"end":{"line":250,"column":2}},"38":{"start":{"line":254,"column":0},"end":{"line":256,"column":2}},"39":{"start":{"line":260,"column":0},"end":{"line":262,"column":2}},"40":{"start":{"line":266,"column":0},"end":{"line":268,"column":2}},"41":{"start":{"line":272,"column":0},"end":{"line":274,"column":2}},"42":{"start":{"line":278,"column":0},"end":{"line":280,"column":2}},"43":{"start":{"line":288,"column":0},"end":{"line":289,"column":2}},"44":{"start":{"line":292,"column":0},"end":{"line":293,"column":2}},"45":{"start":{"line":296,"column":0},"end":{"line":297,"column":2}},"46":{"start":{"line":300,"column":0},"end":{"line":301,"column":2}},"47":{"start":{"line":304,"column":0},"end":{"line":305,"column":2}},"48":{"start":{"line":308,"column":0},"end":{"line":309,"column":2}},"49":{"start":{"line":320,"column":0},"end":{"line":330,"column":2}},"50":{"start":{"line":321,"column":2},"end":{"line":321,"column":37}},"51":{"start":{"line":323,"column":2},"end":{"line":329,"column":3}},"52":{"start":{"line":324,"column":4},"end":{"line":324,"column":28}},"53":{"start":{"line":325,"column":9},"end":{"line":329,"column":3}},"54":{"start":{"line":326,"column":4},"end":{"line":326,"column":26}},"55":{"start":{"line":327,"column":9},"end":{"line":329,"column":3}},"56":{"start":{"line":328,"column":4},"end":{"line":328,"column":23}},"57":{"start":{"line":338,"column":0},"end":{"line":348,"column":2}},"58":{"start":{"line":339,"column":2},"end":{"line":339,"column":40}},"59":{"start":{"line":341,"column":2},"end":{"line":347,"column":3}},"60":{"start":{"line":342,"column":4},"end":{"line":342,"column":38}},"61":{"start":{"line":343,"column":9},"end":{"line":347,"column":3}},"62":{"start":{"line":344,"column":4},"end":{"line":344,"column":36}},"63":{"start":{"line":345,"column":9},"end":{"line":347,"column":3}},"64":{"start":{"line":346,"column":4},"end":{"line":346,"column":33}},"65":{"start":{"line":356,"column":0},"end":{"line":359,"column":2}},"66":{"start":{"line":357,"column":2},"end":{"line":357,"column":44}},"67":{"start":{"line":358,"column":2},"end":{"line":358,"column":55}},"68":{"start":{"line":370,"column":0},"end":{"line":392,"column":2}},"69":{"start":{"line":371,"column":2},"end":{"line":371,"column":15}},"70":{"start":{"line":373,"column":2},"end":{"line":375,"column":11}},"71":{"start":{"line":374,"column":4},"end":{"line":374,"column":40}},"72":{"start":{"line":376,"column":2},"end":{"line":378,"column":11}},"73":{"start":{"line":377,"column":4},"end":{"line":377,"column":49}},"74":{"start":{"line":379,"column":2},"end":{"line":381,"column":11}},"75":{"start":{"line":380,"column":4},"end":{"line":380,"column":34}},"76":{"start":{"line":382,"column":2},"end":{"line":384,"column":11}},"77":{"start":{"line":383,"column":4},"end":{"line":383,"column":43}},"78":{"start":{"line":385,"column":2},"end":{"line":388,"column":11}},"79":{"start":{"line":387,"column":4},"end":{"line":387,"column":21}},"80":{"start":{"line":390,"column":2},"end":{"line":390,"column":51}},"81":{"start":{"line":391,"column":2},"end":{"line":391,"column":26}},"82":{"start":{"line":407,"column":0},"end":{"line":434,"column":2}},"83":{"start":{"line":409,"column":2},"end":{"line":409,"column":14}},"84":{"start":{"line":410,"column":2},"end":{"line":419,"column":3}},"85":{"start":{"line":411,"column":4},"end":{"line":411,"column":82}},"86":{"start":{"line":415,"column":4},"end":{"line":416,"column":93}},"87":{"start":{"line":418,"column":4},"end":{"line":418,"column":49}},"88":{"start":{"line":421,"column":2},"end":{"line":433,"column":3}},"89":{"start":{"line":422,"column":4},"end":{"line":432,"column":5}},"90":{"start":{"line":424,"column":6},"end":{"line":428,"column":7}},"91":{"start":{"line":425,"column":8},"end":{"line":425,"column":59}},"92":{"start":{"line":427,"column":8},"end":{"line":427,"column":31}},"93":{"start":{"line":431,"column":6},"end":{"line":431,"column":32}},"94":{"start":{"line":437,"column":0},"end":{"line":437,"column":32}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":22},"end":{"line":26,"column":26}},{"start":{"line":26,"column":30},"end":{"line":26,"column":32}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":36}},{"start":{"line":32,"column":40},"end":{"line":32,"column":73}}]},"3":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":2},"end":{"line":323,"column":2}},{"start":{"line":323,"column":2},"end":{"line":323,"column":2}}]},"4":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":9},"end":{"line":325,"column":9}},{"start":{"line":325,"column":9},"end":{"line":325,"column":9}}]},"5":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":9},"end":{"line":327,"column":9}},{"start":{"line":327,"column":9},"end":{"line":327,"column":9}}]},"6":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"7":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":9},"end":{"line":343,"column":9}},{"start":{"line":343,"column":9},"end":{"line":343,"column":9}}]},"8":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":9},"end":{"line":345,"column":9}},{"start":{"line":345,"column":9},"end":{"line":345,"column":9}}]},"9":{"line":358,"type":"cond-expr","locations":[{"start":{"line":358,"column":19},"end":{"line":358,"column":26}},{"start":{"line":358,"column":29},"end":{"line":358,"column":54}}]},"10":{"line":373,"type":"binary-expr","locations":[{"start":{"line":373,"column":10},"end":{"line":373,"column":20}},{"start":{"line":373,"column":24},"end":{"line":373,"column":26}}]},"11":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":10},"end":{"line":376,"column":23}},{"start":{"line":376,"column":27},"end":{"line":376,"column":29}}]},"12":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":10},"end":{"line":379,"column":18}},{"start":{"line":379,"column":22},"end":{"line":379,"column":24}}]},"13":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":10},"end":{"line":382,"column":21}},{"start":{"line":382,"column":25},"end":{"line":382,"column":27}}]},"14":{"line":385,"type":"binary-expr","locations":[{"start":{"line":385,"column":10},"end":{"line":385,"column":19}},{"start":{"line":385,"column":23},"end":{"line":385,"column":25}}]},"15":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"16":{"line":410,"type":"binary-expr","locations":[{"start":{"line":410,"column":6},"end":{"line":410,"column":44}},{"start":{"line":410,"column":48},"end":{"line":410,"column":77}}]},"17":{"line":415,"type":"cond-expr","locations":[{"start":{"line":416,"column":6},"end":{"line":416,"column":13}},{"start":{"line":416,"column":16},"end":{"line":416,"column":92}}]},"18":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":2},"end":{"line":421,"column":2}},{"start":{"line":421,"column":2},"end":{"line":421,"column":2}}]},"19":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":6},"end":{"line":424,"column":6}},{"start":{"line":424,"column":6},"end":{"line":424,"column":6}}]}},"code":["/* eslint no-unused-vars: 0 */","","/**"," * Interface for creating a data store object for caching information from the Slack APIs."," */","","var bind = require('lodash').bind;","var forEach = require('lodash').forEach;","var isUndefined = require('lodash').isUndefined;","","var RTM_API_EVENTS = require('../clients/events/rtm').EVENTS;","var getLogger = require('../helpers').getLogger;","var makeMessageEventWithSubtype = require('../clients/events/utils').makeMessageEventWithSubtype;","var messageHandlers = require('./message-handlers');","var models = require('../models');","","","/**"," *"," * @param {Object} opts"," * @param {string=} opts.logLevel The log level for the logger."," * @param {Function=} opts.logger Function to use for log calls, takes (logLevel, logString) params."," * @constructor"," */","function SlackDataStore(opts) {","  var dataStoreOpts = opts || {};","","  /**","   * The logger function attached to this client.","   * @type {Function}","   */","  this.logger = dataStoreOpts.logger || getLogger(dataStoreOpts.logLevel);","","  forEach(messageHandlers, function anonRegisterMessageHandler(handler, event) {","    this.registerMessageHandler(event, handler);","  }, this);","}","","","/**"," * @type {Object}"," * @private"," */","SlackDataStore.prototype._messageHandlers = {};","","","/**"," * Sets a handler to save RTM event data to the data-store."," * @param {string} event"," * @param {function} handler"," */","SlackDataStore.prototype.registerMessageHandler = function registerMessageHandler(event, handler) {","  this._messageHandlers[event] = handler;","};","","","/**"," * Clears the data store and re-sets it to the required starting state."," */","SlackDataStore.prototype.clear = function clear() {","","};","","","// ###############################################","// Getters","// ###############################################","","/**"," * Returns the User object matching the supplied id."," * @param {string} userId"," * @returns {Object}"," */","SlackDataStore.prototype.getUserById = function getUserById(userId) {","};","","","/**"," * Returns the User object matching the supplied name."," * @param {string} name"," * @returns {Object}"," */","SlackDataStore.prototype.getUserByName = function getUserByName(name) {","};","","","/**"," * Returns the User object matching the supplied email."," * @param {string} email"," * @returns {Object}"," */","SlackDataStore.prototype.getUserByEmail = function getUserByEmail(email) {","};","","","/**"," * Returns the Channel object matching the supplied id."," * @param channelId"," * @returns {Object}"," */","SlackDataStore.prototype.getChannelById = function getChannelById(channelId) {","};","","","/**"," * Returns the Channel object matching the supplied name."," * @param name"," * @returns {Object}"," */","SlackDataStore.prototype.getChannelByName = function getChannelByName(name) {","};","","","/**"," * Returns the Group object matching the supplied id."," * @param groupId"," * @returns {Object}"," */","SlackDataStore.prototype.getGroupById = function getGroupById(groupId) {","};","","","/**"," * Returns the Group object matching the supplied name."," * @param name"," * @returns {Object}"," */","SlackDataStore.prototype.getGroupByName = function getGroupByName(name) {","","};","","","/**"," * Returns the DM object matching the supplied id."," * @param dmId"," * @returns {Object}"," */","SlackDataStore.prototype.getDMById = function getDMById(dmId) {","","};","","","/**"," * Returns the DM object between the registered user and the user with the supplied name."," * @param name"," * @return {Object}"," */","SlackDataStore.prototype.getDMByName = function getDMByName(name) {","","};","","","/**"," * Returns the bot object matching the supplied id."," * @param botId"," * @returns {Object}"," */","SlackDataStore.prototype.getBotById = function getBotById(botId) {","","};","","","/**"," * Returns the bot object matching the supplied name."," * @param {string} name"," * @returns {Object}"," */","SlackDataStore.prototype.getBotByName = function getBotByName(name) {","","};","","","/**"," * Returns the bot object matching the supplied name."," * @param {string} name"," * @returns {Object}"," */","SlackDataStore.prototype.getTeamById = function getTeamById(name) {","","};","","","/**"," * Returns the unread count for all objects: channels, groups etc."," */","SlackDataStore.prototype.getUnreadCount = function getUnreadCount() {","};","","","// ###############################################","// Setters","// ###############################################","","","/**"," * Stores a channel object in the data store."," * @param {Object} channel"," */","SlackDataStore.prototype.setChannel = function setChannel(channel) {","};","","","/**"," *"," * @param {Object} group"," */","SlackDataStore.prototype.setGroup = function setGroup(group) {","};","","","/**"," *"," * @param {Object} dm"," */","SlackDataStore.prototype.setDM = function setDM(dm) {","};","","","/**"," *"," * @param {Object} user"," */","SlackDataStore.prototype.setUser = function setUser(user) {","};","","","/**"," *"," * @param {Object} bot"," */","SlackDataStore.prototype.setBot = function setBot(bot) {","};","","","/**"," * @param {Object} team"," */","SlackDataStore.prototype.setTeam = function setTeam(team) {","};","","","// ###############################################","// Upserts","// ###############################################","","","/** @param channel */","SlackDataStore.prototype.upsertChannel = function upsertChannel(channel) {","","};","","","/** @param group */","SlackDataStore.prototype.upsertGroup = function upsertGroup(group) {","","};","","","/** @param dm */","SlackDataStore.prototype.upsertDM = function upsertDM(dm) {","","};","","","/** @param user */","SlackDataStore.prototype.upsertUser = function upsertUser(user) {","","};","","","/** @param bot */","SlackDataStore.prototype.upsertBot = function upsertBot(bot) {","","};","","","/** @param team */","SlackDataStore.prototype.upsertTeam = function upsertTeam(team) {","","};","","","// ###############################################","// Deletion methods","// ###############################################","","","SlackDataStore.prototype.removeChannel = function removeChannel(channelId) {","};","","","SlackDataStore.prototype.removeGroup = function removeGroup(groupId) {","};","","","SlackDataStore.prototype.removeDM = function removeDM(dmId) {","};","","","SlackDataStore.prototype.removeUser = function removeUser(userId) {","};","","","SlackDataStore.prototype.removeBot = function removeBot(botId) {","};","","","SlackDataStore.prototype.removeTeam = function removeTeam(teamId) {","};","","// ###############################################","// Helpers","// ###############################################","","/**"," *"," * @param id"," * @param obj"," */","SlackDataStore.prototype.upsertChannelGroupOrDMById = function upsertChannelGroupOrDMById(id, obj) {","  var firstChar = id.substring(0, 1);","","  if (firstChar === 'C') {","    this.upsertChannel(obj);","  } else if (firstChar === 'G') {","    this.upsertGroup(obj);","  } else if (firstChar === 'D') {","    this.upsertDM(obj);","  }","};","","","/**"," * Returns the channel, group or DM object matching the supplied Id."," * @param objId"," * @returns {Object}"," */","SlackDataStore.prototype.getChannelGroupOrDMById = function getChannelGroupOrDMById(objId) {","  var firstChar = objId.substring(0, 1);","","  if (firstChar === 'C') {","    return this.getChannelById(objId);","  } else if (firstChar === 'G') {","    return this.getGroupById(objId);","  } else if (firstChar === 'D') {","    return this.getDMById(objId);","  }","};","","","/**"," * Returns the channel or group object matching name, finding by channel, then group then DM."," * @param objId"," * @returns {Object}"," */","SlackDataStore.prototype.getChannelOrGroupByName = function getChannelOrGroupByName(name) {","  var channel = this.getChannelByName(name);","  return channel ? channel : this.getGroupByName(name);","};","","","// ###############################################","// Web API response handlers","// ###############################################","","/**"," * Caches an {@link https://api.slack.com/methods/rtm.start|rtm.start} response to the datastore."," * @param {Object} data"," */","SlackDataStore.prototype.cacheRtmStart = function cacheRtmStart(data) {","  this.clear();","","  forEach(data.users || [], function cacheRtmUser(user) {","    this.setUser(new models.User(user));","  }, this);","  forEach(data.channels || [], function cacheRtmChannel(channel) {","    this.setChannel(new models.Channel(channel));","  }, this);","  forEach(data.ims || [], function cacheRtmDM(dm) {","    this.setDM(new models.DM(dm));","  }, this);","  forEach(data.groups || [], function cacheRtmGroup(group) {","    this.setGroup(new models.Group(group));","  }, this);","  forEach(data.bots || [], function cacheRtmBot(bot) {","    // Bots don't have a separate type currently, so treat them as simple objects","    this.setBot(bot);","  }, this);","","  this.getUserById(data.self.id).update(data.self);","  this.setTeam(data.team);","};","","","// ###############################################","// RTM Message handlers","// ###############################################","","","/**"," *"," * @param {string} activeUserId"," * @param {string} activeTeamId"," * @param {string} messageType"," * @param {Object} message"," */","SlackDataStore.prototype.handleRtmMessage = function handleRtmMessage(","  activeUserId, activeTeamId, messageType, message) {","  var handler;","  if (messageType === RTM_API_EVENTS.MESSAGE && !isUndefined(message.subtype)) {","    handler = this._messageHandlers[makeMessageEventWithSubtype(message.subtype)];","","    // If there's a custom handler for the message subtype, use that, otherwise default to adding","    // the message to the base channel history","    handler = handler ?","      handler : this._messageHandlers[makeMessageEventWithSubtype('rtm_client_add_message')];","  } else {","    handler = this._messageHandlers[messageType];","  }","","  if (!isUndefined(handler)) {","    try {","      // Some handlers require the active user / team id, so support providing it as needed","      if (handler.length === 4) {","        handler(activeUserId, activeTeamId, this, message);","      } else {","        handler(this, message);","      }","    } catch (err) {","      // TODO(leah): Do something more here?","      this.logger('debug', err);","    }","  }","};","","","module.exports = SlackDataStore;",""],"l":{"7":1,"8":1,"9":1,"11":1,"12":1,"13":1,"14":1,"15":1,"25":1,"26":0,"32":0,"34":0,"35":0,"44":1,"52":1,"53":0,"60":1,"74":1,"83":1,"92":1,"101":1,"110":1,"119":1,"128":1,"138":1,"148":1,"158":1,"168":1,"178":1,"186":1,"199":1,"207":1,"215":1,"223":1,"231":1,"238":1,"248":1,"254":1,"260":1,"266":1,"272":1,"278":1,"288":1,"292":1,"296":1,"300":1,"304":1,"308":1,"320":1,"321":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"338":1,"339":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"356":1,"357":0,"358":0,"370":1,"371":0,"373":0,"374":0,"376":0,"377":0,"379":0,"380":0,"382":0,"383":0,"385":0,"387":0,"390":0,"391":0,"407":1,"409":0,"410":0,"411":0,"415":0,"418":0,"421":0,"422":0,"424":0,"425":0,"427":0,"431":0,"437":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/index.js","s":{"1":1,"2":1,"3":1,"4":10,"5":45},"b":{},"f":{"1":10,"2":45},"fnMap":{"1":{"name":"registerHandlerModule","line":22,"loc":{"start":{"line":22,"column":24},"end":{"line":22,"column":60}}},"2":{"name":"registerHandlerFn","line":23,"loc":{"start":{"line":23,"column":15},"end":{"line":23,"column":52}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"2":{"start":{"line":8,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":26,"column":3}},"4":{"start":{"line":23,"column":2},"end":{"line":25,"column":5}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":30}}},"branchMap":{},"code":["/**"," *"," */","","var forEach = require('lodash').forEach;","","","var handlerModules = [","  require('./bots'),","  require('./channels'),","  require('./groups'),","  require('./dm'),","  require('./presence'),","  require('./stars'),","  require('./team'),","  require('./user'),","  require('./message'),","  require('./reactions'),","];","","","forEach(handlerModules, function registerHandlerModule(mod) {","  forEach(mod, function registerHandlerFn(val, key) {","    module.exports[key] = val;","  });","});",""],"l":{"5":1,"8":1,"22":1,"23":10,"24":45}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/bots.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/bots.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":1,"8":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"addBot","line":11,"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":49}}},"2":{"name":"changedBot","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":57}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":32}},"5":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":35}},"7":{"start":{"line":22,"column":0},"end":{"line":25,"column":2}},"8":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}}},"branchMap":{},"code":["/**"," * Handlers for all RTM `bot_*` events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","","/** {@link https://api.slack.com/events/bot_added|bot_added} */","var addBot = function addBot(dataStore, message) {","  dataStore.setBot(message.bot);","};","","","/** {@link https://api.slack.com/events/bot_changed|bot_changed} */","var changedBot = function changedBot(dataStore, message) {","  dataStore.upsertBot(message.bot);","};","","","var handlers = [","  [RTM_EVENTS.BOT_ADDED, addBot],","  [RTM_EVENTS.BOT_CHANGED, changedBot],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"11":1,"12":0,"17":1,"18":0,"22":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/channels.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/channels.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"addChannel","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":57}}},"2":{"name":"handleChannelCreated","line":21,"loc":{"start":{"line":21,"column":27},"end":{"line":21,"column":77}}},"3":{"name":"handleChannelDeleted","line":27,"loc":{"start":{"line":27,"column":27},"end":{"line":27,"column":77}}},"4":{"name":"handleChannelJoined","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":75}}},"5":{"name":"handleChannelLeft","line":39,"loc":{"start":{"line":39,"column":24},"end":{"line":39,"column":99}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":47}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":35}},"9":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":41}},"11":{"start":{"line":27,"column":0},"end":{"line":30,"column":2}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":34}},"13":{"start":{"line":29,"column":2},"end":{"line":29,"column":37}},"14":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"15":{"start":{"line":35,"column":2},"end":{"line":35,"column":43}},"16":{"start":{"line":39,"column":0},"end":{"line":46,"column":2}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":14}},"18":{"start":{"line":41,"column":2},"end":{"line":41,"column":82}},"19":{"start":{"line":42,"column":2},"end":{"line":42,"column":54}},"20":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":30}},"22":{"start":{"line":48,"column":0},"end":{"line":58,"column":2}},"23":{"start":{"line":61,"column":0},"end":{"line":61,"column":37}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]}},"code":["/**"," * Handlers for all RTM `channel_` events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","var baseChannelHandlers = require('./base-channel');","var helpers = require('./helpers');","var models = require('../../models');","","","var addChannel = function addChannel(dataStore, message) {","  var newChannel = new models.Channel(message);","  dataStore.setChannel(newChannel);","};","","","/** {@link https://api.slack.com/events/channel_created|channel_created} */","var handleChannelCreated = function handleChannelCreated(dataStore, message) {","  addChannel(dataStore, message.channel);","};","","","/** {@link https://api.slack.com/events/channel_deleted|channel_deleted} */","var handleChannelDeleted = function handleChannelDeleted(dataStore, message) {","  var channelId = message.channel;","  dataStore.removeChannel(channelId);","};","","","/** {@link https://api.slack.com/events/channel_joined|channel_joined} */","var handleChannelJoined = function handleChannelJoined(dataStore, message) {","  dataStore.upsertChannel(message.channel);","};","","/** {@link https://api.slack.com/events/channel_left|channel_left} */","var handleChannelLeft = function handleChannelLeft(activeUserId, activeTeamId, dataStore, message) {","  var channel;","  baseChannelHandlers.handleLeave(activeUserId, activeTeamId, dataStore, message);","  channel = dataStore.getChannelById(message.channel);","  if (channel) {","    channel.is_member = false;","  }","};","","var handlers = [","  [RTM_EVENTS.CHANNEL_ARCHIVE, baseChannelHandlers.handleArchive],","  [RTM_EVENTS.CHANNEL_CREATED, handleChannelCreated],","  [RTM_EVENTS.CHANNEL_DELETED, handleChannelDeleted],","  [RTM_EVENTS.CHANNEL_HISTORY_CHANGED, helpers.noopMessage],","  [RTM_EVENTS.CHANNEL_JOINED, handleChannelJoined],","  [RTM_EVENTS.CHANNEL_LEFT, handleChannelLeft],","  [RTM_EVENTS.CHANNEL_MARKED, baseChannelHandlers.handleChannelGroupOrDMMarked],","  [RTM_EVENTS.CHANNEL_RENAME, baseChannelHandlers.handleRename],","  [RTM_EVENTS.CHANNEL_UNARCHIVE, baseChannelHandlers.handleUnarchive],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"9":1,"10":1,"11":1,"14":1,"15":0,"16":0,"21":1,"22":0,"27":1,"28":0,"29":0,"34":1,"35":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"48":1,"61":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/base-channel.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/base-channel.js","s":{"1":1,"2":2,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"setBaseChannelProperty","line":6,"loc":{"start":{"line":6,"column":29},"end":{"line":6,"column":71}}},"2":{"name":"setBaseChannelPropertyWrapped","line":7,"loc":{"start":{"line":7,"column":9},"end":{"line":7,"column":68}}},"3":{"name":"handleChannelGroupOrDMMarked","line":21,"loc":{"start":{"line":21,"column":35},"end":{"line":21,"column":93}}},"4":{"name":"handleRename","line":61,"loc":{"start":{"line":61,"column":19},"end":{"line":61,"column":61}}},"5":{"name":"handleLeave","line":70,"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":87}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":7,"column":2},"end":{"line":12,"column":4}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":65}},"4":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"5":{"start":{"line":10,"column":6},"end":{"line":10,"column":21}},"6":{"start":{"line":21,"column":0},"end":{"line":40,"column":2}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":16}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":71}},"9":{"start":{"line":26,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":32}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":48}},"13":{"start":{"line":32,"column":4},"end":{"line":38,"column":5}},"14":{"start":{"line":33,"column":6},"end":{"line":33,"column":40}},"15":{"start":{"line":34,"column":11},"end":{"line":38,"column":5}},"16":{"start":{"line":35,"column":6},"end":{"line":35,"column":38}},"17":{"start":{"line":36,"column":11},"end":{"line":38,"column":5}},"18":{"start":{"line":37,"column":6},"end":{"line":37,"column":35}},"19":{"start":{"line":47,"column":0},"end":{"line":47,"column":64}},"20":{"start":{"line":54,"column":0},"end":{"line":54,"column":67}},"21":{"start":{"line":61,"column":0},"end":{"line":63,"column":2}},"22":{"start":{"line":62,"column":2},"end":{"line":62,"column":76}},"23":{"start":{"line":70,"column":0},"end":{"line":78,"column":2}},"24":{"start":{"line":71,"column":2},"end":{"line":71,"column":12}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":71}},"26":{"start":{"line":74,"column":2},"end":{"line":77,"column":3}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":54}},"28":{"start":{"line":76,"column":4},"end":{"line":76,"column":41}},"29":{"start":{"line":81,"column":0},"end":{"line":81,"column":75}},"30":{"start":{"line":82,"column":0},"end":{"line":82,"column":45}},"31":{"start":{"line":83,"column":0},"end":{"line":83,"column":49}},"32":{"start":{"line":84,"column":0},"end":{"line":84,"column":43}},"33":{"start":{"line":85,"column":0},"end":{"line":85,"column":41}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":11}},{"start":{"line":34,"column":11},"end":{"line":34,"column":11}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":11}},{"start":{"line":36,"column":11},"end":{"line":36,"column":11}}]},"6":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]}},"code":["/**"," * Event handlers that can be re-used between channels, groups and DMs"," */","","","var setBaseChannelProperty = function setBaseChannelProperty(val, key) {","  return function setBaseChannelPropertyWrapped(dataStore, message) {","    var obj = dataStore.getChannelGroupOrDMById(message.channel);","    if (obj) {","      obj[key] = val;","    }","  };","};","","","/**"," * {@link https://api.slack.com/events/channel_marked|channel_marked}"," * {@link https://api.slack.com/events/group_marked|group_marked}"," * {@link https://api.slack.com/events/im_marked|im_marked}"," */","var handleChannelGroupOrDMMarked = function handleChannelGroupOrDMMarked(dataStore, message) {","  var firstChar;","","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","","  if (baseChannel) {","    baseChannel.lastRead = message.ts;","    baseChannel.recalcUnreads();","","    firstChar = message.channel.substring(0, 1);","","    if (firstChar === 'C') {","      dataStore.setChannel(baseChannel);","    } else if (firstChar === 'G') {","      dataStore.setGroup(baseChannel);","    } else if (firstChar === 'D') {","      dataStore.setDM(baseChannel);","    }","  }","};","","","/**"," * {@link https://api.slack.com/events/channel_archive|channel_archive}"," * {@link https://api.slack.com/events/group_archive|group_archive}"," */","var handleArchive = setBaseChannelProperty(true, 'is_archived');","","","/**"," * {@link https://api.slack.com/events/channel_unarchive|channel_unarchive}"," * {@link https://api.slack.com/events/group_unarchive|group_unarchive}"," */","var handleUnarchive = setBaseChannelProperty(false, 'is_archived');","","","/**"," * {@link https://api.slack.com/events/group_rename|group_rename}"," * {@link https://api.slack.com/events/channel_rename|channel_rename}"," */","var handleRename = function handleRename(dataStore, message) {","  dataStore.upsertChannelGroupOrDMById(message.channel.id, message.channel);","};","","","/**"," * {@link https://api.slack.com/events/group_left|group_left}"," * {@link https://api.slack.com/events/channel_left|channel_left}"," */","var handleLeave = function handleLeave(activeUserId, activeTeamId, dataStore, message) {","  var index;","","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","  if (baseChannel) {","    index = baseChannel.members.indexOf(activeUserId);","    baseChannel.members.splice(index, 1);","  }","};","","","module.exports.handleChannelGroupOrDMMarked = handleChannelGroupOrDMMarked;","module.exports.handleArchive = handleArchive;","module.exports.handleUnarchive = handleUnarchive;","module.exports.handleRename = handleRename;","module.exports.handleLeave = handleLeave;",""],"l":{"6":1,"7":2,"8":0,"9":0,"10":0,"21":1,"22":0,"24":0,"26":0,"27":0,"28":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"47":1,"54":1,"61":1,"62":0,"70":1,"71":0,"73":0,"74":0,"75":0,"76":0,"81":1,"82":1,"83":1,"84":1,"85":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/helpers.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"noopMessage","line":8,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":59}}},"2":{"name":"handleNewOrUpdatedUser","line":17,"loc":{"start":{"line":17,"column":29},"end":{"line":17,"column":81}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":17}},"4":{"start":{"line":17,"column":0},"end":{"line":25,"column":2}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":52}},"6":{"start":{"line":19,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":41}},"9":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":63}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]}},"code":["/**"," *"," */","","var models = require('../../models');","","","var noopMessage = function noopMessage(dataStore, message) {","  return message;","};","","","/**"," * {@link https://api.slack.com/events/team_join|team_join}"," * {@link https://api.slack.com/events/user_change|user_change}"," */","var handleNewOrUpdatedUser = function handleNewOrUpdatedUser(dataStore, message) {","  var user = dataStore.getUserById(message.user.id);","  if (user) {","    user.update(message.user);","  } else {","    user = new models.User(message.user);","  }","  dataStore.setUser(user);","};","","","module.exports.handleNewOrUpdatedUser = handleNewOrUpdatedUser;","module.exports.noopMessage = noopMessage;",""],"l":{"5":1,"8":1,"9":0,"17":1,"18":0,"19":0,"20":0,"22":0,"24":0,"28":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":9,"column":2}}},"branchMap":{},"code":["module.exports = {","  Channel: require('./channel'),","  DM: require('./dm'),","  File: require('./file'),","  Group: require('./group'),","  MPDM: require('./mpdm'),","  User: require('./user'),","  UserGroup: require('./user-group'),","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/channel.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/channel.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"Channel","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":37}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":43}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":32}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":25}}},"branchMap":{},"code":["/**"," * {@link https://api.slack.com/types/channel|Channel}"," */","","var inherits = require('inherits');","","var ChannelGroup = require('./channel-group');","","","var Channel = function Channel(opts) {","  ChannelGroup.call(this, 'Channel', opts);","};","","inherits(Channel, ChannelGroup);","","","module.exports = Channel;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/channel-group.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/channel-group.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"ChannelGroup","line":10,"loc":{"start":{"line":10,"column":19},"end":{"line":10,"column":53}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":37}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}}},"branchMap":{},"code":["/**"," *"," */","","var inherits = require('inherits');","","var BaseChannel = require('./base-channel');","","","var ChannelGroup = function ChannelGroup(name, opts) {","  BaseChannel.call(this, name, opts);","};","","inherits(ChannelGroup, BaseChannel);","","","module.exports = ChannelGroup;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/base-channel.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/base-channel.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":1,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"BaseChannel","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}}},"2":{"name":"setProperties","line":59,"loc":{"start":{"line":59,"column":39},"end":{"line":59,"column":68}}},"3":{"name":"startedTyping","line":72,"loc":{"start":{"line":72,"column":38},"end":{"line":72,"column":69}}},"4":{"name":"removeSetTypingTimeout","line":77,"loc":{"start":{"line":77,"column":41},"end":{"line":77,"column":75}}},"5":{"name":"recalcUnreads","line":87,"loc":{"start":{"line":87,"column":38},"end":{"line":87,"column":63}}},"6":{"name":"checkMessageIsUnread","line":89,"loc":{"start":{"line":89,"column":29},"end":{"line":89,"column":68}}},"7":{"name":"getType","line":105,"loc":{"start":{"line":105,"column":32},"end":{"line":105,"column":51}}},"8":{"name":"getTypingUsers","line":114,"loc":{"start":{"line":114,"column":39},"end":{"line":114,"column":65}}},"9":{"name":"getMessageByTs","line":123,"loc":{"start":{"line":123,"column":39},"end":{"line":123,"column":67}}},"10":{"name":"addMessage","line":133,"loc":{"start":{"line":133,"column":35},"end":{"line":133,"column":64}}},"11":{"name":"updateMessage","line":144,"loc":{"start":{"line":144,"column":38},"end":{"line":144,"column":80}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"8":{"start":{"line":15,"column":0},"end":{"line":47,"column":1}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":20}},"11":{"start":{"line":32,"column":2},"end":{"line":32,"column":23}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":38}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":36}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":37}},"15":{"start":{"line":49,"column":0},"end":{"line":49,"column":29}},"16":{"start":{"line":56,"column":0},"end":{"line":56,"column":49}},"17":{"start":{"line":59,"column":0},"end":{"line":65,"column":2}},"18":{"start":{"line":60,"column":2},"end":{"line":60,"column":63}},"19":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"20":{"start":{"line":63,"column":4},"end":{"line":63,"column":33}},"21":{"start":{"line":72,"column":0},"end":{"line":80,"column":2}},"22":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":39}},"24":{"start":{"line":77,"column":2},"end":{"line":79,"column":38}},"25":{"start":{"line":78,"column":4},"end":{"line":78,"column":32}},"26":{"start":{"line":87,"column":0},"end":{"line":98,"column":2}},"27":{"start":{"line":88,"column":2},"end":{"line":88,"column":23}},"28":{"start":{"line":89,"column":2},"end":{"line":95,"column":11}},"29":{"start":{"line":90,"column":4},"end":{"line":94,"column":5}},"30":{"start":{"line":91,"column":6},"end":{"line":91,"column":25}},"31":{"start":{"line":93,"column":6},"end":{"line":93,"column":19}},"32":{"start":{"line":97,"column":2},"end":{"line":97,"column":26}},"33":{"start":{"line":105,"column":0},"end":{"line":107,"column":2}},"34":{"start":{"line":106,"column":2},"end":{"line":106,"column":39}},"35":{"start":{"line":114,"column":0},"end":{"line":116,"column":2}},"36":{"start":{"line":115,"column":2},"end":{"line":115,"column":28}},"37":{"start":{"line":123,"column":0},"end":{"line":126,"column":2}},"38":{"start":{"line":125,"column":2},"end":{"line":125,"column":40}},"39":{"start":{"line":133,"column":0},"end":{"line":141,"column":2}},"40":{"start":{"line":135,"column":2},"end":{"line":135,"column":29}},"41":{"start":{"line":137,"column":2},"end":{"line":140,"column":3}},"42":{"start":{"line":138,"column":4},"end":{"line":138,"column":29}},"43":{"start":{"line":139,"column":4},"end":{"line":139,"column":23}},"44":{"start":{"line":144,"column":0},"end":{"line":150,"column":2}},"45":{"start":{"line":145,"column":2},"end":{"line":145,"column":42}},"46":{"start":{"line":146,"column":2},"end":{"line":146,"column":63}},"47":{"start":{"line":147,"column":2},"end":{"line":149,"column":3}},"48":{"start":{"line":148,"column":4},"end":{"line":148,"column":37}},"49":{"start":{"line":153,"column":0},"end":{"line":153,"column":29}}},"branchMap":{"1":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"2":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"3":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"4":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"5":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":6},"end":{"line":137,"column":30}},{"start":{"line":137,"column":34},"end":{"line":137,"column":49}}]},"6":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]}},"code":["/**"," *"," */","","var bind = require('lodash').bind;","var forEachRight = require('lodash').forEachRight;","var find = require('lodash').find;","var findLastIndex = require('lodash').findLastIndex;","var inherits = require('inherits');","var keys = require('lodash').keys;","","var Model = require('./model');","","","function BaseChannel(objectName, opts) {","  /**","   *","   * @type {Array}","   */","  this.history = [];","","  /**","   * Object, keyed on user id, values of timeouts that will be run to clear the user typing state.","   * @type {{}}","   * @private","   */","  this._typing = {};","","  /**","   *","   */","  this.unreadCount = 0;","","","  /**","   * @type {string}","   */","  this.lastRead = '0000000000.000000';","","  /**","   * @type {string}","   * @private","   */","  this._maxTs = '0000000000.000000';","","  Model.call(this, objectName, opts);","}","","inherits(BaseChannel, Model);","","","/**"," * The timeout after which the user typing entry should be removed."," * @type {number}"," */","BaseChannel.prototype.USER_TYPING_TIMEOUT = 5000;","","","BaseChannel.prototype._setProperties = function setProperties(opts) {","  BaseChannel.super_.prototype._setProperties.call(this, opts);","","  if (this.latest) {","    this.addMessage(this.latest);","  }","};","","","/**"," *"," * @param {string} userId"," */","BaseChannel.prototype.startedTyping = function startedTyping(userId) {","  if (this._typing[userId]) {","    clearTimeout(this._typing[userId]);","  }","","  this._typing[userId] = setTimeout(bind(function removeSetTypingTimeout() {","    delete this._typing[userId];","  }, this), this.USER_TYPING_TIMEOUT);","};","","","/**"," *"," * @returns {number}"," */","BaseChannel.prototype.recalcUnreads = function recalcUnreads() {","  this.unreadCount = 0;","  forEachRight(this.history, function checkMessageIsUnread(message) {","    if (message.ts > this.lastRead) {","      this.unreadCount++;","    } else {","      return false;","    }","  }, this);","","  return this.unreadCount;","};","","","/**"," * Returns the string form of the channel type."," * @return {string}"," */","BaseChannel.prototype.getType = function getType() {","  return this._modelName.toLowerCase();","};","","","/**"," * Returns an array of user ids for all users who are currently typing."," * @return {Array.<string>}"," */","BaseChannel.prototype.getTypingUsers = function getTypingUsers() {","  return keys(this._typing);","};","","","/**"," *"," * @param ts"," */","BaseChannel.prototype.getMessageByTs = function getMessageByTs(ts) {","  // This has the potential to get really slow, but ok for now I guess...","  return find(this.history, { ts: ts });","};","","","/**"," *"," * @param {Object} message"," */","BaseChannel.prototype.addMessage = function addMessage(message) {","  // TODO(leah): Do a reverse walk of this and compare the timestamps as an extra guarantee?","  this.history.push(message);","","  if (message.ts > this._maxTs && !message.hidden) {","    this._maxTs = message.ts;","    this.unreadCount++;","  }","};","","","BaseChannel.prototype.updateMessage = function updateMessage(messageUpdatedMsg) {","  var message = messageUpdatedMsg.message;","  var msgIndex = findLastIndex(this.history, 'ts', message.ts);","  if (msgIndex !== -1) {","    this.history[msgIndex] = message;","  }","};","","","module.exports = BaseChannel;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"15":1,"20":0,"27":0,"32":0,"38":0,"44":0,"46":0,"49":1,"56":1,"59":1,"60":0,"62":0,"63":0,"72":1,"73":0,"74":0,"77":0,"78":0,"87":1,"88":0,"89":0,"90":0,"91":0,"93":0,"97":0,"105":1,"106":0,"114":1,"115":0,"123":1,"125":0,"133":1,"135":0,"137":0,"138":0,"139":0,"144":1,"145":0,"146":0,"147":0,"148":0,"153":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Model","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}}},"2":{"name":"update","line":41,"loc":{"start":{"line":41,"column":25},"end":{"line":41,"column":47}}},"3":{"name":"setProperties","line":56,"loc":{"start":{"line":56,"column":33},"end":{"line":56,"column":62}}},"4":{"name":"_setModelProperty","line":79,"loc":{"start":{"line":79,"column":36},"end":{"line":79,"column":73}}},"5":{"name":"_setObjectProperty","line":102,"loc":{"start":{"line":102,"column":37},"end":{"line":102,"column":75}}},"6":{"name":"_setArrayProperty","line":128,"loc":{"start":{"line":128,"column":36},"end":{"line":128,"column":73}}},"7":{"name":"makeChildModelObjs","line":139,"loc":{"start":{"line":139,"column":27},"end":{"line":139,"column":61}}},"8":{"name":"toJSON","line":154,"loc":{"start":{"line":154,"column":25},"end":{"line":154,"column":43}}},"9":{"name":"mapModelPropertiesToJSON","line":155,"loc":{"start":{"line":155,"column":54},"end":{"line":155,"column":98}}},"10":{"name":"mapModelArrayPropertyToJSON","line":161,"loc":{"start":{"line":161,"column":27},"end":{"line":161,"column":72}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"10":{"start":{"line":17,"column":0},"end":{"line":33,"column":1}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":24}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":25}},"13":{"start":{"line":32,"column":2},"end":{"line":32,"column":49}},"14":{"start":{"line":41,"column":0},"end":{"line":44,"column":2}},"15":{"start":{"line":42,"column":2},"end":{"line":42,"column":28}},"16":{"start":{"line":43,"column":2},"end":{"line":43,"column":14}},"17":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":46}},"19":{"start":{"line":79,"column":0},"end":{"line":88,"column":2}},"20":{"start":{"line":80,"column":2},"end":{"line":87,"column":3}},"21":{"start":{"line":81,"column":4},"end":{"line":81,"column":38}},"22":{"start":{"line":82,"column":9},"end":{"line":87,"column":3}},"23":{"start":{"line":83,"column":4},"end":{"line":83,"column":37}},"24":{"start":{"line":85,"column":4},"end":{"line":85,"column":50}},"25":{"start":{"line":86,"column":4},"end":{"line":86,"column":20}},"26":{"start":{"line":102,"column":0},"end":{"line":118,"column":2}},"27":{"start":{"line":103,"column":2},"end":{"line":103,"column":35}},"28":{"start":{"line":104,"column":2},"end":{"line":104,"column":17}},"29":{"start":{"line":106,"column":2},"end":{"line":117,"column":3}},"30":{"start":{"line":107,"column":4},"end":{"line":112,"column":5}},"31":{"start":{"line":108,"column":6},"end":{"line":108,"column":28}},"32":{"start":{"line":110,"column":6},"end":{"line":110,"column":43}},"33":{"start":{"line":111,"column":6},"end":{"line":111,"column":38}},"34":{"start":{"line":113,"column":4},"end":{"line":113,"column":49}},"35":{"start":{"line":115,"column":4},"end":{"line":115,"column":50}},"36":{"start":{"line":116,"column":4},"end":{"line":116,"column":20}},"37":{"start":{"line":128,"column":0},"end":{"line":151,"column":2}},"38":{"start":{"line":129,"column":2},"end":{"line":129,"column":17}},"39":{"start":{"line":130,"column":2},"end":{"line":130,"column":16}},"40":{"start":{"line":134,"column":2},"end":{"line":150,"column":3}},"41":{"start":{"line":136,"column":4},"end":{"line":136,"column":23}},"42":{"start":{"line":137,"column":4},"end":{"line":146,"column":5}},"43":{"start":{"line":138,"column":6},"end":{"line":138,"column":43}},"44":{"start":{"line":139,"column":6},"end":{"line":141,"column":9}},"45":{"start":{"line":140,"column":8},"end":{"line":140,"column":36}},"46":{"start":{"line":142,"column":6},"end":{"line":142,"column":57}},"47":{"start":{"line":144,"column":6},"end":{"line":144,"column":52}},"48":{"start":{"line":145,"column":6},"end":{"line":145,"column":22}},"49":{"start":{"line":148,"column":4},"end":{"line":148,"column":50}},"50":{"start":{"line":149,"column":4},"end":{"line":149,"column":20}},"51":{"start":{"line":154,"column":0},"end":{"line":172,"column":2}},"52":{"start":{"line":155,"column":2},"end":{"line":169,"column":11}},"53":{"start":{"line":156,"column":4},"end":{"line":156,"column":12}},"54":{"start":{"line":158,"column":4},"end":{"line":166,"column":5}},"55":{"start":{"line":159,"column":6},"end":{"line":159,"column":31}},"56":{"start":{"line":160,"column":11},"end":{"line":166,"column":5}},"57":{"start":{"line":161,"column":6},"end":{"line":163,"column":9}},"58":{"start":{"line":162,"column":8},"end":{"line":162,"column":31}},"59":{"start":{"line":165,"column":6},"end":{"line":165,"column":22}},"60":{"start":{"line":168,"column":4},"end":{"line":168,"column":15}},"61":{"start":{"line":171,"column":2},"end":{"line":171,"column":27}},"62":{"start":{"line":175,"column":0},"end":{"line":175,"column":23}}},"branchMap":{"1":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":38},"end":{"line":32,"column":40}},{"start":{"line":32,"column":43},"end":{"line":32,"column":47}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":9},"end":{"line":82,"column":9}},{"start":{"line":82,"column":9},"end":{"line":82,"column":9}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"5":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"6":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"7":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"8":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"9":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":11}},{"start":{"line":160,"column":11},"end":{"line":160,"column":11}}]}},"code":["/**"," *"," */","","var forEach = require('lodash').forEach;","var has = require('lodash').has;","var isArray = require('lodash').isArray;","var isEmpty = require('lodash').isEmpty;","var isObject = require('lodash').isObject;","var map = require('lodash').map;","var mapValues = require('lodash').mapValues;","","var PROPERTY_TYPES = require('./property-type');","var helpers = require('./helpers');","","","function Model(name, opts) {","  /**","   *","   * @type {Object}","   * @protected","   */","  this._properties = {};","","  /**","   * The name of the model.","   * @type {string}","   * @private","   */","  this._modelName = name;","","  this._setProperties(isEmpty(opts) ? {} : opts);","}","","","/**"," * Updates the model."," * @param {Object} opts"," * @return {Object} The model object that was just updated."," */","Model.prototype.update = function update(opts) {","  this._setProperties(opts);","  return this;","};","","","/**"," * Assigns all properties from the supplied opts object to the model."," *"," * Subclasses of the model class have the opportunity to intelligently set defaults or assign values"," * via individual assignment calls by extending this method on the subclass."," *"," * @param {Object} opts"," * @private"," */","Model.prototype._setProperties = function setProperties(opts) {","  forEach(opts, this._setModelProperty, this);","};","","","/**"," * Assigns an individual property from a Slack API response to a model object."," *"," * Property assignment works by:"," *   1. If the property does not exist, set the property."," *   2. If the property exists on the model, and is a scalar, overwrite the property with the"," *      property from the opts object"," *   3. If the property exists on the model and is a complex property:"," *      * if it's an object, extend the model property with values from the opts property"," *      * if it's an array, overwrite the array. This is because it's currently unclear if there are"," *        any array properties that will only be partially filled by some RTM / API responses, but"," *        completely filled by others."," *"," * @param {String} key"," * @param {*} val"," *cchnnihbtckbllbflvffbvrgelvkufcruclebldbdtbb"," * @private"," */","Model.prototype._setModelProperty = function _setModelProperty(val, key) {","  if (isObject(val)) {","    this._setObjectProperty(key, val);","  } else if (isArray(val)) {","    this._setArrayProperty(key, val);","  } else {","    this._properties[key] = PROPERTY_TYPES.SIMPLE;","    this[key] = val;","  }","};","","","/**"," * Sets an object property from the API on a model object."," *"," * NOTE: this assumes that none of the values of the object from the API represent additional model"," *       objects, i.e. that {relevantChannel: {channelObject}} will never occur in the API response."," *"," * @param key"," * @param val"," *"," * @private"," */","Model.prototype._setObjectProperty = function _setObjectProperty(key, val) {","  var hasProperty = has(this, key);","  var ModelClass;","","  if (helpers.isModelObj(val)) {","    if (hasProperty) {","      this[key].update(val);","    } else {","      ModelClass = helpers.getModelClass();","      this[key] = new ModelClass(val);","    }","    this._properties[key] = PROPERTY_TYPES.MODEL;","  } else {","    this._properties[key] = PROPERTY_TYPES.SIMPLE;","    this[key] = val;","  }","};","","","/**"," *"," * @param key"," * @param val"," *"," * @private"," */","Model.prototype._setArrayProperty = function _setArrayProperty(key, val) {","  var ModelClass;","  var firstItem;","","  // NOTE: This assumes that it's not necessary to search and update model values in arrays and","  //       that instead they can be over-written","  if (!isEmpty(val)) {","    // Assumes that all values in the array are of the same type","    firstItem = val[0];","    if (helpers.isModelObj(firstItem)) {","      ModelClass = helpers.getModelClass();","      this[key] = map(val, function makeChildModelObjs(item) {","        return new ModelClass(item);","      });","      this._properties[key] = PROPERTY_TYPES.MODEL_ARRAY;","    } else {","      this._properties[key] = PROPERTY_TYPES.SIMPLE;","      this[key] = val;","    }","  } else {","    this._properties[key] = PROPERTY_TYPES.SIMPLE;","    this[key] = val;","  }","};","","","Model.prototype.toJSON = function toJSON() {","  var objRepresentation = mapValues(this._properties, function mapModelPropertiesToJSON(val, key) {","    var res;","","    if (val === PROPERTY_TYPES.MODEL) {","      res = this[key].toJSON();","    } else if (val === PROPERTY_TYPES.MODEL_ARRAY) {","      res = map(this[key], function mapModelArrayPropertyToJSON(arrVal) {","        return arrVal.toJSON();","      });","    } else {","      res = this[key];","    }","","    return res;","  }, this);","","  return objRepresentation;","};","","","module.exports = Model;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"13":1,"14":1,"17":1,"23":0,"30":0,"32":0,"41":1,"42":0,"43":0,"56":1,"57":0,"79":1,"80":0,"81":0,"82":0,"83":0,"85":0,"86":0,"102":1,"103":0,"104":0,"106":0,"107":0,"108":0,"110":0,"111":0,"113":0,"115":0,"116":0,"128":1,"129":0,"130":0,"134":0,"136":0,"137":0,"138":0,"139":0,"140":0,"142":0,"144":0,"145":0,"148":0,"149":0,"154":1,"155":0,"156":0,"158":0,"159":0,"160":0,"161":0,"162":0,"165":0,"168":0,"171":0,"175":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/property-type.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/property-type.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}}},"branchMap":{},"code":["var PROPERTY_TYPES = {","  SIMPLE: 0,","  MODEL: 1,","  MODEL_ARRAY: 2,","};","","module.exports = PROPERTY_TYPES;",""],"l":{"1":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/helpers.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1},"b":{"1":[0,0],"2":[0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"isModelObj","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":42}}},"2":{"name":"getModelClass","line":24,"loc":{"start":{"line":24,"column":20},"end":{"line":24,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":66}},"3":{"start":{"line":12,"column":0},"end":{"line":18,"column":2}},"4":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":76}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":15}},"7":{"start":{"line":24,"column":0},"end":{"line":51,"column":2}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":42}},"9":{"start":{"line":27,"column":2},"end":{"line":50,"column":3}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":34}},"11":{"start":{"line":31,"column":6},"end":{"line":31,"column":31}},"12":{"start":{"line":33,"column":6},"end":{"line":33,"column":29}},"13":{"start":{"line":35,"column":6},"end":{"line":35,"column":31}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":37}},"15":{"start":{"line":41,"column":6},"end":{"line":49,"column":7}},"16":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"17":{"start":{"line":43,"column":10},"end":{"line":43,"column":35}},"18":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"19":{"start":{"line":47,"column":10},"end":{"line":47,"column":36}},"20":{"start":{"line":54,"column":0},"end":{"line":54,"column":39}},"21":{"start":{"line":55,"column":0},"end":{"line":55,"column":45}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":27,"type":"switch","locations":[{"start":{"line":28,"column":4},"end":{"line":29,"column":34}},{"start":{"line":30,"column":4},"end":{"line":31,"column":31}},{"start":{"line":32,"column":4},"end":{"line":33,"column":29}},{"start":{"line":34,"column":4},"end":{"line":35,"column":31}},{"start":{"line":36,"column":4},"end":{"line":37,"column":37}},{"start":{"line":39,"column":4},"end":{"line":49,"column":7}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]}},"code":["var hasKey = require('lodash').has;","","// Channel, file, group, DM, user, usergroup","var RECOGNIZED_API_TYPE_PREFIXES = ['C', 'F', 'G', 'D', 'U', 'S'];","","","/**"," * Tests whether a supplied JSON object represents a Slack API type."," * @param {Object} obj"," * @returns {boolean}"," */","var isModelObj = function isModelObj(obj) {","  if (hasKey(obj, 'id')) {","    return RECOGNIZED_API_TYPE_PREFIXES.indexOf(obj.id.substr(0, 1)) !== -1;","  }","","  return false;","};","","","/**"," * Returns the model class for the JSON object from the Slack API."," */","var getModelClass = function getModelClass(obj) {","  var apiTypePrefix = obj.id.substr(0, 1);","","  switch (apiTypePrefix) {","    case 'C':","      return require('./channel');","    case 'F':","      return require('./file');","    case 'D':","      return require('./dm');","    case 'U':","      return require('./user');","    case 'S':","      return require('./user-group');","","    default:","      // The MPDM and Group classes share the same prefix, so do an extra check here","      if (apiTypePrefix === 'G') {","        if (obj.is_mpim) {","          return require('./mpdm');","        }","","        if (obj.is_group) {","          return require('./group');","        }","      }","  }","};","","","module.exports.isModelObj = isModelObj;","module.exports.getModelClass = getModelClass;",""],"l":{"1":1,"4":1,"12":1,"13":0,"14":0,"17":0,"24":1,"25":0,"27":0,"29":0,"31":0,"33":0,"35":0,"37":0,"41":0,"42":0,"43":0,"46":0,"47":0,"54":1,"55":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/dm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/dm.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"DM","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":18}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":37}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":26}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}}},"branchMap":{},"code":["/**"," * {@link https://api.slack.com/types/im|DM}"," */","","var inherits = require('inherits');","","var BaseChannel = require('./base-channel');","","","function DM(opts) {","  BaseChannel.call(this, 'DM', opts);","}","","inherits(DM, BaseChannel);","","","module.exports = DM;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/file.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/file.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"File","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":33}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}}},"branchMap":{},"code":["/**"," *"," */","","var inherits = require('inherits');","","var Model = require('./model');","","","function File(opts) {","  Model.call(this, 'File', opts);","}","","inherits(File, Model);","","","module.exports = File;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/group.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/group.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"Group","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}}},"branchMap":{},"code":["/**"," * {@link https://api.slack.com/types/group|Group}"," */","","var inherits = require('inherits');","","var ChannelGroup = require('./channel-group');","","","function Group(opts) {","  ChannelGroup.call(this, 'Group', opts);","}","","inherits(Group, ChannelGroup);","","","module.exports = Group;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/mpdm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/mpdm.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"MPDM","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":40}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}}},"branchMap":{},"code":["/**"," *"," */","","var inherits = require('inherits');","","var ChannelGroup = require('./channel-group');","","","function MPDM(opts) {","  ChannelGroup.call(this, 'MPDM', opts);","}","","inherits(MPDM, ChannelGroup);","","","module.exports = MPDM;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/user.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/user.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"User","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":20}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":33}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":22}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}}},"branchMap":{},"code":["/**"," *"," */","","var inherits = require('inherits');","","var Model = require('./model');","","","function User(opts) {","  Model.call(this, 'User', opts);","}","","inherits(User, Model);","","","module.exports = User;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/user-group.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/models/user-group.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"UserGroup","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":38}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}}},"branchMap":{},"code":["/**"," *"," */","","var inherits = require('inherits');","","var Model = require('./model');","","","function UserGroup(opts) {","  Model.call(this, 'UserGroup', opts);","}","","inherits(UserGroup, Model);","","","module.exports = UserGroup;",""],"l":{"5":1,"7":1,"10":1,"11":0,"14":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/groups.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/groups.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"handleGroupJoined","line":15,"loc":{"start":{"line":15,"column":24},"end":{"line":15,"column":71}}},"2":{"name":"handleGroupLeave","line":24,"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":97}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":35}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"6":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":48}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":28}},"9":{"start":{"line":24,"column":0},"end":{"line":36,"column":2}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":12}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":82}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":50}},"13":{"start":{"line":29,"column":2},"end":{"line":35,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"15":{"start":{"line":32,"column":6},"end":{"line":32,"column":31}},"16":{"start":{"line":34,"column":4},"end":{"line":34,"column":30}},"17":{"start":{"line":39,"column":0},"end":{"line":49,"column":2}},"18":{"start":{"line":52,"column":0},"end":{"line":52,"column":37}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]}},"code":["/**"," * Handlers for all RTM `group_` events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","var baseChannelHandlers = require('./base-channel');","var helpers = require('./helpers');","var models = require('../../models');","","","/** {@link https://api.slack.com/events/group_joined|group_joined} */","var handleGroupJoined = function handleGroupJoined(dataStore, message) {","  var group = new models.Group(message.channel);","  dataStore.setGroup(group);","};","","","/**"," * {@link https://api.slack.com/events/group_left|group_left}"," */","var handleGroupLeave = function handleGroupLeave(activeUserId, activeTeamId, dataStore, message) {","  var group;","  baseChannelHandlers.handleLeave(activeUserId, activeTeamId, dataStore, message);","","  group = dataStore.getGroupById(message.channel);","  if (group) {","    // TODO(leah): Maybe this should remove the group?","    if (group.members.length === 0) {","      group.is_archived = true;","    }","    dataStore.setGroup(group);","  }","};","","","var handlers = [","  [RTM_EVENTS.GROUP_ARCHIVE, baseChannelHandlers.handleArchive],","  [RTM_EVENTS.GROUP_CLOSE, helpers.noopMessage],","  [RTM_EVENTS.GROUP_JOINED, handleGroupJoined],","  [RTM_EVENTS.GROUP_LEFT, handleGroupLeave],","  [RTM_EVENTS.GROUP_MARKED, baseChannelHandlers.handleChannelGroupOrDMMarked],","  [RTM_EVENTS.GROUP_OPEN, helpers.noopMessage],","  [RTM_EVENTS.GROUP_UNARCHIVE, baseChannelHandlers.handleUnarchive],","  [RTM_EVENTS.GROUP_RENAME, baseChannelHandlers.handleRename],","  [RTM_EVENTS.GROUP_HISTORY_CHANGED, helpers.noopMessage],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"9":1,"10":1,"11":1,"15":1,"16":0,"17":0,"24":1,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"39":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/dm.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/dm.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"handleDMCreated","line":14,"loc":{"start":{"line":14,"column":22},"end":{"line":14,"column":67}}},"2":{"name":"changeDMOpenness","line":20,"loc":{"start":{"line":20,"column":23},"end":{"line":20,"column":77}}},"3":{"name":"handleDMClose","line":31,"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":63}}},"4":{"name":"handleDMOpen","line":37,"loc":{"start":{"line":37,"column":19},"end":{"line":37,"column":61}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"6":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":42}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":22}},"9":{"start":{"line":20,"column":0},"end":{"line":27,"column":2}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":48}},"11":{"start":{"line":23,"column":2},"end":{"line":26,"column":3}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":24}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":24}},"14":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":53}},"16":{"start":{"line":37,"column":0},"end":{"line":39,"column":2}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":52}},"18":{"start":{"line":42,"column":0},"end":{"line":48,"column":2}},"19":{"start":{"line":51,"column":0},"end":{"line":51,"column":37}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]}},"code":["/**"," * Handlers for all RTM `im_` events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","var baseChannelHandlers = require('./base-channel');","var helpers = require('./helpers');","var models = require('../../models');","","","/** {@link https://api.slack.com/events/im_created|im_created} */","var handleDMCreated = function handleDMCreated(dataStore, message) {","  var dm = new models.DM(message.channel);","  dataStore.setDM(dm);","};","","","var changeDMOpenness = function changeDMOpenness(dataStore, message, isOpen) {","  var dm = dataStore.getDMById(message.channel);","","  if (dm) {","    dm.is_open = isOpen;","    dataStore.setDM(dm);","  }","};","","","/** {@link https://api.slack.com/events/im_close|im_close} */","var handleDMClose = function handleDMClose(dataStore, message) {","  return changeDMOpenness(dataStore, message, false);","};","","","/** {@link https://api.slack.com/events/im_open|im_open} */","var handleDMOpen = function handleDMOpen(dataStore, message) {","  return changeDMOpenness(dataStore, message, true);","};","","","var handlers = [","  [RTM_EVENTS.IM_CREATED, handleDMCreated],","  [RTM_EVENTS.IM_MARKED, baseChannelHandlers.handleChannelGroupOrDMMarked],","  [RTM_EVENTS.IM_OPEN, handleDMOpen],","  [RTM_EVENTS.IM_CLOSE, handleDMClose],","  [RTM_EVENTS.IM_HISTORY_CHANGED, helpers.noopMessage],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"8":1,"9":1,"10":1,"14":1,"15":0,"16":0,"20":1,"21":0,"23":0,"24":0,"25":0,"31":1,"32":0,"37":1,"38":0,"42":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/presence.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/presence.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"handleManualPresenceChange","line":11,"loc":{"start":{"line":11,"column":33},"end":{"line":12,"column":50}}},"2":{"name":"handlePresenceChange","line":19,"loc":{"start":{"line":19,"column":27},"end":{"line":19,"column":77}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":11,"column":0},"end":{"line":15,"column":2}},"4":{"start":{"line":13,"column":2},"end":{"line":13,"column":49}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":35}},"6":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":49}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":35}},"9":{"start":{"line":25,"column":0},"end":{"line":28,"column":2}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}}},"branchMap":{},"code":["/**"," * Event handlers for RTM presence change events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","","/** {@link https://api.slack.com/events/manual_presence_change|manual_presence_change} */","var handleManualPresenceChange = function handleManualPresenceChange(","  activeUserId, activeTeamId, dataStore, message) {","  var user = dataStore.getUserById(activeUserId);","  user.presence = message.presence;","};","","","/** {@link https://api.slack.com/events/presence_change|presence_change} */","var handlePresenceChange = function handlePresenceChange(dataStore, message) {","  var user = dataStore.getUserById(message.user);","  user.presence = message.presence;","};","","","var handlers = [","  [RTM_EVENTS.MANUAL_PRESENCE_CHANGE, handleManualPresenceChange],","  [RTM_EVENTS.PRESENCE_CHANGE, handlePresenceChange],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"11":1,"13":0,"14":0,"19":1,"20":0,"21":0,"25":1,"31":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/stars.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/stars.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":11,"column":0},"end":{"line":14,"column":2}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"branchMap":{},"code":["/**"," * Handlers for all RTM `star_` events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","var helpers = require('./helpers');","","","var handlers = [","  [RTM_EVENTS.STAR_ADDED, helpers.noopMessage],","  [RTM_EVENTS.STAR_REMOVED, helpers.noopMessage],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"8":1,"11":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/team.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/team.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"handleTeamDomainChange","line":12,"loc":{"start":{"line":12,"column":29},"end":{"line":13,"column":50}}},"2":{"name":"handleTeamRename","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":97}}},"3":{"name":"handleTeamPrefChange","line":30,"loc":{"start":{"line":30,"column":27},"end":{"line":31,"column":50}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":60}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"4":{"start":{"line":12,"column":0},"end":{"line":18,"column":2}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":49}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":31}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"9":{"start":{"line":22,"column":0},"end":{"line":26,"column":2}},"10":{"start":{"line":23,"column":2},"end":{"line":23,"column":49}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"13":{"start":{"line":30,"column":0},"end":{"line":35,"column":2}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":49}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":43}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":26}},"17":{"start":{"line":38,"column":0},"end":{"line":43,"column":2}},"18":{"start":{"line":46,"column":0},"end":{"line":46,"column":37}}},"branchMap":{},"code":["/**"," * Handlers for all RTM `team_` events."," */","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","var helpers = require('./helpers');","","","/** {@link https://api.slack.com/events/team_domain_change|team_domain_change} */","var handleTeamDomainChange = function handleTeamDomainChange(","  activeUserId, activeTeamId, dataStore, message) {","  var team = dataStore.getTeamById(activeTeamId);","  team.domain = message.domain;","  team.url = message.url;","  dataStore.setTeam(team);","};","","","/** {@link https://api.slack.com/events/team_rename|team_rename} */","var handleTeamRename = function handleTeamRename(activeUserId, activeTeamId, dataStore, message) {","  var team = dataStore.getTeamById(activeTeamId);","  team.name = message.name;","  dataStore.setTeam(team);","};","","","/** {@link https://api.slack.com/events/team_pref_change|team_pref_change} */","var handleTeamPrefChange = function handleTeamPrefChange(","  activeUserId, activeTeamId, dataStore, message) {","  var team = dataStore.getTeamById(activeTeamId);","  team.prefs[message.name] = message.value;","  dataStore.setTeam(team);","};","","","var handlers = [","  [RTM_EVENTS.TEAM_DOMAIN_CHANGE, handleTeamDomainChange],","  [RTM_EVENTS.TEAM_RENAME, handleTeamRename],","  [RTM_EVENTS.TEAM_PREF_CHANGE, handleTeamPrefChange],","  [RTM_EVENTS.TEAM_JOIN, helpers.handleNewOrUpdatedUser],","];","","","module.exports = zipObject(handlers);",""],"l":{"4":1,"6":1,"8":1,"12":1,"14":0,"15":0,"16":0,"17":0,"22":1,"23":0,"24":0,"25":0,"30":1,"32":0,"33":0,"34":0,"38":1,"46":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/user.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/user.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"handleUserTyping","line":13,"loc":{"start":{"line":13,"column":23},"end":{"line":13,"column":69}}},"2":{"name":"handlePrefChange","line":26,"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":97}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"4":{"start":{"line":13,"column":0},"end":{"line":22,"column":2}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":49}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":58}},"7":{"start":{"line":17,"column":2},"end":{"line":21,"column":3}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"9":{"start":{"line":26,"column":0},"end":{"line":29,"column":2}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":49}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":43}},"12":{"start":{"line":32,"column":0},"end":{"line":36,"column":2}},"13":{"start":{"line":39,"column":0},"end":{"line":39,"column":37}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":13}},{"start":{"line":17,"column":17},"end":{"line":17,"column":21}}]}},"code":["/**"," * Handlers for all RTM `user_*` events."," */","","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","var helpers = require('./helpers');","","","/** {@link https://api.slack.com/events/user_typing|user_typing} */","var handleUserTyping = function handleUserTyping(dataStore, message) {","  var user = dataStore.getUserById(message.user);","  var channel = dataStore.getChannelById(message.channel);","","  if (channel && user) {","    channel.startedTyping(user.id);","  } else {","    // TODO(leah): Logs for when channel / user aren't found.","  }","};","","","/** {@link https://api.slack.com/events/pref_change|pref_change} */","var handlePrefChange = function handlePrefChange(activeUserId, activeTeamId, dataStore, message) {","  var user = dataStore.getUserById(activeUserId);","  user.prefs[message.name] = message.value;","};","","","var handlers = [","  [RTM_EVENTS.PREF_CHANGE, handlePrefChange],","  [RTM_EVENTS.USER_TYPING, handleUserTyping],","  [RTM_EVENTS.USER_CHANGE, helpers.handleNewOrUpdatedUser],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"7":1,"9":1,"13":1,"14":0,"15":0,"17":0,"18":0,"26":1,"27":0,"28":0,"32":1,"39":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/message.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/message.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"addMessageToChannel","line":12,"loc":{"start":{"line":12,"column":26},"end":{"line":12,"column":75}}},"2":{"name":"baseChannelJoin","line":22,"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":67}}},"3":{"name":"baseChannelLeave","line":37,"loc":{"start":{"line":37,"column":23},"end":{"line":37,"column":69}}},"4":{"name":"baseChannelMessageDeleted","line":50,"loc":{"start":{"line":50,"column":32},"end":{"line":50,"column":87}}},"5":{"name":"baseChannelMessageChanged","line":59,"loc":{"start":{"line":59,"column":32},"end":{"line":59,"column":87}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":76}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":100}},"5":{"start":{"line":12,"column":0},"end":{"line":15,"column":2}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":71}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},"8":{"start":{"line":22,"column":0},"end":{"line":30,"column":2}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":71}},"10":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":43}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":34}},"13":{"start":{"line":37,"column":0},"end":{"line":46,"column":2}},"14":{"start":{"line":38,"column":2},"end":{"line":38,"column":71}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":62}},"16":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":47}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":34}},"19":{"start":{"line":50,"column":0},"end":{"line":55,"column":2}},"20":{"start":{"line":51,"column":2},"end":{"line":51,"column":71}},"21":{"start":{"line":52,"column":2},"end":{"line":52,"column":74}},"22":{"start":{"line":53,"column":2},"end":{"line":53,"column":42}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":34}},"24":{"start":{"line":59,"column":0},"end":{"line":63,"column":2}},"25":{"start":{"line":60,"column":2},"end":{"line":60,"column":71}},"26":{"start":{"line":61,"column":2},"end":{"line":61,"column":37}},"27":{"start":{"line":62,"column":2},"end":{"line":62,"column":34}},"28":{"start":{"line":66,"column":0},"end":{"line":75,"column":2}},"29":{"start":{"line":78,"column":0},"end":{"line":78,"column":37}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]}},"code":["/**"," * Handlers for all `message` event subtypes."," */","","var findIndex = require('lodash').findIndex;","var zipObject = require('lodash').zipObject;","","var MESSAGE_SUBTYPES = require('../../clients/events/rtm').MESSAGE_SUBTYPES;","var makeMessageEventWithSubtype = require('../../clients/events/utils').makeMessageEventWithSubtype;","","","var addMessageToChannel = function addMessageToChannel(dataStore, message) {","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","  baseChannel.addMessage(message);","};","","","/**"," * {@link https://api.slack.com/events/message/channel_join|channel_join}"," * {@link https://api.slack.com/events/message/group_join|group_join}"," */","var baseChannelJoin = function baseChannelJoin(dataStore, message) {","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","","  if (baseChannel.members.indexOf(message.user) === -1) {","    baseChannel.members.push(message.user);","  }","","  baseChannel.addMessage(message);","};","","","/**"," * {@link https://api.slack.com/events/message/channel_join|channel_join}"," * {@link https://api.slack.com/events/message/group_join|group_join}"," */","var baseChannelLeave = function baseChannelLeave(dataStore, message) {","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","","  var memberIndex = baseChannel.members.indexOf(message.user);","  if (memberIndex !== -1) {","    baseChannel.members.splice(memberIndex, 1);","  }","","  baseChannel.addMessage(message);","};","","","/** {@link https://api.slack.com/events/message/message_deleted|message_deleted} */","var baseChannelMessageDeleted = function baseChannelMessageDeleted(dataStore, message) {","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","  var msgIndex = findIndex(baseChannel.history, 'ts', message.deleted_ts);","  baseChannel.history.splice(msgIndex, 1);","  baseChannel.addMessage(message);","};","","","/** {@link https://api.slack.com/events/message/message_changed|message_changed} */","var baseChannelMessageChanged = function baseChannelMessageChanged(dataStore, message) {","  var baseChannel = dataStore.getChannelGroupOrDMById(message.channel);","  baseChannel.updateMessage(message);","  baseChannel.addMessage(message);","};","","","var handlers = [","  [makeMessageEventWithSubtype(MESSAGE_SUBTYPES.MESSAGE_DELETED), baseChannelMessageDeleted],","  [makeMessageEventWithSubtype(MESSAGE_SUBTYPES.MESSAGE_CHANGED), baseChannelMessageChanged],","  [makeMessageEventWithSubtype(MESSAGE_SUBTYPES.CHANNEL_JOIN), baseChannelJoin],","  [makeMessageEventWithSubtype(MESSAGE_SUBTYPES.CHANNEL_LEAVE), baseChannelLeave],","  [makeMessageEventWithSubtype(MESSAGE_SUBTYPES.GROUP_JOIN), baseChannelJoin],","  [makeMessageEventWithSubtype(MESSAGE_SUBTYPES.GROUP_LEAVE), baseChannelLeave],","  // Add in a default handler for all other message subtypes","  [makeMessageEventWithSubtype('rtm_client_add_message'), addMessageToChannel],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"6":1,"8":1,"9":1,"12":1,"13":0,"14":0,"22":1,"23":0,"25":0,"26":0,"29":0,"37":1,"38":0,"40":0,"41":0,"42":0,"45":0,"50":1,"51":0,"52":0,"53":0,"54":0,"59":1,"60":0,"61":0,"62":0,"66":1,"78":1}},"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/reactions.js":{"path":"/home/travis/build/npmtest/node-npmtest-slack-client/node_modules/slack-client/lib/data-store/message-handlers/reactions.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"toggleReactionForMessage","line":18,"loc":{"start":{"line":18,"column":31},"end":{"line":18,"column":94}}},"2":{"name":"toggleReactionForFile","line":66,"loc":{"start":{"line":66,"column":28},"end":{"line":66,"column":61}}},"3":{"name":"toggleReactionForFileComment","line":71,"loc":{"start":{"line":71,"column":35},"end":{"line":71,"column":75}}},"4":{"name":"toggleReaction","line":76,"loc":{"start":{"line":76,"column":21},"end":{"line":76,"column":74}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":60}},"5":{"start":{"line":18,"column":0},"end":{"line":63,"column":2}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":16}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":64}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":47}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":44}},"13":{"start":{"line":32,"column":2},"end":{"line":62,"column":3}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":76}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":47}},"16":{"start":{"line":36,"column":4},"end":{"line":61,"column":5}},"17":{"start":{"line":37,"column":6},"end":{"line":37,"column":72}},"18":{"start":{"line":39,"column":6},"end":{"line":54,"column":7}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":42}},"20":{"start":{"line":46,"column":8},"end":{"line":53,"column":9}},"21":{"start":{"line":47,"column":10},"end":{"line":47,"column":52}},"22":{"start":{"line":49,"column":10},"end":{"line":49,"column":59}},"23":{"start":{"line":50,"column":10},"end":{"line":52,"column":11}},"24":{"start":{"line":51,"column":12},"end":{"line":51,"column":48}},"25":{"start":{"line":56,"column":6},"end":{"line":60,"column":9}},"26":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"27":{"start":{"line":71,"column":0},"end":{"line":73,"column":2}},"28":{"start":{"line":76,"column":0},"end":{"line":86,"column":2}},"29":{"start":{"line":77,"column":2},"end":{"line":77,"column":35}},"30":{"start":{"line":79,"column":2},"end":{"line":85,"column":3}},"31":{"start":{"line":80,"column":4},"end":{"line":80,"column":55}},"32":{"start":{"line":81,"column":9},"end":{"line":85,"column":3}},"33":{"start":{"line":82,"column":4},"end":{"line":82,"column":62}},"34":{"start":{"line":83,"column":9},"end":{"line":85,"column":3}},"35":{"start":{"line":84,"column":4},"end":{"line":84,"column":58}},"36":{"start":{"line":89,"column":0},"end":{"line":92,"column":2}},"37":{"start":{"line":95,"column":0},"end":{"line":95,"column":37}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":21},"end":{"line":28,"column":37}},{"start":{"line":28,"column":41},"end":{"line":28,"column":43}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"4":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":60},"end":{"line":37,"column":61}},{"start":{"line":37,"column":64},"end":{"line":37,"column":66}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":6},"end":{"line":39,"column":6}},{"start":{"line":39,"column":6},"end":{"line":39,"column":6}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":8}},{"start":{"line":46,"column":8},"end":{"line":46,"column":8}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":10},"end":{"line":50,"column":10}},{"start":{"line":50,"column":10},"end":{"line":50,"column":10}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"9":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":9},"end":{"line":81,"column":9}},{"start":{"line":81,"column":9},"end":{"line":81,"column":9}}]},"10":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":9},"end":{"line":83,"column":9}},{"start":{"line":83,"column":9},"end":{"line":83,"column":9}}]}},"code":["/**"," * Handlers for all RTM `reaction_xxx` events."," */","","var findIndex = require('lodash').findIndex;","var partial = require('lodash').partial;","var zipObject = require('lodash').zipObject;","","var RTM_EVENTS = require('../../clients/events/rtm').EVENTS;","","","/**"," *"," * @param {Object} dataStore"," * @param {Object} message"," * @param {boolean} isAdded"," */","var toggleReactionForMessage = function toggleReactionForMessage(dataStore, message, isAdded) {","  var reaction;","  var reactionIndex;","  var userIndex;","  var item = message.item;","","  var channel = dataStore.getChannelGroupOrDMById(item.channel);","  var msgObj = channel.getMessageByTs(item.ts);","","  // Ensure a reactions array is available on the message object","  msgObj.reactions = msgObj.reactions || [];","","  // If there's a message in the local cache, update it, otherwise do nothing as the message","  // with reaction will get populated when it's next needed from history.","  if (message) {","    reactionIndex = findIndex(msgObj.reactions, { name: message.reaction });","    reaction = msgObj.reactions[reactionIndex];","","    if (reaction) {","      reaction.count = Math.max(reaction.count + (isAdded ? 1 : -1), 0);","","      if (isAdded) {","        // NOTE: This will not necessarily be consistent with the users array if the","        //       message is pulled from the server. This is because the server only stores","        //       X users per reaction, whereas the client will store as many as it's","        //       notified about.","        reaction.users.push(message.user);","      } else {","        if (reaction.count === 0) {","          msgObj.reactions.splice(reactionIndex, 1);","        } else {","          userIndex = reaction.users.indexOf(message.user);","          if (userIndex > -1) {","            reaction.users.splice(userIndex, 1);","          }","        }","      }","    } else {","      msgObj.reactions.push({","        name: message.reaction,","        users: [message.user],","        count: 1,","      });","    }","  }","};","","","var toggleReactionForFile = function toggleReactionForFile() {","  // TODO(leah): Update this once files are supported in the data-store implementation","};","","","var toggleReactionForFileComment = function toggleReactionForFileComment() {","  // TODO(leah): Update this once files are supported in the data-store implementation","};","","","var toggleReaction = function toggleReaction(isAdded, dataStore, message) {","  var itemType = message.item.type;","","  if (itemType === 'file') {","    toggleReactionForFile(dataStore, message, isAdded);","  } else if (itemType === 'file_comment') {","    toggleReactionForFileComment(dataStore, message, isAdded);","  } else if (itemType === 'message') {","    toggleReactionForMessage(dataStore, message, isAdded);","  }","};","","","var handlers = [","  [RTM_EVENTS.REACTION_ADDED, partial(toggleReaction, true)],","  [RTM_EVENTS.REACTION_REMOVED, partial(toggleReaction, false)],","];","","","module.exports = zipObject(handlers);",""],"l":{"5":1,"6":1,"7":1,"9":1,"18":1,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"28":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"44":0,"46":0,"47":0,"49":0,"50":0,"51":0,"56":0,"66":1,"71":1,"76":1,"77":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"89":1,"95":1}}}